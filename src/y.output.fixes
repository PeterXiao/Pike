   0  $accept : all $end

   1  all : program
   2      | program TOK_LEX_EOF

   3  program : program def
   4          | program ';'
   5          |

   6  real_string_or_identifier : TOK_IDENTIFIER
   7                            | real_string_constant

   8  optional_rename_inherit : ':' real_string_or_identifier
   9                          | ':' bad_identifier
  10                          | ':' error
  11                          |

  12  low_program_ref : string_constant
  13                  | idents

  14  program_ref : low_program_ref

  15  $$1 :

  16  inherit_ref : $$1 low_program_ref

  17  inheritance : modifiers TOK_INHERIT inherit_ref optional_rename_inherit ';'
  18              | modifiers TOK_INHERIT inherit_ref error ';'
  19              | modifiers TOK_INHERIT inherit_ref error TOK_LEX_EOF
  20              | modifiers TOK_INHERIT inherit_ref error '}'
  21              | modifiers TOK_INHERIT error ';'
  22              | modifiers TOK_INHERIT error TOK_LEX_EOF
  23              | modifiers TOK_INHERIT error '}'

  24  import : TOK_IMPORT idents ';'
  25         | TOK_IMPORT string ';'
  26         | TOK_IMPORT error ';'
  27         | TOK_IMPORT error TOK_LEX_EOF
  28         | TOK_IMPORT error '}'

  29  constant_name : TOK_IDENTIFIER '=' safe_expr0
  30                | bad_identifier '=' safe_expr0
  31                | error '=' safe_expr0

  32  constant_list : constant_name
  33                | constant_list ',' constant_name

  34  constant : modifiers TOK_CONSTANT constant_list ';'
  35           | modifiers TOK_CONSTANT error ';'
  36           | modifiers TOK_CONSTANT error TOK_LEX_EOF
  37           | modifiers TOK_CONSTANT error '}'

  38  block_or_semi : block
  39                | ';'
  40                | TOK_LEX_EOF
  41                | error

  42  open_paren_with_line_info : '('

  43  close_paren_or_missing : ')'
  44                         |

  45  close_brace_or_missing : '}'
  46                         |

  47  close_brace_or_eof : '}'
  48                     | TOK_LEX_EOF

  49  open_bracket_with_line_info : '['

  50  close_bracket_or_missing : ']'
  51                           |

  52  start_function :

  53  optional_constant :
  54                    | TOK_CONSTANT

  55  $$2 :

  56  $$3 :

  57  def : modifiers optional_attributes simple_type optional_constant TOK_IDENTIFIER start_function '(' $$2 arguments close_paren_or_missing $$3 block_or_semi
  58      | modifiers optional_attributes simple_type optional_constant TOK_IDENTIFIER start_function error

  59  $$4 :

  60  def : modifiers optional_attributes simple_type optional_constant bad_identifier $$4 '(' arguments ')' block_or_semi
  61      | modifiers optional_attributes simple_type optional_constant name_list ';'
  62      | inheritance
  63      | import
  64      | constant
  65      | modifiers class
  66      | modifiers enum
  67      | typedef
  68      | error TOK_LEX_EOF
  69      | error ';'
  70      | error '}'

  71  $$5 :

  72  def : modifiers '{' $$5 program close_brace_or_eof

  73  optional_dot_dot_dot : TOK_DOT_DOT_DOT
  74                       | TOK_DOT_DOT
  75                       |

  76  optional_identifier : TOK_IDENTIFIER
  77                      | bad_identifier
  78                      |

  79  new_arg_name : full_type optional_dot_dot_dot optional_identifier

  80  func_args : '(' arguments close_paren_or_missing

  81  arguments : optional_comma
  82            | arguments2 optional_comma

  83  arguments2 : new_arg_name
  84             | arguments2 ',' new_arg_name
  85             | arguments2 ':' new_arg_name

  86  modifier : TOK_FINAL_ID
  87           | TOK_STATIC
  88           | TOK_EXTERN
  89           | TOK_OPTIONAL
  90           | TOK_PRIVATE
  91           | TOK_LOCAL_ID
  92           | TOK_PUBLIC
  93           | TOK_PROTECTED
  94           | TOK_INLINE
  95           | TOK_VARIANT

  96  magic_identifiers1 : TOK_FINAL_ID
  97                     | TOK_STATIC
  98                     | TOK_EXTERN
  99                     | TOK_PRIVATE
 100                     | TOK_LOCAL_ID
 101                     | TOK_PUBLIC
 102                     | TOK_PROTECTED
 103                     | TOK_INLINE
 104                     | TOK_OPTIONAL
 105                     | TOK_VARIANT

 106  magic_identifiers2 : TOK_VOID_ID
 107                     | TOK_MIXED_ID
 108                     | TOK_ARRAY_ID
 109                     | TOK_ATTRIBUTE_ID
 110                     | TOK_DEPRECATED_ID
 111                     | TOK_MAPPING_ID
 112                     | TOK_MULTISET_ID
 113                     | TOK_OBJECT_ID
 114                     | TOK_FUNCTION_ID
 115                     | TOK_FUNCTION_NAME
 116                     | TOK_PROGRAM_ID
 117                     | TOK_STRING_ID
 118                     | TOK_FLOAT_ID
 119                     | TOK_INT_ID
 120                     | TOK_ENUM
 121                     | TOK_TYPEDEF

 122  magic_identifiers3 : TOK_IF
 123                     | TOK_DO
 124                     | TOK_FOR
 125                     | TOK_WHILE
 126                     | TOK_ELSE
 127                     | TOK_FOREACH
 128                     | TOK_CATCH
 129                     | TOK_GAUGE
 130                     | TOK_CLASS
 131                     | TOK_BREAK
 132                     | TOK_CASE
 133                     | TOK_CONSTANT
 134                     | TOK_CONTINUE
 135                     | TOK_DEFAULT
 136                     | TOK_IMPORT
 137                     | TOK_INHERIT
 138                     | TOK_LAMBDA
 139                     | TOK_PREDEF
 140                     | TOK_RETURN
 141                     | TOK_SSCANF
 142                     | TOK_SWITCH
 143                     | TOK_TYPEOF
 144                     | TOK_GLOBAL

 145  magic_identifiers : magic_identifiers1
 146                    | magic_identifiers2
 147                    | magic_identifiers3

 148  magic_identifier : TOK_IDENTIFIER
 149                   | TOK_RESERVED
 150                   | magic_identifiers

 151  modifiers : modifier_list

 152  modifier_list :
 153                | modifier_list modifier

 154  attribute : TOK_ATTRIBUTE_ID '(' string_constant optional_comma ')'
 155            | TOK_DEPRECATED_ID '(' ')'
 156            | TOK_DEPRECATED_ID

 157  optional_attributes :
 158                      | optional_attributes attribute

 159  cast : open_paren_with_line_info type ')'

 160  soft_cast : open_bracket_with_line_info type ']'

 161  type2 : type
 162        | identifier_type

 163  simple_type : full_type

 164  simple_type2 : type2

 165  full_type : full_type '|' type3
 166            | type3

 167  type : type '|' type3
 168       | basic_type

 169  type3 : basic_type
 170        | identifier_type

 171  basic_type : TOK_FLOAT_ID
 172             | TOK_VOID_ID
 173             | TOK_MIXED_ID
 174             | TOK_AUTO_ID
 175             | TOK_STRING_ID opt_string_width
 176             | TOK_INT_ID opt_int_range
 177             | TOK_MAPPING_ID opt_mapping_type
 178             | TOK_FUNCTION_ID opt_function_type
 179             | TOK_OBJECT_ID opt_object_type
 180             | TOK_PROGRAM_ID opt_program_type
 181             | TOK_ARRAY_ID opt_array_type
 182             | TOK_MULTISET_ID opt_array_type
 183             | typeof
 184             | TOK_ATTRIBUTE_ID '(' string_constant ',' full_type ')'
 185             | TOK_ATTRIBUTE_ID '(' string_constant error ')'
 186             | TOK_ATTRIBUTE_ID error
 187             | TOK_DEPRECATED_ID '(' full_type ')'
 188             | TOK_DEPRECATED_ID '(' error ')'

 189  identifier_type : unqualified_idents

 190  number_or_maxint :
 191                   | TOK_NUMBER
 192                   | '-' TOK_NUMBER

 193  number_or_minint :
 194                   | TOK_NUMBER
 195                   | '-' TOK_NUMBER

 196  expected_dot_dot : TOK_DOT_DOT
 197                   | TOK_DOT_DOT_DOT

 198  opt_int_range :
 199                | '(' TOK_BITS ')'
 200                | '(' number_or_minint expected_dot_dot number_or_maxint ')'
 201                | '(' error ')'

 202  opt_string_width : opt_int_range

 203  opt_object_type :

 204  $$6 :

 205  opt_object_type : $$6 '(' program_ref ')'

 206  opt_program_type :
 207                   | '(' full_type ')'
 208                   | '(' error ')'

 209  $$7 :

 210  $$8 :

 211  opt_function_type : '(' $$7 function_type_list optional_dot_dot_dot ':' $$8 full_type ')'
 212                    |

 213  function_type_list : optional_comma
 214                     | function_type_list2 optional_comma

 215  function_type_list2 : full_type

 216  $$9 :

 217  function_type_list2 : function_type_list2 ',' $$9 full_type

 218  opt_array_type : '(' full_type ')'
 219                 |

 220  $$10 :

 221  $$11 :

 222  $$12 :

 223  opt_mapping_type : '(' $$10 full_type ':' $$11 full_type $$12 ')'
 224                   |

 225  name_list : new_name
 226            | name_list ',' new_name

 227  new_name : TOK_IDENTIFIER
 228           | bad_identifier

 229  $$13 :

 230  new_name : TOK_IDENTIFIER '=' $$13 expr0
 231           | TOK_IDENTIFIER '=' error
 232           | TOK_IDENTIFIER '=' TOK_LEX_EOF
 233           | bad_identifier '=' expr0

 234  new_local_name : TOK_IDENTIFIER
 235                 | bad_identifier

 236  $$14 :

 237  new_local_name : TOK_IDENTIFIER '=' $$14 expr0

 238  $$15 :

 239  new_local_name : bad_identifier '=' $$15 expr0

 240  $$16 :

 241  new_local_name : TOK_IDENTIFIER '=' $$16 error

 242  $$17 :

 243  new_local_name : TOK_IDENTIFIER '=' $$17 TOK_LEX_EOF

 244  line_number_info :

 245  $$18 :

 246  $$19 :

 247  block : '{' $$18 line_number_info $$19 statements end_block

 248  end_block : '}'
 249            | TOK_LEX_EOF

 250  failsafe_block : block
 251                 | error
 252                 | TOK_LEX_EOF

 253  local_name_list : new_local_name
 254                  | local_name_list ',' new_local_name

 255  local_constant_name : TOK_IDENTIFIER '=' safe_expr0
 256                      | bad_identifier '=' safe_expr0
 257                      | error '=' safe_expr0

 258  local_constant_list : local_constant_name
 259                      | local_constant_list ',' local_constant_name

 260  local_constant : TOK_CONSTANT local_constant_list ';'
 261                 | TOK_CONSTANT error ';'
 262                 | TOK_CONSTANT error TOK_LEX_EOF
 263                 | TOK_CONSTANT error '}'

 264  statements :
 265             | statements statement

 266  statement_with_semicolon : unused2 expected_semicolon

 267  normal_label_statement : statement_with_semicolon
 268                         | import
 269                         | cond
 270                         | return
 271                         | local_constant
 272                         | block
 273                         | break expected_semicolon
 274                         | continue expected_semicolon
 275                         | error ';'
 276                         | error TOK_LEX_EOF
 277                         | error '}'
 278                         | ';'

 279  statement : normal_label_statement
 280            | while
 281            | do
 282            | for
 283            | foreach
 284            | switch
 285            | case
 286            | default
 287            | labeled_statement

 288  $$20 :

 289  labeled_statement : TOK_IDENTIFIER $$20 ':' statement

 290  optional_label : TOK_IDENTIFIER
 291                 |

 292  break : TOK_BREAK optional_label

 293  default : TOK_DEFAULT ':'
 294          | TOK_DEFAULT

 295  continue : TOK_CONTINUE optional_label

 296  start_lambda :

 297  implicit_identifier :

 298  $$21 :

 299  lambda : TOK_LAMBDA line_number_info implicit_identifier start_lambda func_args $$21 failsafe_block
 300         | TOK_LAMBDA line_number_info implicit_identifier start_lambda error

 301  $$22 :

 302  local_function : TOK_IDENTIFIER start_function func_args $$22 failsafe_block
 303                 | TOK_IDENTIFIER start_function error

 304  create_arg : modifiers simple_type optional_dot_dot_dot TOK_IDENTIFIER
 305             | modifiers simple_type bad_identifier

 306  create_arguments2 : create_arg
 307                    | create_arguments2 ',' create_arg
 308                    | create_arguments2 ':' create_arg

 309  create_arguments : optional_comma
 310                   | create_arguments2 optional_comma

 311  optional_create_arguments :
 312                            | '(' create_arguments close_paren_or_missing

 313  $$23 :

 314  failsafe_program : '{' program $$23 end_block
 315                   | error
 316                   | TOK_LEX_EOF

 317  $$24 :

 318  $$25 :

 319  class : TOK_CLASS line_number_info optional_identifier $$24 $$25 optional_create_arguments failsafe_program

 320  simple_identifier : TOK_IDENTIFIER
 321                    | bad_identifier

 322  enum_value :
 323             | '=' safe_expr0

 324  enum_def :
 325           | simple_identifier enum_value

 326  propagated_enum_value :

 327  enum_list : enum_def
 328            | enum_list ',' propagated_enum_value enum_def
 329            | error

 330  $$26 :

 331  $$27 :

 332  $$28 :

 333  enum : TOK_ENUM $$26 optional_identifier '{' $$27 enum_list $$28 end_block

 334  typedef : modifiers TOK_TYPEDEF full_type simple_identifier ';'

 335  $$29 :

 336  $$30 :

 337  cond : TOK_IF $$29 line_number_info $$30 '(' safe_comma_expr end_cond statement optional_else_part

 338  end_cond : ')'
 339           | '}'
 340           | TOK_LEX_EOF

 341  optional_else_part :
 342                     | TOK_ELSE statement

 343  safe_lvalue : lvalue
 344              | error

 345  safe_expr0 : expr0
 346             | TOK_LEX_EOF
 347             | error

 348  foreach_optional_lvalue :
 349                          | safe_lvalue

 350  foreach_lvalues : ',' safe_lvalue
 351                  | ';' foreach_optional_lvalue ';' foreach_optional_lvalue

 352  $$31 :

 353  $$32 :

 354  $$33 :

 355  foreach : TOK_FOREACH $$31 line_number_info $$32 '(' expr0 foreach_lvalues end_cond $$33 statement

 356  do : TOK_DO line_number_info statement TOK_WHILE '(' safe_comma_expr end_cond expected_semicolon
 357     | TOK_DO line_number_info statement TOK_WHILE TOK_LEX_EOF
 358     | TOK_DO line_number_info statement TOK_LEX_EOF

 359  expected_semicolon : ';'
 360                     | TOK_LEX_EOF

 361  $$34 :

 362  $$35 :

 363  for : TOK_FOR $$34 line_number_info $$35 '(' unused expected_semicolon for_expr expected_semicolon unused end_cond statement

 364  $$36 :

 365  $$37 :

 366  while : TOK_WHILE $$36 line_number_info $$37 '(' safe_comma_expr end_cond statement

 367  for_expr :
 368           | safe_comma_expr

 369  $$38 :

 370  $$39 :

 371  switch : TOK_SWITCH $$38 line_number_info $$39 '(' safe_comma_expr end_cond statement

 372  case : TOK_CASE safe_comma_expr expected_colon
 373       | TOK_CASE safe_comma_expr expected_dot_dot optional_comma_expr expected_colon
 374       | TOK_CASE expected_dot_dot safe_comma_expr expected_colon

 375  expected_colon : ':'
 376                 | ';'
 377                 | '}'
 378                 | TOK_LEX_EOF

 379  return : TOK_RETURN expected_semicolon
 380         | TOK_RETURN safe_comma_expr expected_semicolon

 381  unused :
 382         | safe_comma_expr

 383  unused2 : comma_expr

 384  optional_comma_expr :
 385                      | safe_comma_expr

 386  safe_comma_expr : comma_expr
 387                  | error

 388  comma_expr : comma_expr2
 389             | simple_type2 local_name_list
 390             | simple_type2 local_function

 391  comma_expr2 : expr0
 392              | comma_expr2 ',' expr0

 393  splice_expr : expr0
 394              | '@' expr0

 395  expr0 : expr01
 396        | expr4 '=' expr0
 397        | expr4 '=' error
 398        | open_bracket_with_line_info low_lvalue_list ']' '=' expr0
 399        | expr4 assign expr0
 400        | expr4 assign error
 401        | open_bracket_with_line_info low_lvalue_list ']' assign expr0
 402        | open_bracket_with_line_info low_lvalue_list ']' error

 403  expr01 : expr1
 404         | expr1 '?' expr01 ':' expr01

 405  assign : TOK_AND_EQ
 406         | TOK_OR_EQ
 407         | TOK_XOR_EQ
 408         | TOK_LSH_EQ
 409         | TOK_RSH_EQ
 410         | TOK_ADD_EQ
 411         | TOK_SUB_EQ
 412         | TOK_MULT_EQ
 413         | TOK_MOD_EQ
 414         | TOK_DIV_EQ

 415  optional_comma :
 416                 | ','

 417  expr_list :
 418            | expr_list2 optional_comma

 419  expr_list2 : splice_expr
 420             | expr_list2 ',' splice_expr

 421  m_expr_list :
 422              | m_expr_list2 optional_comma

 423  m_expr_list2 : assoc_pair
 424               | m_expr_list2 ',' assoc_pair
 425               | m_expr_list2 ',' error

 426  assoc_pair : expr0 expected_colon expr0
 427             | expr0 expected_colon error

 428  expr1 : expr2
 429        | expr1 TOK_LOR expr1
 430        | expr1 TOK_LAND expr1
 431        | expr1 '|' expr1
 432        | expr1 '^' expr1
 433        | expr1 '&' expr1
 434        | expr1 TOK_EQ expr1
 435        | expr1 TOK_NE expr1
 436        | expr1 '>' expr1
 437        | expr1 TOK_GE expr1
 438        | expr1 '<' expr1
 439        | expr1 TOK_LE expr1
 440        | expr1 TOK_LSH expr1
 441        | expr1 TOK_RSH expr1
 442        | expr1 '+' expr1
 443        | expr1 '-' expr1
 444        | expr1 '*' expr1
 445        | expr1 '%' expr1
 446        | expr1 '/' expr1
 447        | expr1 TOK_LOR error
 448        | expr1 TOK_LAND error
 449        | expr1 '|' error
 450        | expr1 '^' error
 451        | expr1 '&' error
 452        | expr1 TOK_EQ error
 453        | expr1 TOK_NE error
 454        | expr1 '>' error
 455        | expr1 TOK_GE error
 456        | expr1 '<' error
 457        | expr1 TOK_LE error
 458        | expr1 TOK_LSH error
 459        | expr1 TOK_RSH error
 460        | expr1 '+' error
 461        | expr1 '-' error
 462        | expr1 '*' error
 463        | expr1 '%' error
 464        | expr1 '/' error

 465  expr2 : expr3
 466        | cast expr2
 467        | soft_cast expr2
 468        | TOK_INC expr4
 469        | TOK_DEC expr4
 470        | TOK_NOT expr2
 471        | '~' expr2
 472        | '-' expr2

 473  expr3 : expr4
 474        | expr4 TOK_INC
 475        | expr4 TOK_DEC

 476  optional_block :

 477  $$40 :

 478  optional_block : '{' line_number_info start_lambda $$40 statements end_block

 479  apply : expr4 open_paren_with_line_info expr_list ')' optional_block
 480        | expr4 open_paren_with_line_info error ')' optional_block
 481        | expr4 open_paren_with_line_info error TOK_LEX_EOF
 482        | expr4 open_paren_with_line_info error ';'
 483        | expr4 open_paren_with_line_info error '}'

 484  implicit_modifiers :

 485  expr4 : idents
 486        | expr5
 487        | expr5 '.' line_number_info TOK_IDENTIFIER
 488        | bad_expr_ident

 489  expr5 : literal_expr
 490        | catch
 491        | gauge
 492        | typeof
 493        | sscanf
 494        | lambda
 495        | implicit_modifiers class
 496        | implicit_modifiers enum
 497        | apply
 498        | expr4 open_bracket_with_line_info '*' ']'
 499        | expr4 open_bracket_with_line_info expr0 ']'
 500        | expr4 open_bracket_with_line_info range_bound expected_dot_dot range_bound ']'
 501        | expr4 TOK_SAFE_START_INDEX line_number_info expr0 ']'
 502        | expr4 TOK_SAFE_START_INDEX line_number_info range_bound expected_dot_dot range_bound ']'
 503        | expr4 open_bracket_with_line_info error ']'
 504        | expr4 open_bracket_with_line_info error TOK_LEX_EOF
 505        | expr4 open_bracket_with_line_info error ';'
 506        | expr4 open_bracket_with_line_info error '}'
 507        | expr4 open_bracket_with_line_info error ')'
 508        | open_paren_with_line_info comma_expr2 ')'
 509        | open_paren_with_line_info error ')'
 510        | open_paren_with_line_info error TOK_LEX_EOF
 511        | open_paren_with_line_info error ';'
 512        | open_paren_with_line_info error '}'
 513        | expr4 TOK_ARROW line_number_info magic_identifier
 514        | expr4 TOK_SAFE_INDEX line_number_info TOK_IDENTIFIER
 515        | expr4 TOK_ARROW line_number_info error

 516  literal_expr : string
 517               | TOK_NUMBER
 518               | TOK_FLOAT
 519               | open_paren_with_line_info '{' expr_list close_brace_or_missing ')'
 520               | open_paren_with_line_info open_bracket_with_line_info m_expr_list close_bracket_or_missing ')'
 521               | TOK_MULTISET_START line_number_info expr_list TOK_MULTISET_END
 522               | TOK_MULTISET_START line_number_info expr_list ')'
 523               | TOK_MULTISET_START line_number_info error TOK_MULTISET_END
 524               | TOK_MULTISET_START line_number_info error ')'
 525               | TOK_MULTISET_START line_number_info error TOK_LEX_EOF
 526               | TOK_MULTISET_START line_number_info error ';'
 527               | TOK_MULTISET_START line_number_info error '}'

 528  unqualified_idents : low_idents
 529                     | unqualified_idents '.' TOK_IDENTIFIER
 530                     | unqualified_idents '.' bad_identifier

 531  qualified_idents : qualified_ident
 532                   | qualified_idents '.' TOK_IDENTIFIER
 533                   | qualified_idents '.' bad_identifier

 534  idents : unqualified_idents
 535         | qualified_idents

 536  string_or_identifier : TOK_IDENTIFIER
 537                       | string

 538  inherit_specifier : string_or_identifier TOK_COLON_COLON
 539                    | TOK_LOCAL_ID TOK_COLON_COLON
 540                    | TOK_GLOBAL TOK_COLON_COLON
 541                    | inherit_specifier TOK_LOCAL_ID TOK_COLON_COLON
 542                    | inherit_specifier TOK_IDENTIFIER TOK_COLON_COLON
 543                    | inherit_specifier bad_inherit TOK_COLON_COLON

 544  low_idents : TOK_IDENTIFIER
 545             | '.' TOK_IDENTIFIER
 546             | TOK_GLOBAL '.' TOK_IDENTIFIER
 547             | TOK_RESERVED

 548  qualified_ident : TOK_PREDEF TOK_COLON_COLON TOK_IDENTIFIER
 549                  | TOK_PREDEF TOK_COLON_COLON bad_identifier
 550                  | TOK_VERSION TOK_COLON_COLON TOK_IDENTIFIER
 551                  | TOK_VERSION TOK_COLON_COLON bad_identifier
 552                  | inherit_specifier TOK_IDENTIFIER
 553                  | inherit_specifier bad_identifier
 554                  | inherit_specifier error
 555                  | TOK_COLON_COLON TOK_IDENTIFIER
 556                  | TOK_COLON_COLON bad_identifier

 557  range_bound :
 558              | comma_expr
 559              | '<' comma_expr
 560              | TOK_LEX_EOF
 561              | '<' TOK_LEX_EOF

 562  gauge : TOK_GAUGE catch_arg

 563  typeof : TOK_TYPEOF '(' expr0 ')'
 564         | TOK_TYPEOF '(' error ')'
 565         | TOK_TYPEOF '(' error '}'
 566         | TOK_TYPEOF '(' error TOK_LEX_EOF
 567         | TOK_TYPEOF '(' error ';'

 568  catch_arg : '(' comma_expr ')'
 569            | '(' error ')'
 570            | '(' error TOK_LEX_EOF
 571            | '(' error '}'
 572            | '(' error ';'
 573            | block
 574            | error

 575  $$41 :

 576  catch : TOK_CATCH $$41 catch_arg

 577  sscanf : TOK_SSCANF '(' expr0 ',' expr0 lvalue_list ')'
 578         | TOK_SSCANF '(' expr0 ',' expr0 error ')'
 579         | TOK_SSCANF '(' expr0 ',' expr0 error TOK_LEX_EOF
 580         | TOK_SSCANF '(' expr0 ',' expr0 error '}'
 581         | TOK_SSCANF '(' expr0 ',' expr0 error ';'
 582         | TOK_SSCANF '(' expr0 error ')'
 583         | TOK_SSCANF '(' expr0 error TOK_LEX_EOF
 584         | TOK_SSCANF '(' expr0 error '}'
 585         | TOK_SSCANF '(' expr0 error ';'
 586         | TOK_SSCANF '(' error ')'
 587         | TOK_SSCANF '(' error TOK_LEX_EOF
 588         | TOK_SSCANF '(' error '}'
 589         | TOK_SSCANF '(' error ';'

 590  lvalue : expr4
 591         | open_bracket_with_line_info low_lvalue_list ']'
 592         | type2 TOK_IDENTIFIER

 593  low_lvalue_list : lvalue lvalue_list

 594  lvalue_list :
 595              | ',' lvalue lvalue_list

 596  string_segment : TOK_STRING
 597                 | TOK_FUNCTION_NAME

 598  string : string_segment
 599         | string string_segment

 600  string_constant : string
 601                  | string_constant '+' string

 602  real_string_constant : TOK_STRING
 603                       | real_string_constant TOK_STRING
 604                       | real_string_constant '+' TOK_STRING

 605  bad_identifier : bad_inherit
 606                 | TOK_LOCAL_ID

 607  bad_inherit : bad_expr_ident
 608              | TOK_ARRAY_ID
 609              | TOK_ATTRIBUTE_ID
 610              | TOK_BREAK
 611              | TOK_CASE
 612              | TOK_CATCH
 613              | TOK_CLASS
 614              | TOK_CONTINUE
 615              | TOK_DEFAULT
 616              | TOK_DEPRECATED_ID
 617              | TOK_DO
 618              | TOK_ENUM
 619              | TOK_FLOAT_ID
 620              | TOK_FOR
 621              | TOK_FOREACH
 622              | TOK_FUNCTION_ID
 623              | TOK_FUNCTION_NAME
 624              | TOK_GAUGE
 625              | TOK_IF
 626              | TOK_INT_ID
 627              | TOK_LAMBDA
 628              | TOK_MAPPING_ID
 629              | TOK_MIXED_ID
 630              | TOK_MULTISET_ID
 631              | TOK_OBJECT_ID
 632              | TOK_PROGRAM_ID
 633              | TOK_RETURN
 634              | TOK_SSCANF
 635              | TOK_STRING_ID
 636              | TOK_SWITCH
 637              | TOK_TYPEDEF
 638              | TOK_TYPEOF
 639              | TOK_VOID_ID
 640              | TOK_RESERVED

 641  bad_expr_ident : TOK_INLINE
 642                 | TOK_PREDEF
 643                 | TOK_PRIVATE
 644                 | TOK_PROTECTED
 645                 | TOK_PUBLIC
 646                 | TOK_OPTIONAL
 647                 | TOK_VARIANT
 648                 | TOK_STATIC
 649                 | TOK_EXTERN
 650                 | TOK_FINAL_ID
 651                 | TOK_ELSE
 652                 | TOK_IMPORT
 653                 | TOK_INHERIT

state 0
	$accept : . all $end  (0)
	program : .  (5)

	.  reduce 5

	all  goto 1
	program  goto 2


state 1
	$accept : all . $end  (0)

	$end  accept


state 2
	all : program .  (1)
	all : program . TOK_LEX_EOF  (2)
	program : program . def  (3)
	program : program . ';'  (4)
	modifier_list : .  (152)

	error  shift 3
	TOK_LEX_EOF  shift 4
	TOK_IMPORT  shift 5
	';'  shift 6
	$end  reduce 1
	TOK_CONSTANT  reduce 152
	TOK_ARRAY_ID  reduce 152
	TOK_ATTRIBUTE_ID  reduce 152
	TOK_CLASS  reduce 152
	TOK_DEPRECATED_ID  reduce 152
	TOK_ENUM  reduce 152
	TOK_EXTERN  reduce 152
	TOK_FLOAT_ID  reduce 152
	TOK_FUNCTION_ID  reduce 152
	TOK_GLOBAL  reduce 152
	TOK_IDENTIFIER  reduce 152
	TOK_RESERVED  reduce 152
	TOK_INHERIT  reduce 152
	TOK_INLINE  reduce 152
	TOK_LOCAL_ID  reduce 152
	TOK_FINAL_ID  reduce 152
	TOK_INT_ID  reduce 152
	TOK_MULTISET_ID  reduce 152
	TOK_MAPPING_ID  reduce 152
	TOK_MIXED_ID  reduce 152
	TOK_OBJECT_ID  reduce 152
	TOK_PRIVATE  reduce 152
	TOK_PROGRAM_ID  reduce 152
	TOK_PROTECTED  reduce 152
	TOK_PUBLIC  reduce 152
	TOK_STATIC  reduce 152
	TOK_STRING_ID  reduce 152
	TOK_TYPEDEF  reduce 152
	TOK_TYPEOF  reduce 152
	TOK_VARIANT  reduce 152
	TOK_VOID_ID  reduce 152
	TOK_OPTIONAL  reduce 152
	TOK_AUTO_ID  reduce 152
	'{'  reduce 152
	'.'  reduce 152

	modifier_list  goto 7
	modifiers  goto 8
	def  goto 9
	inheritance  goto 10
	import  goto 11
	constant  goto 12
	typedef  goto 13


state 3
	def : error . TOK_LEX_EOF  (68)
	def : error . ';'  (69)
	def : error . '}'  (70)

	TOK_LEX_EOF  shift 14
	';'  shift 15
	'}'  shift 16
	.  error


state 4
	all : program TOK_LEX_EOF .  (2)

	.  reduce 2


state 5
	import : TOK_IMPORT . idents ';'  (24)
	import : TOK_IMPORT . string ';'  (25)
	import : TOK_IMPORT . error ';'  (26)
	import : TOK_IMPORT . error TOK_LEX_EOF  (27)
	import : TOK_IMPORT . error '}'  (28)

	error  shift 17
	TOK_STRING  shift 18
	TOK_COLON_COLON  shift 19
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_LOCAL_ID  shift 23
	TOK_FUNCTION_NAME  shift 24
	TOK_PREDEF  shift 25
	TOK_VERSION  shift 26
	'.'  shift 27
	.  error

	inherit_specifier  goto 28
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 31
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 35
	low_idents  goto 36


state 6
	program : program ';' .  (4)

	.  reduce 4


state 7
	modifiers : modifier_list .  (151)
	modifier_list : modifier_list . modifier  (153)

	TOK_EXTERN  shift 37
	TOK_INLINE  shift 38
	TOK_LOCAL_ID  shift 39
	TOK_FINAL_ID  shift 40
	TOK_PRIVATE  shift 41
	TOK_PROTECTED  shift 42
	TOK_PUBLIC  shift 43
	TOK_STATIC  shift 44
	TOK_VARIANT  shift 45
	TOK_OPTIONAL  shift 46
	TOK_CONSTANT  reduce 151
	TOK_ARRAY_ID  reduce 151
	TOK_ATTRIBUTE_ID  reduce 151
	TOK_CLASS  reduce 151
	TOK_DEPRECATED_ID  reduce 151
	TOK_ENUM  reduce 151
	TOK_FLOAT_ID  reduce 151
	TOK_FUNCTION_ID  reduce 151
	TOK_GLOBAL  reduce 151
	TOK_IDENTIFIER  reduce 151
	TOK_RESERVED  reduce 151
	TOK_INHERIT  reduce 151
	TOK_INT_ID  reduce 151
	TOK_MULTISET_ID  reduce 151
	TOK_MAPPING_ID  reduce 151
	TOK_MIXED_ID  reduce 151
	TOK_OBJECT_ID  reduce 151
	TOK_PROGRAM_ID  reduce 151
	TOK_STRING_ID  reduce 151
	TOK_TYPEDEF  reduce 151
	TOK_TYPEOF  reduce 151
	TOK_VOID_ID  reduce 151
	TOK_AUTO_ID  reduce 151
	'{'  reduce 151
	'.'  reduce 151

	modifier  goto 47


state 8
	inheritance : modifiers . TOK_INHERIT inherit_ref optional_rename_inherit ';'  (17)
	inheritance : modifiers . TOK_INHERIT inherit_ref error ';'  (18)
	inheritance : modifiers . TOK_INHERIT inherit_ref error TOK_LEX_EOF  (19)
	inheritance : modifiers . TOK_INHERIT inherit_ref error '}'  (20)
	inheritance : modifiers . TOK_INHERIT error ';'  (21)
	inheritance : modifiers . TOK_INHERIT error TOK_LEX_EOF  (22)
	inheritance : modifiers . TOK_INHERIT error '}'  (23)
	constant : modifiers . TOK_CONSTANT constant_list ';'  (34)
	constant : modifiers . TOK_CONSTANT error ';'  (35)
	constant : modifiers . TOK_CONSTANT error TOK_LEX_EOF  (36)
	constant : modifiers . TOK_CONSTANT error '}'  (37)
	def : modifiers . optional_attributes simple_type optional_constant TOK_IDENTIFIER start_function '(' $$2 arguments close_paren_or_missing $$3 block_or_semi  (57)
	def : modifiers . optional_attributes simple_type optional_constant TOK_IDENTIFIER start_function error  (58)
	def : modifiers . optional_attributes simple_type optional_constant bad_identifier $$4 '(' arguments ')' block_or_semi  (60)
	def : modifiers . optional_attributes simple_type optional_constant name_list ';'  (61)
	def : modifiers . class  (65)
	def : modifiers . enum  (66)
	def : modifiers . '{' $$5 program close_brace_or_eof  (72)
	typedef : modifiers . TOK_TYPEDEF full_type simple_identifier ';'  (334)
	optional_attributes : .  (157)

	TOK_CONSTANT  shift 48
	TOK_CLASS  shift 49
	TOK_ENUM  shift 50
	TOK_INHERIT  shift 51
	TOK_TYPEDEF  shift 52
	'{'  shift 53
	TOK_ARRAY_ID  reduce 157
	TOK_ATTRIBUTE_ID  reduce 157
	TOK_DEPRECATED_ID  reduce 157
	TOK_FLOAT_ID  reduce 157
	TOK_FUNCTION_ID  reduce 157
	TOK_GLOBAL  reduce 157
	TOK_IDENTIFIER  reduce 157
	TOK_RESERVED  reduce 157
	TOK_INT_ID  reduce 157
	TOK_MULTISET_ID  reduce 157
	TOK_MAPPING_ID  reduce 157
	TOK_MIXED_ID  reduce 157
	TOK_OBJECT_ID  reduce 157
	TOK_PROGRAM_ID  reduce 157
	TOK_STRING_ID  reduce 157
	TOK_TYPEOF  reduce 157
	TOK_VOID_ID  reduce 157
	TOK_AUTO_ID  reduce 157
	'.'  reduce 157

	class  goto 54
	enum  goto 55
	optional_attributes  goto 56


state 9
	program : program def .  (3)

	.  reduce 3


state 10
	def : inheritance .  (62)

	.  reduce 62


state 11
	def : import .  (63)

	.  reduce 63


state 12
	def : constant .  (64)

	.  reduce 64


state 13
	def : typedef .  (67)

	.  reduce 67


state 14
	def : error TOK_LEX_EOF .  (68)

	.  reduce 68


state 15
	def : error ';' .  (69)

	.  reduce 69


state 16
	def : error '}' .  (70)

	.  reduce 70


state 17
	import : TOK_IMPORT error . ';'  (26)
	import : TOK_IMPORT error . TOK_LEX_EOF  (27)
	import : TOK_IMPORT error . '}'  (28)

	TOK_LEX_EOF  shift 57
	';'  shift 58
	'}'  shift 59
	.  error


state 18
	string_segment : TOK_STRING .  (596)

	.  reduce 596


state 19
	qualified_ident : TOK_COLON_COLON . TOK_IDENTIFIER  (555)
	qualified_ident : TOK_COLON_COLON . bad_identifier  (556)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 81
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	bad_identifier  goto 108
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 20
	inherit_specifier : TOK_GLOBAL . TOK_COLON_COLON  (540)
	low_idents : TOK_GLOBAL . '.' TOK_IDENTIFIER  (546)

	TOK_COLON_COLON  shift 111
	'.'  shift 112
	.  error


state 21
	string_or_identifier : TOK_IDENTIFIER .  (536)
	low_idents : TOK_IDENTIFIER .  (544)

	error  reduce 544
	TOK_ARROW  reduce 544
	TOK_INC  reduce 544
	TOK_DEC  reduce 544
	TOK_RETURN  reduce 544
	TOK_EQ  reduce 544
	TOK_GE  reduce 544
	TOK_LE  reduce 544
	TOK_NE  reduce 544
	TOK_LSH  reduce 544
	TOK_RSH  reduce 544
	TOK_LAND  reduce 544
	TOK_LOR  reduce 544
	TOK_SWITCH  reduce 544
	TOK_SSCANF  reduce 544
	TOK_CATCH  reduce 544
	TOK_FOREACH  reduce 544
	TOK_LEX_EOF  reduce 544
	TOK_ADD_EQ  reduce 544
	TOK_AND_EQ  reduce 544
	TOK_ARRAY_ID  reduce 544
	TOK_ATTRIBUTE_ID  reduce 544
	TOK_BREAK  reduce 544
	TOK_CASE  reduce 544
	TOK_CLASS  reduce 544
	TOK_COLON_COLON  reduce 536
	TOK_CONTINUE  reduce 544
	TOK_DEFAULT  reduce 544
	TOK_DEPRECATED_ID  reduce 544
	TOK_DIV_EQ  reduce 544
	TOK_DO  reduce 544
	TOK_DOT_DOT  reduce 544
	TOK_DOT_DOT_DOT  reduce 544
	TOK_ELSE  reduce 544
	TOK_ENUM  reduce 544
	TOK_EXTERN  reduce 544
	TOK_FLOAT_ID  reduce 544
	TOK_FOR  reduce 544
	TOK_FUNCTION_ID  reduce 544
	TOK_GAUGE  reduce 544
	TOK_IDENTIFIER  reduce 544
	TOK_RESERVED  reduce 544
	TOK_IF  reduce 544
	TOK_IMPORT  reduce 544
	TOK_INHERIT  reduce 544
	TOK_INLINE  reduce 544
	TOK_LOCAL_ID  reduce 544
	TOK_FINAL_ID  reduce 544
	TOK_FUNCTION_NAME  reduce 544
	TOK_INT_ID  reduce 544
	TOK_LAMBDA  reduce 544
	TOK_MULTISET_ID  reduce 544
	TOK_MULTISET_END  reduce 544
	TOK_LSH_EQ  reduce 544
	TOK_MAPPING_ID  reduce 544
	TOK_MIXED_ID  reduce 544
	TOK_MOD_EQ  reduce 544
	TOK_MULT_EQ  reduce 544
	TOK_OBJECT_ID  reduce 544
	TOK_OR_EQ  reduce 544
	TOK_PRIVATE  reduce 544
	TOK_PROGRAM_ID  reduce 544
	TOK_PROTECTED  reduce 544
	TOK_PREDEF  reduce 544
	TOK_PUBLIC  reduce 544
	TOK_RSH_EQ  reduce 544
	TOK_STATIC  reduce 544
	TOK_STRING_ID  reduce 544
	TOK_SUB_EQ  reduce 544
	TOK_TYPEDEF  reduce 544
	TOK_TYPEOF  reduce 544
	TOK_VARIANT  reduce 544
	TOK_VOID_ID  reduce 544
	TOK_XOR_EQ  reduce 544
	TOK_OPTIONAL  reduce 544
	TOK_SAFE_INDEX  reduce 544
	TOK_SAFE_START_INDEX  reduce 544
	'='  reduce 544
	'?'  reduce 544
	'|'  reduce 544
	'^'  reduce 544
	'&'  reduce 544
	'>'  reduce 544
	'<'  reduce 544
	'+'  reduce 544
	'-'  reduce 544
	'*'  reduce 544
	'%'  reduce 544
	'/'  reduce 544
	';'  reduce 544
	':'  reduce 544
	'}'  reduce 544
	','  reduce 544
	'('  reduce 544
	')'  reduce 544
	'['  reduce 544
	']'  reduce 544
	'.'  reduce 544


state 22
	low_idents : TOK_RESERVED .  (547)

	.  reduce 547


state 23
	inherit_specifier : TOK_LOCAL_ID . TOK_COLON_COLON  (539)

	TOK_COLON_COLON  shift 113
	.  error


state 24
	string_segment : TOK_FUNCTION_NAME .  (597)

	.  reduce 597


state 25
	qualified_ident : TOK_PREDEF . TOK_COLON_COLON TOK_IDENTIFIER  (548)
	qualified_ident : TOK_PREDEF . TOK_COLON_COLON bad_identifier  (549)

	TOK_COLON_COLON  shift 114
	.  error


state 26
	qualified_ident : TOK_VERSION . TOK_COLON_COLON TOK_IDENTIFIER  (550)
	qualified_ident : TOK_VERSION . TOK_COLON_COLON bad_identifier  (551)

	TOK_COLON_COLON  shift 115
	.  error


state 27
	low_idents : '.' . TOK_IDENTIFIER  (545)

	TOK_IDENTIFIER  shift 116
	.  error


state 28
	inherit_specifier : inherit_specifier . TOK_LOCAL_ID TOK_COLON_COLON  (541)
	inherit_specifier : inherit_specifier . TOK_IDENTIFIER TOK_COLON_COLON  (542)
	inherit_specifier : inherit_specifier . bad_inherit TOK_COLON_COLON  (543)
	qualified_ident : inherit_specifier . TOK_IDENTIFIER  (552)
	qualified_ident : inherit_specifier . bad_identifier  (553)
	qualified_ident : inherit_specifier . error  (554)

	error  shift 117
	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 118
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 119
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	bad_identifier  goto 120
	bad_expr_ident  goto 109
	bad_inherit  goto 121


state 29
	inherit_specifier : string_or_identifier . TOK_COLON_COLON  (538)

	TOK_COLON_COLON  shift 122
	.  error


state 30
	string : string_segment .  (598)

	.  reduce 598


state 31
	import : TOK_IMPORT string . ';'  (25)
	string_or_identifier : string .  (537)
	string : string . string_segment  (599)

	TOK_STRING  shift 18
	TOK_FUNCTION_NAME  shift 24
	';'  shift 123
	TOK_COLON_COLON  reduce 537

	string_segment  goto 124


state 32
	unqualified_idents : unqualified_idents . '.' TOK_IDENTIFIER  (529)
	unqualified_idents : unqualified_idents . '.' bad_identifier  (530)
	idents : unqualified_idents .  (534)

	'.'  shift 125
	error  reduce 534
	TOK_ARROW  reduce 534
	TOK_INC  reduce 534
	TOK_DEC  reduce 534
	TOK_EQ  reduce 534
	TOK_GE  reduce 534
	TOK_LE  reduce 534
	TOK_NE  reduce 534
	TOK_LSH  reduce 534
	TOK_RSH  reduce 534
	TOK_LAND  reduce 534
	TOK_LOR  reduce 534
	TOK_LEX_EOF  reduce 534
	TOK_ADD_EQ  reduce 534
	TOK_AND_EQ  reduce 534
	TOK_DIV_EQ  reduce 534
	TOK_DOT_DOT  reduce 534
	TOK_DOT_DOT_DOT  reduce 534
	TOK_MULTISET_END  reduce 534
	TOK_LSH_EQ  reduce 534
	TOK_MOD_EQ  reduce 534
	TOK_MULT_EQ  reduce 534
	TOK_OR_EQ  reduce 534
	TOK_RSH_EQ  reduce 534
	TOK_SUB_EQ  reduce 534
	TOK_XOR_EQ  reduce 534
	TOK_SAFE_INDEX  reduce 534
	TOK_SAFE_START_INDEX  reduce 534
	'='  reduce 534
	'?'  reduce 534
	'|'  reduce 534
	'^'  reduce 534
	'&'  reduce 534
	'>'  reduce 534
	'<'  reduce 534
	'+'  reduce 534
	'-'  reduce 534
	'*'  reduce 534
	'%'  reduce 534
	'/'  reduce 534
	';'  reduce 534
	':'  reduce 534
	'}'  reduce 534
	','  reduce 534
	'('  reduce 534
	')'  reduce 534
	'['  reduce 534
	']'  reduce 534


state 33
	qualified_idents : qualified_ident .  (531)

	.  reduce 531


state 34
	qualified_idents : qualified_idents . '.' TOK_IDENTIFIER  (532)
	qualified_idents : qualified_idents . '.' bad_identifier  (533)
	idents : qualified_idents .  (535)

	'.'  shift 126
	error  reduce 535
	TOK_ARROW  reduce 535
	TOK_INC  reduce 535
	TOK_DEC  reduce 535
	TOK_EQ  reduce 535
	TOK_GE  reduce 535
	TOK_LE  reduce 535
	TOK_NE  reduce 535
	TOK_LSH  reduce 535
	TOK_RSH  reduce 535
	TOK_LAND  reduce 535
	TOK_LOR  reduce 535
	TOK_LEX_EOF  reduce 535
	TOK_ADD_EQ  reduce 535
	TOK_AND_EQ  reduce 535
	TOK_DIV_EQ  reduce 535
	TOK_DOT_DOT  reduce 535
	TOK_DOT_DOT_DOT  reduce 535
	TOK_MULTISET_END  reduce 535
	TOK_LSH_EQ  reduce 535
	TOK_MOD_EQ  reduce 535
	TOK_MULT_EQ  reduce 535
	TOK_OR_EQ  reduce 535
	TOK_RSH_EQ  reduce 535
	TOK_SUB_EQ  reduce 535
	TOK_XOR_EQ  reduce 535
	TOK_SAFE_INDEX  reduce 535
	TOK_SAFE_START_INDEX  reduce 535
	'='  reduce 535
	'?'  reduce 535
	'|'  reduce 535
	'^'  reduce 535
	'&'  reduce 535
	'>'  reduce 535
	'<'  reduce 535
	'+'  reduce 535
	'-'  reduce 535
	'*'  reduce 535
	'%'  reduce 535
	'/'  reduce 535
	';'  reduce 535
	':'  reduce 535
	'}'  reduce 535
	','  reduce 535
	'('  reduce 535
	')'  reduce 535
	'['  reduce 535
	']'  reduce 535


state 35
	import : TOK_IMPORT idents . ';'  (24)

	';'  shift 127
	.  error


state 36
	unqualified_idents : low_idents .  (528)

	.  reduce 528


state 37
	modifier : TOK_EXTERN .  (88)

	.  reduce 88


state 38
	modifier : TOK_INLINE .  (94)

	.  reduce 94


state 39
	modifier : TOK_LOCAL_ID .  (91)

	.  reduce 91


state 40
	modifier : TOK_FINAL_ID .  (86)

	.  reduce 86


state 41
	modifier : TOK_PRIVATE .  (90)

	.  reduce 90


state 42
	modifier : TOK_PROTECTED .  (93)

	.  reduce 93


state 43
	modifier : TOK_PUBLIC .  (92)

	.  reduce 92


state 44
	modifier : TOK_STATIC .  (87)

	.  reduce 87


state 45
	modifier : TOK_VARIANT .  (95)

	.  reduce 95


state 46
	modifier : TOK_OPTIONAL .  (89)

	.  reduce 89


state 47
	modifier_list : modifier_list modifier .  (153)

	.  reduce 153


state 48
	constant : modifiers TOK_CONSTANT . constant_list ';'  (34)
	constant : modifiers TOK_CONSTANT . error ';'  (35)
	constant : modifiers TOK_CONSTANT . error TOK_LEX_EOF  (36)
	constant : modifiers TOK_CONSTANT . error '}'  (37)

	error  shift 128
	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 129
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	bad_identifier  goto 130
	constant_name  goto 131
	constant_list  goto 132
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 49
	class : TOK_CLASS . line_number_info optional_identifier $$24 $$25 optional_create_arguments failsafe_program  (319)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 133


state 50
	enum : TOK_ENUM . $$26 optional_identifier '{' $$27 enum_list $$28 end_block  (333)
	$$26 : .  (330)

	.  reduce 330

	$$26  goto 134


state 51
	inheritance : modifiers TOK_INHERIT . inherit_ref optional_rename_inherit ';'  (17)
	inheritance : modifiers TOK_INHERIT . inherit_ref error ';'  (18)
	inheritance : modifiers TOK_INHERIT . inherit_ref error TOK_LEX_EOF  (19)
	inheritance : modifiers TOK_INHERIT . inherit_ref error '}'  (20)
	inheritance : modifiers TOK_INHERIT . error ';'  (21)
	inheritance : modifiers TOK_INHERIT . error TOK_LEX_EOF  (22)
	inheritance : modifiers TOK_INHERIT . error '}'  (23)
	$$1 : .  (15)

	error  shift 135
	TOK_STRING  reduce 15
	TOK_COLON_COLON  reduce 15
	TOK_GLOBAL  reduce 15
	TOK_IDENTIFIER  reduce 15
	TOK_RESERVED  reduce 15
	TOK_LOCAL_ID  reduce 15
	TOK_FUNCTION_NAME  reduce 15
	TOK_PREDEF  reduce 15
	TOK_VERSION  reduce 15
	'.'  reduce 15

	inherit_ref  goto 136
	$$1  goto 137


state 52
	typedef : modifiers TOK_TYPEDEF . full_type simple_identifier ';'  (334)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	full_type  goto 157
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 53
	def : modifiers '{' . $$5 program close_brace_or_eof  (72)
	$$5 : .  (71)

	.  reduce 71

	$$5  goto 161


state 54
	def : modifiers class .  (65)

	.  reduce 65


state 55
	def : modifiers enum .  (66)

	.  reduce 66


state 56
	def : modifiers optional_attributes . simple_type optional_constant TOK_IDENTIFIER start_function '(' $$2 arguments close_paren_or_missing $$3 block_or_semi  (57)
	def : modifiers optional_attributes . simple_type optional_constant TOK_IDENTIFIER start_function error  (58)
	def : modifiers optional_attributes . simple_type optional_constant bad_identifier $$4 '(' arguments ')' block_or_semi  (60)
	def : modifiers optional_attributes . simple_type optional_constant name_list ';'  (61)
	optional_attributes : optional_attributes . attribute  (158)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 162
	TOK_DEPRECATED_ID  shift 163
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	attribute  goto 164
	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	simple_type  goto 165
	full_type  goto 166
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 57
	import : TOK_IMPORT error TOK_LEX_EOF .  (27)

	.  reduce 27


state 58
	import : TOK_IMPORT error ';' .  (26)

	.  reduce 26


state 59
	import : TOK_IMPORT error '}' .  (28)

	.  reduce 28


state 60
	bad_inherit : TOK_RETURN .  (633)

	.  reduce 633


state 61
	bad_inherit : TOK_SWITCH .  (636)

	.  reduce 636


state 62
	bad_inherit : TOK_SSCANF .  (634)

	.  reduce 634


state 63
	bad_inherit : TOK_CATCH .  (612)

	.  reduce 612


state 64
	bad_inherit : TOK_FOREACH .  (621)

	.  reduce 621


state 65
	bad_inherit : TOK_ARRAY_ID .  (608)

	.  reduce 608


state 66
	bad_inherit : TOK_ATTRIBUTE_ID .  (609)

	.  reduce 609


state 67
	bad_inherit : TOK_BREAK .  (610)

	.  reduce 610


state 68
	bad_inherit : TOK_CASE .  (611)

	.  reduce 611


state 69
	bad_inherit : TOK_CLASS .  (613)

	.  reduce 613


state 70
	bad_inherit : TOK_CONTINUE .  (614)

	.  reduce 614


state 71
	bad_inherit : TOK_DEFAULT .  (615)

	.  reduce 615


state 72
	bad_inherit : TOK_DEPRECATED_ID .  (616)

	.  reduce 616


state 73
	bad_inherit : TOK_DO .  (617)

	.  reduce 617


state 74
	bad_expr_ident : TOK_ELSE .  (651)

	.  reduce 651


state 75
	bad_inherit : TOK_ENUM .  (618)

	.  reduce 618


state 76
	bad_expr_ident : TOK_EXTERN .  (649)

	.  reduce 649


state 77
	bad_inherit : TOK_FLOAT_ID .  (619)

	.  reduce 619


state 78
	bad_inherit : TOK_FOR .  (620)

	.  reduce 620


state 79
	bad_inherit : TOK_FUNCTION_ID .  (622)

	.  reduce 622


state 80
	bad_inherit : TOK_GAUGE .  (624)

	.  reduce 624


state 81
	qualified_ident : TOK_COLON_COLON TOK_IDENTIFIER .  (555)

	.  reduce 555


state 82
	bad_inherit : TOK_RESERVED .  (640)

	.  reduce 640


state 83
	bad_inherit : TOK_IF .  (625)

	.  reduce 625


state 84
	bad_expr_ident : TOK_IMPORT .  (652)

	.  reduce 652


state 85
	bad_expr_ident : TOK_INHERIT .  (653)

	.  reduce 653


state 86
	bad_expr_ident : TOK_INLINE .  (641)

	.  reduce 641


state 87
	bad_identifier : TOK_LOCAL_ID .  (606)

	.  reduce 606


state 88
	bad_expr_ident : TOK_FINAL_ID .  (650)

	.  reduce 650


state 89
	bad_inherit : TOK_FUNCTION_NAME .  (623)

	.  reduce 623


state 90
	bad_inherit : TOK_INT_ID .  (626)

	.  reduce 626


state 91
	bad_inherit : TOK_LAMBDA .  (627)

	.  reduce 627


state 92
	bad_inherit : TOK_MULTISET_ID .  (630)

	.  reduce 630


state 93
	bad_inherit : TOK_MAPPING_ID .  (628)

	.  reduce 628


state 94
	bad_inherit : TOK_MIXED_ID .  (629)

	.  reduce 629


state 95
	bad_inherit : TOK_OBJECT_ID .  (631)

	.  reduce 631


state 96
	bad_expr_ident : TOK_PRIVATE .  (643)

	.  reduce 643


state 97
	bad_inherit : TOK_PROGRAM_ID .  (632)

	.  reduce 632


state 98
	bad_expr_ident : TOK_PROTECTED .  (644)

	.  reduce 644


state 99
	bad_expr_ident : TOK_PREDEF .  (642)

	.  reduce 642


state 100
	bad_expr_ident : TOK_PUBLIC .  (645)

	.  reduce 645


state 101
	bad_expr_ident : TOK_STATIC .  (648)

	.  reduce 648


state 102
	bad_inherit : TOK_STRING_ID .  (635)

	.  reduce 635


state 103
	bad_inherit : TOK_TYPEDEF .  (637)

	.  reduce 637


state 104
	bad_inherit : TOK_TYPEOF .  (638)

	.  reduce 638


state 105
	bad_expr_ident : TOK_VARIANT .  (647)

	.  reduce 647


state 106
	bad_inherit : TOK_VOID_ID .  (639)

	.  reduce 639


state 107
	bad_expr_ident : TOK_OPTIONAL .  (646)

	.  reduce 646


state 108
	qualified_ident : TOK_COLON_COLON bad_identifier .  (556)

	.  reduce 556


state 109
	bad_inherit : bad_expr_ident .  (607)

	.  reduce 607


state 110
	bad_identifier : bad_inherit .  (605)

	.  reduce 605


state 111
	inherit_specifier : TOK_GLOBAL TOK_COLON_COLON .  (540)

	.  reduce 540


state 112
	low_idents : TOK_GLOBAL '.' . TOK_IDENTIFIER  (546)

	TOK_IDENTIFIER  shift 167
	.  error


state 113
	inherit_specifier : TOK_LOCAL_ID TOK_COLON_COLON .  (539)

	.  reduce 539


state 114
	qualified_ident : TOK_PREDEF TOK_COLON_COLON . TOK_IDENTIFIER  (548)
	qualified_ident : TOK_PREDEF TOK_COLON_COLON . bad_identifier  (549)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 168
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	bad_identifier  goto 169
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 115
	qualified_ident : TOK_VERSION TOK_COLON_COLON . TOK_IDENTIFIER  (550)
	qualified_ident : TOK_VERSION TOK_COLON_COLON . bad_identifier  (551)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 170
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	bad_identifier  goto 171
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 116
	low_idents : '.' TOK_IDENTIFIER .  (545)

	.  reduce 545


state 117
	qualified_ident : inherit_specifier error .  (554)

	.  reduce 554


state 118
	inherit_specifier : inherit_specifier TOK_IDENTIFIER . TOK_COLON_COLON  (542)
	qualified_ident : inherit_specifier TOK_IDENTIFIER .  (552)

	TOK_COLON_COLON  shift 172
	error  reduce 552
	TOK_ARROW  reduce 552
	TOK_INC  reduce 552
	TOK_DEC  reduce 552
	TOK_EQ  reduce 552
	TOK_GE  reduce 552
	TOK_LE  reduce 552
	TOK_NE  reduce 552
	TOK_LSH  reduce 552
	TOK_RSH  reduce 552
	TOK_LAND  reduce 552
	TOK_LOR  reduce 552
	TOK_LEX_EOF  reduce 552
	TOK_ADD_EQ  reduce 552
	TOK_AND_EQ  reduce 552
	TOK_DIV_EQ  reduce 552
	TOK_DOT_DOT  reduce 552
	TOK_DOT_DOT_DOT  reduce 552
	TOK_MULTISET_END  reduce 552
	TOK_LSH_EQ  reduce 552
	TOK_MOD_EQ  reduce 552
	TOK_MULT_EQ  reduce 552
	TOK_OR_EQ  reduce 552
	TOK_RSH_EQ  reduce 552
	TOK_SUB_EQ  reduce 552
	TOK_XOR_EQ  reduce 552
	TOK_SAFE_INDEX  reduce 552
	TOK_SAFE_START_INDEX  reduce 552
	'='  reduce 552
	'?'  reduce 552
	'|'  reduce 552
	'^'  reduce 552
	'&'  reduce 552
	'>'  reduce 552
	'<'  reduce 552
	'+'  reduce 552
	'-'  reduce 552
	'*'  reduce 552
	'%'  reduce 552
	'/'  reduce 552
	';'  reduce 552
	':'  reduce 552
	'}'  reduce 552
	','  reduce 552
	'('  reduce 552
	')'  reduce 552
	'['  reduce 552
	']'  reduce 552
	'.'  reduce 552


state 119
	inherit_specifier : inherit_specifier TOK_LOCAL_ID . TOK_COLON_COLON  (541)
	bad_identifier : TOK_LOCAL_ID .  (606)

	TOK_COLON_COLON  shift 173
	error  reduce 606
	TOK_ARROW  reduce 606
	TOK_INC  reduce 606
	TOK_DEC  reduce 606
	TOK_EQ  reduce 606
	TOK_GE  reduce 606
	TOK_LE  reduce 606
	TOK_NE  reduce 606
	TOK_LSH  reduce 606
	TOK_RSH  reduce 606
	TOK_LAND  reduce 606
	TOK_LOR  reduce 606
	TOK_LEX_EOF  reduce 606
	TOK_ADD_EQ  reduce 606
	TOK_AND_EQ  reduce 606
	TOK_DIV_EQ  reduce 606
	TOK_DOT_DOT  reduce 606
	TOK_DOT_DOT_DOT  reduce 606
	TOK_MULTISET_END  reduce 606
	TOK_LSH_EQ  reduce 606
	TOK_MOD_EQ  reduce 606
	TOK_MULT_EQ  reduce 606
	TOK_OR_EQ  reduce 606
	TOK_RSH_EQ  reduce 606
	TOK_SUB_EQ  reduce 606
	TOK_XOR_EQ  reduce 606
	TOK_SAFE_INDEX  reduce 606
	TOK_SAFE_START_INDEX  reduce 606
	'='  reduce 606
	'?'  reduce 606
	'|'  reduce 606
	'^'  reduce 606
	'&'  reduce 606
	'>'  reduce 606
	'<'  reduce 606
	'+'  reduce 606
	'-'  reduce 606
	'*'  reduce 606
	'%'  reduce 606
	'/'  reduce 606
	';'  reduce 606
	':'  reduce 606
	'}'  reduce 606
	','  reduce 606
	'('  reduce 606
	')'  reduce 606
	'['  reduce 606
	']'  reduce 606
	'.'  reduce 606


state 120
	qualified_ident : inherit_specifier bad_identifier .  (553)

	.  reduce 553


state 121
	inherit_specifier : inherit_specifier bad_inherit . TOK_COLON_COLON  (543)
	bad_identifier : bad_inherit .  (605)

	TOK_COLON_COLON  shift 174
	error  reduce 605
	TOK_ARROW  reduce 605
	TOK_INC  reduce 605
	TOK_DEC  reduce 605
	TOK_EQ  reduce 605
	TOK_GE  reduce 605
	TOK_LE  reduce 605
	TOK_NE  reduce 605
	TOK_LSH  reduce 605
	TOK_RSH  reduce 605
	TOK_LAND  reduce 605
	TOK_LOR  reduce 605
	TOK_LEX_EOF  reduce 605
	TOK_ADD_EQ  reduce 605
	TOK_AND_EQ  reduce 605
	TOK_DIV_EQ  reduce 605
	TOK_DOT_DOT  reduce 605
	TOK_DOT_DOT_DOT  reduce 605
	TOK_MULTISET_END  reduce 605
	TOK_LSH_EQ  reduce 605
	TOK_MOD_EQ  reduce 605
	TOK_MULT_EQ  reduce 605
	TOK_OR_EQ  reduce 605
	TOK_RSH_EQ  reduce 605
	TOK_SUB_EQ  reduce 605
	TOK_XOR_EQ  reduce 605
	TOK_SAFE_INDEX  reduce 605
	TOK_SAFE_START_INDEX  reduce 605
	'='  reduce 605
	'?'  reduce 605
	'|'  reduce 605
	'^'  reduce 605
	'&'  reduce 605
	'>'  reduce 605
	'<'  reduce 605
	'+'  reduce 605
	'-'  reduce 605
	'*'  reduce 605
	'%'  reduce 605
	'/'  reduce 605
	';'  reduce 605
	':'  reduce 605
	'}'  reduce 605
	','  reduce 605
	'('  reduce 605
	')'  reduce 605
	'['  reduce 605
	']'  reduce 605
	'.'  reduce 605


state 122
	inherit_specifier : string_or_identifier TOK_COLON_COLON .  (538)

	.  reduce 538


state 123
	import : TOK_IMPORT string ';' .  (25)

	.  reduce 25


state 124
	string : string string_segment .  (599)

	.  reduce 599


state 125
	unqualified_idents : unqualified_idents '.' . TOK_IDENTIFIER  (529)
	unqualified_idents : unqualified_idents '.' . bad_identifier  (530)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 175
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	bad_identifier  goto 176
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 126
	qualified_idents : qualified_idents '.' . TOK_IDENTIFIER  (532)
	qualified_idents : qualified_idents '.' . bad_identifier  (533)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 177
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	bad_identifier  goto 178
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 127
	import : TOK_IMPORT idents ';' .  (24)

	.  reduce 24


state 128
	constant_name : error . '=' safe_expr0  (31)
	constant : modifiers TOK_CONSTANT error . ';'  (35)
	constant : modifiers TOK_CONSTANT error . TOK_LEX_EOF  (36)
	constant : modifiers TOK_CONSTANT error . '}'  (37)

	TOK_LEX_EOF  shift 179
	'='  shift 180
	';'  shift 181
	'}'  shift 182
	.  error


state 129
	constant_name : TOK_IDENTIFIER . '=' safe_expr0  (29)

	'='  shift 183
	.  error


state 130
	constant_name : bad_identifier . '=' safe_expr0  (30)

	'='  shift 184
	.  error


state 131
	constant_list : constant_name .  (32)

	.  reduce 32


state 132
	constant_list : constant_list . ',' constant_name  (33)
	constant : modifiers TOK_CONSTANT constant_list . ';'  (34)

	';'  shift 185
	','  shift 186
	.  error


state 133
	class : TOK_CLASS line_number_info . optional_identifier $$24 $$25 optional_create_arguments failsafe_program  (319)
	optional_identifier : .  (78)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 187
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	error  reduce 78
	TOK_LEX_EOF  reduce 78
	'('  reduce 78
	'{'  reduce 78

	optional_identifier  goto 188
	bad_identifier  goto 189
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 134
	enum : TOK_ENUM $$26 . optional_identifier '{' $$27 enum_list $$28 end_block  (333)
	optional_identifier : .  (78)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 187
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	'{'  reduce 78

	optional_identifier  goto 190
	bad_identifier  goto 189
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 135
	inheritance : modifiers TOK_INHERIT error . ';'  (21)
	inheritance : modifiers TOK_INHERIT error . TOK_LEX_EOF  (22)
	inheritance : modifiers TOK_INHERIT error . '}'  (23)

	TOK_LEX_EOF  shift 191
	';'  shift 192
	'}'  shift 193
	.  error


state 136
	inheritance : modifiers TOK_INHERIT inherit_ref . optional_rename_inherit ';'  (17)
	inheritance : modifiers TOK_INHERIT inherit_ref . error ';'  (18)
	inheritance : modifiers TOK_INHERIT inherit_ref . error TOK_LEX_EOF  (19)
	inheritance : modifiers TOK_INHERIT inherit_ref . error '}'  (20)
	optional_rename_inherit : .  (11)

	error  shift 194
	':'  shift 195
	';'  reduce 11

	optional_rename_inherit  goto 196


state 137
	inherit_ref : $$1 . low_program_ref  (16)

	TOK_STRING  shift 18
	TOK_COLON_COLON  shift 19
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_LOCAL_ID  shift 23
	TOK_FUNCTION_NAME  shift 24
	TOK_PREDEF  shift 25
	TOK_VERSION  shift 26
	'.'  shift 27
	.  error

	inherit_specifier  goto 28
	string_constant  goto 197
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 198
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 199
	low_idents  goto 36
	low_program_ref  goto 200


state 138
	basic_type : TOK_ARRAY_ID . opt_array_type  (181)
	opt_array_type : .  (219)

	'('  shift 201
	error  reduce 219
	TOK_CONSTANT  reduce 219
	TOK_RETURN  reduce 219
	TOK_SWITCH  reduce 219
	TOK_SSCANF  reduce 219
	TOK_CATCH  reduce 219
	TOK_FOREACH  reduce 219
	TOK_LEX_EOF  reduce 219
	TOK_ARRAY_ID  reduce 219
	TOK_ATTRIBUTE_ID  reduce 219
	TOK_BREAK  reduce 219
	TOK_CASE  reduce 219
	TOK_CLASS  reduce 219
	TOK_CONTINUE  reduce 219
	TOK_DEFAULT  reduce 219
	TOK_DEPRECATED_ID  reduce 219
	TOK_DO  reduce 219
	TOK_DOT_DOT  reduce 219
	TOK_DOT_DOT_DOT  reduce 219
	TOK_ELSE  reduce 219
	TOK_ENUM  reduce 219
	TOK_EXTERN  reduce 219
	TOK_FLOAT_ID  reduce 219
	TOK_FOR  reduce 219
	TOK_FUNCTION_ID  reduce 219
	TOK_GAUGE  reduce 219
	TOK_IDENTIFIER  reduce 219
	TOK_RESERVED  reduce 219
	TOK_IF  reduce 219
	TOK_IMPORT  reduce 219
	TOK_INHERIT  reduce 219
	TOK_INLINE  reduce 219
	TOK_LOCAL_ID  reduce 219
	TOK_FINAL_ID  reduce 219
	TOK_FUNCTION_NAME  reduce 219
	TOK_INT_ID  reduce 219
	TOK_LAMBDA  reduce 219
	TOK_MULTISET_ID  reduce 219
	TOK_MAPPING_ID  reduce 219
	TOK_MIXED_ID  reduce 219
	TOK_OBJECT_ID  reduce 219
	TOK_PRIVATE  reduce 219
	TOK_PROGRAM_ID  reduce 219
	TOK_PROTECTED  reduce 219
	TOK_PREDEF  reduce 219
	TOK_PUBLIC  reduce 219
	TOK_STATIC  reduce 219
	TOK_STRING_ID  reduce 219
	TOK_TYPEDEF  reduce 219
	TOK_TYPEOF  reduce 219
	TOK_VARIANT  reduce 219
	TOK_VOID_ID  reduce 219
	TOK_OPTIONAL  reduce 219
	'|'  reduce 219
	';'  reduce 219
	':'  reduce 219
	','  reduce 219
	')'  reduce 219
	']'  reduce 219
	'{'  reduce 219

	opt_array_type  goto 202


state 139
	basic_type : TOK_ATTRIBUTE_ID . '(' string_constant ',' full_type ')'  (184)
	basic_type : TOK_ATTRIBUTE_ID . '(' string_constant error ')'  (185)
	basic_type : TOK_ATTRIBUTE_ID . error  (186)

	error  shift 203
	'('  shift 204
	.  error


state 140
	basic_type : TOK_DEPRECATED_ID . '(' full_type ')'  (187)
	basic_type : TOK_DEPRECATED_ID . '(' error ')'  (188)

	'('  shift 205
	.  error


state 141
	basic_type : TOK_FLOAT_ID .  (171)

	.  reduce 171


state 142
	basic_type : TOK_FUNCTION_ID . opt_function_type  (178)
	opt_function_type : .  (212)

	'('  shift 206
	error  reduce 212
	TOK_CONSTANT  reduce 212
	TOK_RETURN  reduce 212
	TOK_SWITCH  reduce 212
	TOK_SSCANF  reduce 212
	TOK_CATCH  reduce 212
	TOK_FOREACH  reduce 212
	TOK_LEX_EOF  reduce 212
	TOK_ARRAY_ID  reduce 212
	TOK_ATTRIBUTE_ID  reduce 212
	TOK_BREAK  reduce 212
	TOK_CASE  reduce 212
	TOK_CLASS  reduce 212
	TOK_CONTINUE  reduce 212
	TOK_DEFAULT  reduce 212
	TOK_DEPRECATED_ID  reduce 212
	TOK_DO  reduce 212
	TOK_DOT_DOT  reduce 212
	TOK_DOT_DOT_DOT  reduce 212
	TOK_ELSE  reduce 212
	TOK_ENUM  reduce 212
	TOK_EXTERN  reduce 212
	TOK_FLOAT_ID  reduce 212
	TOK_FOR  reduce 212
	TOK_FUNCTION_ID  reduce 212
	TOK_GAUGE  reduce 212
	TOK_IDENTIFIER  reduce 212
	TOK_RESERVED  reduce 212
	TOK_IF  reduce 212
	TOK_IMPORT  reduce 212
	TOK_INHERIT  reduce 212
	TOK_INLINE  reduce 212
	TOK_LOCAL_ID  reduce 212
	TOK_FINAL_ID  reduce 212
	TOK_FUNCTION_NAME  reduce 212
	TOK_INT_ID  reduce 212
	TOK_LAMBDA  reduce 212
	TOK_MULTISET_ID  reduce 212
	TOK_MAPPING_ID  reduce 212
	TOK_MIXED_ID  reduce 212
	TOK_OBJECT_ID  reduce 212
	TOK_PRIVATE  reduce 212
	TOK_PROGRAM_ID  reduce 212
	TOK_PROTECTED  reduce 212
	TOK_PREDEF  reduce 212
	TOK_PUBLIC  reduce 212
	TOK_STATIC  reduce 212
	TOK_STRING_ID  reduce 212
	TOK_TYPEDEF  reduce 212
	TOK_TYPEOF  reduce 212
	TOK_VARIANT  reduce 212
	TOK_VOID_ID  reduce 212
	TOK_OPTIONAL  reduce 212
	'|'  reduce 212
	';'  reduce 212
	':'  reduce 212
	','  reduce 212
	')'  reduce 212
	']'  reduce 212
	'{'  reduce 212

	opt_function_type  goto 207


state 143
	low_idents : TOK_GLOBAL . '.' TOK_IDENTIFIER  (546)

	'.'  shift 112
	.  error


state 144
	low_idents : TOK_IDENTIFIER .  (544)

	.  reduce 544


state 145
	basic_type : TOK_INT_ID . opt_int_range  (176)
	opt_int_range : .  (198)

	'('  shift 208
	error  reduce 198
	TOK_CONSTANT  reduce 198
	TOK_RETURN  reduce 198
	TOK_SWITCH  reduce 198
	TOK_SSCANF  reduce 198
	TOK_CATCH  reduce 198
	TOK_FOREACH  reduce 198
	TOK_LEX_EOF  reduce 198
	TOK_ARRAY_ID  reduce 198
	TOK_ATTRIBUTE_ID  reduce 198
	TOK_BREAK  reduce 198
	TOK_CASE  reduce 198
	TOK_CLASS  reduce 198
	TOK_CONTINUE  reduce 198
	TOK_DEFAULT  reduce 198
	TOK_DEPRECATED_ID  reduce 198
	TOK_DO  reduce 198
	TOK_DOT_DOT  reduce 198
	TOK_DOT_DOT_DOT  reduce 198
	TOK_ELSE  reduce 198
	TOK_ENUM  reduce 198
	TOK_EXTERN  reduce 198
	TOK_FLOAT_ID  reduce 198
	TOK_FOR  reduce 198
	TOK_FUNCTION_ID  reduce 198
	TOK_GAUGE  reduce 198
	TOK_IDENTIFIER  reduce 198
	TOK_RESERVED  reduce 198
	TOK_IF  reduce 198
	TOK_IMPORT  reduce 198
	TOK_INHERIT  reduce 198
	TOK_INLINE  reduce 198
	TOK_LOCAL_ID  reduce 198
	TOK_FINAL_ID  reduce 198
	TOK_FUNCTION_NAME  reduce 198
	TOK_INT_ID  reduce 198
	TOK_LAMBDA  reduce 198
	TOK_MULTISET_ID  reduce 198
	TOK_MAPPING_ID  reduce 198
	TOK_MIXED_ID  reduce 198
	TOK_OBJECT_ID  reduce 198
	TOK_PRIVATE  reduce 198
	TOK_PROGRAM_ID  reduce 198
	TOK_PROTECTED  reduce 198
	TOK_PREDEF  reduce 198
	TOK_PUBLIC  reduce 198
	TOK_STATIC  reduce 198
	TOK_STRING_ID  reduce 198
	TOK_TYPEDEF  reduce 198
	TOK_TYPEOF  reduce 198
	TOK_VARIANT  reduce 198
	TOK_VOID_ID  reduce 198
	TOK_OPTIONAL  reduce 198
	'|'  reduce 198
	';'  reduce 198
	':'  reduce 198
	','  reduce 198
	')'  reduce 198
	']'  reduce 198
	'{'  reduce 198

	opt_int_range  goto 209


state 146
	basic_type : TOK_MULTISET_ID . opt_array_type  (182)
	opt_array_type : .  (219)

	'('  shift 201
	error  reduce 219
	TOK_CONSTANT  reduce 219
	TOK_RETURN  reduce 219
	TOK_SWITCH  reduce 219
	TOK_SSCANF  reduce 219
	TOK_CATCH  reduce 219
	TOK_FOREACH  reduce 219
	TOK_LEX_EOF  reduce 219
	TOK_ARRAY_ID  reduce 219
	TOK_ATTRIBUTE_ID  reduce 219
	TOK_BREAK  reduce 219
	TOK_CASE  reduce 219
	TOK_CLASS  reduce 219
	TOK_CONTINUE  reduce 219
	TOK_DEFAULT  reduce 219
	TOK_DEPRECATED_ID  reduce 219
	TOK_DO  reduce 219
	TOK_DOT_DOT  reduce 219
	TOK_DOT_DOT_DOT  reduce 219
	TOK_ELSE  reduce 219
	TOK_ENUM  reduce 219
	TOK_EXTERN  reduce 219
	TOK_FLOAT_ID  reduce 219
	TOK_FOR  reduce 219
	TOK_FUNCTION_ID  reduce 219
	TOK_GAUGE  reduce 219
	TOK_IDENTIFIER  reduce 219
	TOK_RESERVED  reduce 219
	TOK_IF  reduce 219
	TOK_IMPORT  reduce 219
	TOK_INHERIT  reduce 219
	TOK_INLINE  reduce 219
	TOK_LOCAL_ID  reduce 219
	TOK_FINAL_ID  reduce 219
	TOK_FUNCTION_NAME  reduce 219
	TOK_INT_ID  reduce 219
	TOK_LAMBDA  reduce 219
	TOK_MULTISET_ID  reduce 219
	TOK_MAPPING_ID  reduce 219
	TOK_MIXED_ID  reduce 219
	TOK_OBJECT_ID  reduce 219
	TOK_PRIVATE  reduce 219
	TOK_PROGRAM_ID  reduce 219
	TOK_PROTECTED  reduce 219
	TOK_PREDEF  reduce 219
	TOK_PUBLIC  reduce 219
	TOK_STATIC  reduce 219
	TOK_STRING_ID  reduce 219
	TOK_TYPEDEF  reduce 219
	TOK_TYPEOF  reduce 219
	TOK_VARIANT  reduce 219
	TOK_VOID_ID  reduce 219
	TOK_OPTIONAL  reduce 219
	'|'  reduce 219
	';'  reduce 219
	':'  reduce 219
	','  reduce 219
	')'  reduce 219
	']'  reduce 219
	'{'  reduce 219

	opt_array_type  goto 210


state 147
	basic_type : TOK_MAPPING_ID . opt_mapping_type  (177)
	opt_mapping_type : .  (224)

	'('  shift 211
	error  reduce 224
	TOK_CONSTANT  reduce 224
	TOK_RETURN  reduce 224
	TOK_SWITCH  reduce 224
	TOK_SSCANF  reduce 224
	TOK_CATCH  reduce 224
	TOK_FOREACH  reduce 224
	TOK_LEX_EOF  reduce 224
	TOK_ARRAY_ID  reduce 224
	TOK_ATTRIBUTE_ID  reduce 224
	TOK_BREAK  reduce 224
	TOK_CASE  reduce 224
	TOK_CLASS  reduce 224
	TOK_CONTINUE  reduce 224
	TOK_DEFAULT  reduce 224
	TOK_DEPRECATED_ID  reduce 224
	TOK_DO  reduce 224
	TOK_DOT_DOT  reduce 224
	TOK_DOT_DOT_DOT  reduce 224
	TOK_ELSE  reduce 224
	TOK_ENUM  reduce 224
	TOK_EXTERN  reduce 224
	TOK_FLOAT_ID  reduce 224
	TOK_FOR  reduce 224
	TOK_FUNCTION_ID  reduce 224
	TOK_GAUGE  reduce 224
	TOK_IDENTIFIER  reduce 224
	TOK_RESERVED  reduce 224
	TOK_IF  reduce 224
	TOK_IMPORT  reduce 224
	TOK_INHERIT  reduce 224
	TOK_INLINE  reduce 224
	TOK_LOCAL_ID  reduce 224
	TOK_FINAL_ID  reduce 224
	TOK_FUNCTION_NAME  reduce 224
	TOK_INT_ID  reduce 224
	TOK_LAMBDA  reduce 224
	TOK_MULTISET_ID  reduce 224
	TOK_MAPPING_ID  reduce 224
	TOK_MIXED_ID  reduce 224
	TOK_OBJECT_ID  reduce 224
	TOK_PRIVATE  reduce 224
	TOK_PROGRAM_ID  reduce 224
	TOK_PROTECTED  reduce 224
	TOK_PREDEF  reduce 224
	TOK_PUBLIC  reduce 224
	TOK_STATIC  reduce 224
	TOK_STRING_ID  reduce 224
	TOK_TYPEDEF  reduce 224
	TOK_TYPEOF  reduce 224
	TOK_VARIANT  reduce 224
	TOK_VOID_ID  reduce 224
	TOK_OPTIONAL  reduce 224
	'|'  reduce 224
	';'  reduce 224
	':'  reduce 224
	','  reduce 224
	')'  reduce 224
	']'  reduce 224
	'{'  reduce 224

	opt_mapping_type  goto 212


state 148
	basic_type : TOK_MIXED_ID .  (173)

	.  reduce 173


state 149
	basic_type : TOK_OBJECT_ID . opt_object_type  (179)
	opt_object_type : .  (203)
	$$6 : .  (204)

	error  reduce 203
	TOK_CONSTANT  reduce 203
	TOK_RETURN  reduce 203
	TOK_SWITCH  reduce 203
	TOK_SSCANF  reduce 203
	TOK_CATCH  reduce 203
	TOK_FOREACH  reduce 203
	TOK_LEX_EOF  reduce 203
	TOK_ARRAY_ID  reduce 203
	TOK_ATTRIBUTE_ID  reduce 203
	TOK_BREAK  reduce 203
	TOK_CASE  reduce 203
	TOK_CLASS  reduce 203
	TOK_CONTINUE  reduce 203
	TOK_DEFAULT  reduce 203
	TOK_DEPRECATED_ID  reduce 203
	TOK_DO  reduce 203
	TOK_DOT_DOT  reduce 203
	TOK_DOT_DOT_DOT  reduce 203
	TOK_ELSE  reduce 203
	TOK_ENUM  reduce 203
	TOK_EXTERN  reduce 203
	TOK_FLOAT_ID  reduce 203
	TOK_FOR  reduce 203
	TOK_FUNCTION_ID  reduce 203
	TOK_GAUGE  reduce 203
	TOK_IDENTIFIER  reduce 203
	TOK_RESERVED  reduce 203
	TOK_IF  reduce 203
	TOK_IMPORT  reduce 203
	TOK_INHERIT  reduce 203
	TOK_INLINE  reduce 203
	TOK_LOCAL_ID  reduce 203
	TOK_FINAL_ID  reduce 203
	TOK_FUNCTION_NAME  reduce 203
	TOK_INT_ID  reduce 203
	TOK_LAMBDA  reduce 203
	TOK_MULTISET_ID  reduce 203
	TOK_MAPPING_ID  reduce 203
	TOK_MIXED_ID  reduce 203
	TOK_OBJECT_ID  reduce 203
	TOK_PRIVATE  reduce 203
	TOK_PROGRAM_ID  reduce 203
	TOK_PROTECTED  reduce 203
	TOK_PREDEF  reduce 203
	TOK_PUBLIC  reduce 203
	TOK_STATIC  reduce 203
	TOK_STRING_ID  reduce 203
	TOK_TYPEDEF  reduce 203
	TOK_TYPEOF  reduce 203
	TOK_VARIANT  reduce 203
	TOK_VOID_ID  reduce 203
	TOK_OPTIONAL  reduce 203
	'|'  reduce 203
	';'  reduce 203
	':'  reduce 203
	','  reduce 203
	'('  reduce 204
	')'  reduce 203
	']'  reduce 203
	'{'  reduce 203

	opt_object_type  goto 213
	$$6  goto 214


state 150
	basic_type : TOK_PROGRAM_ID . opt_program_type  (180)
	opt_program_type : .  (206)

	'('  shift 215
	error  reduce 206
	TOK_CONSTANT  reduce 206
	TOK_RETURN  reduce 206
	TOK_SWITCH  reduce 206
	TOK_SSCANF  reduce 206
	TOK_CATCH  reduce 206
	TOK_FOREACH  reduce 206
	TOK_LEX_EOF  reduce 206
	TOK_ARRAY_ID  reduce 206
	TOK_ATTRIBUTE_ID  reduce 206
	TOK_BREAK  reduce 206
	TOK_CASE  reduce 206
	TOK_CLASS  reduce 206
	TOK_CONTINUE  reduce 206
	TOK_DEFAULT  reduce 206
	TOK_DEPRECATED_ID  reduce 206
	TOK_DO  reduce 206
	TOK_DOT_DOT  reduce 206
	TOK_DOT_DOT_DOT  reduce 206
	TOK_ELSE  reduce 206
	TOK_ENUM  reduce 206
	TOK_EXTERN  reduce 206
	TOK_FLOAT_ID  reduce 206
	TOK_FOR  reduce 206
	TOK_FUNCTION_ID  reduce 206
	TOK_GAUGE  reduce 206
	TOK_IDENTIFIER  reduce 206
	TOK_RESERVED  reduce 206
	TOK_IF  reduce 206
	TOK_IMPORT  reduce 206
	TOK_INHERIT  reduce 206
	TOK_INLINE  reduce 206
	TOK_LOCAL_ID  reduce 206
	TOK_FINAL_ID  reduce 206
	TOK_FUNCTION_NAME  reduce 206
	TOK_INT_ID  reduce 206
	TOK_LAMBDA  reduce 206
	TOK_MULTISET_ID  reduce 206
	TOK_MAPPING_ID  reduce 206
	TOK_MIXED_ID  reduce 206
	TOK_OBJECT_ID  reduce 206
	TOK_PRIVATE  reduce 206
	TOK_PROGRAM_ID  reduce 206
	TOK_PROTECTED  reduce 206
	TOK_PREDEF  reduce 206
	TOK_PUBLIC  reduce 206
	TOK_STATIC  reduce 206
	TOK_STRING_ID  reduce 206
	TOK_TYPEDEF  reduce 206
	TOK_TYPEOF  reduce 206
	TOK_VARIANT  reduce 206
	TOK_VOID_ID  reduce 206
	TOK_OPTIONAL  reduce 206
	'|'  reduce 206
	';'  reduce 206
	':'  reduce 206
	','  reduce 206
	')'  reduce 206
	']'  reduce 206
	'{'  reduce 206

	opt_program_type  goto 216


state 151
	basic_type : TOK_STRING_ID . opt_string_width  (175)
	opt_int_range : .  (198)

	'('  shift 208
	error  reduce 198
	TOK_CONSTANT  reduce 198
	TOK_RETURN  reduce 198
	TOK_SWITCH  reduce 198
	TOK_SSCANF  reduce 198
	TOK_CATCH  reduce 198
	TOK_FOREACH  reduce 198
	TOK_LEX_EOF  reduce 198
	TOK_ARRAY_ID  reduce 198
	TOK_ATTRIBUTE_ID  reduce 198
	TOK_BREAK  reduce 198
	TOK_CASE  reduce 198
	TOK_CLASS  reduce 198
	TOK_CONTINUE  reduce 198
	TOK_DEFAULT  reduce 198
	TOK_DEPRECATED_ID  reduce 198
	TOK_DO  reduce 198
	TOK_DOT_DOT  reduce 198
	TOK_DOT_DOT_DOT  reduce 198
	TOK_ELSE  reduce 198
	TOK_ENUM  reduce 198
	TOK_EXTERN  reduce 198
	TOK_FLOAT_ID  reduce 198
	TOK_FOR  reduce 198
	TOK_FUNCTION_ID  reduce 198
	TOK_GAUGE  reduce 198
	TOK_IDENTIFIER  reduce 198
	TOK_RESERVED  reduce 198
	TOK_IF  reduce 198
	TOK_IMPORT  reduce 198
	TOK_INHERIT  reduce 198
	TOK_INLINE  reduce 198
	TOK_LOCAL_ID  reduce 198
	TOK_FINAL_ID  reduce 198
	TOK_FUNCTION_NAME  reduce 198
	TOK_INT_ID  reduce 198
	TOK_LAMBDA  reduce 198
	TOK_MULTISET_ID  reduce 198
	TOK_MAPPING_ID  reduce 198
	TOK_MIXED_ID  reduce 198
	TOK_OBJECT_ID  reduce 198
	TOK_PRIVATE  reduce 198
	TOK_PROGRAM_ID  reduce 198
	TOK_PROTECTED  reduce 198
	TOK_PREDEF  reduce 198
	TOK_PUBLIC  reduce 198
	TOK_STATIC  reduce 198
	TOK_STRING_ID  reduce 198
	TOK_TYPEDEF  reduce 198
	TOK_TYPEOF  reduce 198
	TOK_VARIANT  reduce 198
	TOK_VOID_ID  reduce 198
	TOK_OPTIONAL  reduce 198
	'|'  reduce 198
	';'  reduce 198
	':'  reduce 198
	','  reduce 198
	')'  reduce 198
	']'  reduce 198
	'{'  reduce 198

	opt_string_width  goto 217
	opt_int_range  goto 218


state 152
	typeof : TOK_TYPEOF . '(' expr0 ')'  (563)
	typeof : TOK_TYPEOF . '(' error ')'  (564)
	typeof : TOK_TYPEOF . '(' error '}'  (565)
	typeof : TOK_TYPEOF . '(' error TOK_LEX_EOF  (566)
	typeof : TOK_TYPEOF . '(' error ';'  (567)

	'('  shift 219
	.  error


state 153
	basic_type : TOK_VOID_ID .  (172)

	.  reduce 172


state 154
	basic_type : TOK_AUTO_ID .  (174)

	.  reduce 174


state 155
	identifier_type : unqualified_idents .  (189)
	unqualified_idents : unqualified_idents . '.' TOK_IDENTIFIER  (529)
	unqualified_idents : unqualified_idents . '.' bad_identifier  (530)

	'.'  shift 125
	error  reduce 189
	TOK_CONSTANT  reduce 189
	TOK_RETURN  reduce 189
	TOK_SWITCH  reduce 189
	TOK_SSCANF  reduce 189
	TOK_CATCH  reduce 189
	TOK_FOREACH  reduce 189
	TOK_LEX_EOF  reduce 189
	TOK_ARRAY_ID  reduce 189
	TOK_ATTRIBUTE_ID  reduce 189
	TOK_BREAK  reduce 189
	TOK_CASE  reduce 189
	TOK_CLASS  reduce 189
	TOK_CONTINUE  reduce 189
	TOK_DEFAULT  reduce 189
	TOK_DEPRECATED_ID  reduce 189
	TOK_DO  reduce 189
	TOK_DOT_DOT  reduce 189
	TOK_DOT_DOT_DOT  reduce 189
	TOK_ELSE  reduce 189
	TOK_ENUM  reduce 189
	TOK_EXTERN  reduce 189
	TOK_FLOAT_ID  reduce 189
	TOK_FOR  reduce 189
	TOK_FUNCTION_ID  reduce 189
	TOK_GAUGE  reduce 189
	TOK_IDENTIFIER  reduce 189
	TOK_RESERVED  reduce 189
	TOK_IF  reduce 189
	TOK_IMPORT  reduce 189
	TOK_INHERIT  reduce 189
	TOK_INLINE  reduce 189
	TOK_LOCAL_ID  reduce 189
	TOK_FINAL_ID  reduce 189
	TOK_FUNCTION_NAME  reduce 189
	TOK_INT_ID  reduce 189
	TOK_LAMBDA  reduce 189
	TOK_MULTISET_ID  reduce 189
	TOK_MAPPING_ID  reduce 189
	TOK_MIXED_ID  reduce 189
	TOK_OBJECT_ID  reduce 189
	TOK_PRIVATE  reduce 189
	TOK_PROGRAM_ID  reduce 189
	TOK_PROTECTED  reduce 189
	TOK_PREDEF  reduce 189
	TOK_PUBLIC  reduce 189
	TOK_STATIC  reduce 189
	TOK_STRING_ID  reduce 189
	TOK_TYPEDEF  reduce 189
	TOK_TYPEOF  reduce 189
	TOK_VARIANT  reduce 189
	TOK_VOID_ID  reduce 189
	TOK_OPTIONAL  reduce 189
	'|'  reduce 189
	';'  reduce 189
	':'  reduce 189
	','  reduce 189
	')'  reduce 189
	']'  reduce 189
	'{'  reduce 189


state 156
	basic_type : typeof .  (183)

	.  reduce 183


state 157
	full_type : full_type . '|' type3  (165)
	typedef : modifiers TOK_TYPEDEF full_type . simple_identifier ';'  (334)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 220
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	'|'  shift 221
	.  error

	simple_identifier  goto 222
	bad_identifier  goto 223
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 158
	type3 : identifier_type .  (170)

	.  reduce 170


state 159
	full_type : type3 .  (166)

	.  reduce 166


state 160
	type3 : basic_type .  (169)

	.  reduce 169


state 161
	def : modifiers '{' $$5 . program close_brace_or_eof  (72)
	program : .  (5)

	.  reduce 5

	program  goto 224


state 162
	attribute : TOK_ATTRIBUTE_ID . '(' string_constant optional_comma ')'  (154)
	basic_type : TOK_ATTRIBUTE_ID . '(' string_constant ',' full_type ')'  (184)
	basic_type : TOK_ATTRIBUTE_ID . '(' string_constant error ')'  (185)
	basic_type : TOK_ATTRIBUTE_ID . error  (186)

	error  shift 203
	'('  shift 225
	.  error


state 163
	attribute : TOK_DEPRECATED_ID . '(' ')'  (155)
	attribute : TOK_DEPRECATED_ID .  (156)
	basic_type : TOK_DEPRECATED_ID . '(' full_type ')'  (187)
	basic_type : TOK_DEPRECATED_ID . '(' error ')'  (188)

	'('  shift 226
	TOK_ARRAY_ID  reduce 156
	TOK_ATTRIBUTE_ID  reduce 156
	TOK_DEPRECATED_ID  reduce 156
	TOK_FLOAT_ID  reduce 156
	TOK_FUNCTION_ID  reduce 156
	TOK_GLOBAL  reduce 156
	TOK_IDENTIFIER  reduce 156
	TOK_RESERVED  reduce 156
	TOK_INT_ID  reduce 156
	TOK_MULTISET_ID  reduce 156
	TOK_MAPPING_ID  reduce 156
	TOK_MIXED_ID  reduce 156
	TOK_OBJECT_ID  reduce 156
	TOK_PROGRAM_ID  reduce 156
	TOK_STRING_ID  reduce 156
	TOK_TYPEOF  reduce 156
	TOK_VOID_ID  reduce 156
	TOK_AUTO_ID  reduce 156
	'.'  reduce 156


state 164
	optional_attributes : optional_attributes attribute .  (158)

	.  reduce 158


state 165
	def : modifiers optional_attributes simple_type . optional_constant TOK_IDENTIFIER start_function '(' $$2 arguments close_paren_or_missing $$3 block_or_semi  (57)
	def : modifiers optional_attributes simple_type . optional_constant TOK_IDENTIFIER start_function error  (58)
	def : modifiers optional_attributes simple_type . optional_constant bad_identifier $$4 '(' arguments ')' block_or_semi  (60)
	def : modifiers optional_attributes simple_type . optional_constant name_list ';'  (61)
	optional_constant : .  (53)

	TOK_CONSTANT  shift 227
	TOK_RETURN  reduce 53
	TOK_SWITCH  reduce 53
	TOK_SSCANF  reduce 53
	TOK_CATCH  reduce 53
	TOK_FOREACH  reduce 53
	TOK_ARRAY_ID  reduce 53
	TOK_ATTRIBUTE_ID  reduce 53
	TOK_BREAK  reduce 53
	TOK_CASE  reduce 53
	TOK_CLASS  reduce 53
	TOK_CONTINUE  reduce 53
	TOK_DEFAULT  reduce 53
	TOK_DEPRECATED_ID  reduce 53
	TOK_DO  reduce 53
	TOK_ELSE  reduce 53
	TOK_ENUM  reduce 53
	TOK_EXTERN  reduce 53
	TOK_FLOAT_ID  reduce 53
	TOK_FOR  reduce 53
	TOK_FUNCTION_ID  reduce 53
	TOK_GAUGE  reduce 53
	TOK_IDENTIFIER  reduce 53
	TOK_RESERVED  reduce 53
	TOK_IF  reduce 53
	TOK_IMPORT  reduce 53
	TOK_INHERIT  reduce 53
	TOK_INLINE  reduce 53
	TOK_LOCAL_ID  reduce 53
	TOK_FINAL_ID  reduce 53
	TOK_FUNCTION_NAME  reduce 53
	TOK_INT_ID  reduce 53
	TOK_LAMBDA  reduce 53
	TOK_MULTISET_ID  reduce 53
	TOK_MAPPING_ID  reduce 53
	TOK_MIXED_ID  reduce 53
	TOK_OBJECT_ID  reduce 53
	TOK_PRIVATE  reduce 53
	TOK_PROGRAM_ID  reduce 53
	TOK_PROTECTED  reduce 53
	TOK_PREDEF  reduce 53
	TOK_PUBLIC  reduce 53
	TOK_STATIC  reduce 53
	TOK_STRING_ID  reduce 53
	TOK_TYPEDEF  reduce 53
	TOK_TYPEOF  reduce 53
	TOK_VARIANT  reduce 53
	TOK_VOID_ID  reduce 53
	TOK_OPTIONAL  reduce 53

	optional_constant  goto 228


state 166
	simple_type : full_type .  (163)
	full_type : full_type . '|' type3  (165)

	'|'  shift 221
	TOK_CONSTANT  reduce 163
	TOK_RETURN  reduce 163
	TOK_SWITCH  reduce 163
	TOK_SSCANF  reduce 163
	TOK_CATCH  reduce 163
	TOK_FOREACH  reduce 163
	TOK_ARRAY_ID  reduce 163
	TOK_ATTRIBUTE_ID  reduce 163
	TOK_BREAK  reduce 163
	TOK_CASE  reduce 163
	TOK_CLASS  reduce 163
	TOK_CONTINUE  reduce 163
	TOK_DEFAULT  reduce 163
	TOK_DEPRECATED_ID  reduce 163
	TOK_DO  reduce 163
	TOK_DOT_DOT  reduce 163
	TOK_DOT_DOT_DOT  reduce 163
	TOK_ELSE  reduce 163
	TOK_ENUM  reduce 163
	TOK_EXTERN  reduce 163
	TOK_FLOAT_ID  reduce 163
	TOK_FOR  reduce 163
	TOK_FUNCTION_ID  reduce 163
	TOK_GAUGE  reduce 163
	TOK_IDENTIFIER  reduce 163
	TOK_RESERVED  reduce 163
	TOK_IF  reduce 163
	TOK_IMPORT  reduce 163
	TOK_INHERIT  reduce 163
	TOK_INLINE  reduce 163
	TOK_LOCAL_ID  reduce 163
	TOK_FINAL_ID  reduce 163
	TOK_FUNCTION_NAME  reduce 163
	TOK_INT_ID  reduce 163
	TOK_LAMBDA  reduce 163
	TOK_MULTISET_ID  reduce 163
	TOK_MAPPING_ID  reduce 163
	TOK_MIXED_ID  reduce 163
	TOK_OBJECT_ID  reduce 163
	TOK_PRIVATE  reduce 163
	TOK_PROGRAM_ID  reduce 163
	TOK_PROTECTED  reduce 163
	TOK_PREDEF  reduce 163
	TOK_PUBLIC  reduce 163
	TOK_STATIC  reduce 163
	TOK_STRING_ID  reduce 163
	TOK_TYPEDEF  reduce 163
	TOK_TYPEOF  reduce 163
	TOK_VARIANT  reduce 163
	TOK_VOID_ID  reduce 163
	TOK_OPTIONAL  reduce 163


state 167
	low_idents : TOK_GLOBAL '.' TOK_IDENTIFIER .  (546)

	.  reduce 546


state 168
	qualified_ident : TOK_PREDEF TOK_COLON_COLON TOK_IDENTIFIER .  (548)

	.  reduce 548


state 169
	qualified_ident : TOK_PREDEF TOK_COLON_COLON bad_identifier .  (549)

	.  reduce 549


state 170
	qualified_ident : TOK_VERSION TOK_COLON_COLON TOK_IDENTIFIER .  (550)

	.  reduce 550


state 171
	qualified_ident : TOK_VERSION TOK_COLON_COLON bad_identifier .  (551)

	.  reduce 551


state 172
	inherit_specifier : inherit_specifier TOK_IDENTIFIER TOK_COLON_COLON .  (542)

	.  reduce 542


state 173
	inherit_specifier : inherit_specifier TOK_LOCAL_ID TOK_COLON_COLON .  (541)

	.  reduce 541


state 174
	inherit_specifier : inherit_specifier bad_inherit TOK_COLON_COLON .  (543)

	.  reduce 543


state 175
	unqualified_idents : unqualified_idents '.' TOK_IDENTIFIER .  (529)

	.  reduce 529


state 176
	unqualified_idents : unqualified_idents '.' bad_identifier .  (530)

	.  reduce 530


state 177
	qualified_idents : qualified_idents '.' TOK_IDENTIFIER .  (532)

	.  reduce 532


state 178
	qualified_idents : qualified_idents '.' bad_identifier .  (533)

	.  reduce 533


state 179
	constant : modifiers TOK_CONSTANT error TOK_LEX_EOF .  (36)

	.  reduce 36


state 180
	constant_name : error '=' . safe_expr0  (31)
	implicit_modifiers : .  (484)

	error  shift 229
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_LEX_EOF  shift 237
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_expr0  goto 253
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 258
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 181
	constant : modifiers TOK_CONSTANT error ';' .  (35)

	.  reduce 35


state 182
	constant : modifiers TOK_CONSTANT error '}' .  (37)

	.  reduce 37


state 183
	constant_name : TOK_IDENTIFIER '=' . safe_expr0  (29)
	implicit_modifiers : .  (484)

	error  shift 229
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_LEX_EOF  shift 237
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_expr0  goto 269
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 258
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 184
	constant_name : bad_identifier '=' . safe_expr0  (30)
	implicit_modifiers : .  (484)

	error  shift 229
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_LEX_EOF  shift 237
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_expr0  goto 270
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 258
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 185
	constant : modifiers TOK_CONSTANT constant_list ';' .  (34)

	.  reduce 34


state 186
	constant_list : constant_list ',' . constant_name  (33)

	error  shift 271
	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 129
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	bad_identifier  goto 130
	constant_name  goto 272
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 187
	optional_identifier : TOK_IDENTIFIER .  (76)

	.  reduce 76


state 188
	class : TOK_CLASS line_number_info optional_identifier . $$24 $$25 optional_create_arguments failsafe_program  (319)
	$$24 : .  (317)

	.  reduce 317

	$$24  goto 273


state 189
	optional_identifier : bad_identifier .  (77)

	.  reduce 77


state 190
	enum : TOK_ENUM $$26 optional_identifier . '{' $$27 enum_list $$28 end_block  (333)

	'{'  shift 274
	.  error


state 191
	inheritance : modifiers TOK_INHERIT error TOK_LEX_EOF .  (22)

	.  reduce 22


state 192
	inheritance : modifiers TOK_INHERIT error ';' .  (21)

	.  reduce 21


state 193
	inheritance : modifiers TOK_INHERIT error '}' .  (23)

	.  reduce 23


state 194
	inheritance : modifiers TOK_INHERIT inherit_ref error . ';'  (18)
	inheritance : modifiers TOK_INHERIT inherit_ref error . TOK_LEX_EOF  (19)
	inheritance : modifiers TOK_INHERIT inherit_ref error . '}'  (20)

	TOK_LEX_EOF  shift 275
	';'  shift 276
	'}'  shift 277
	.  error


state 195
	optional_rename_inherit : ':' . real_string_or_identifier  (8)
	optional_rename_inherit : ':' . bad_identifier  (9)
	optional_rename_inherit : ':' . error  (10)

	error  shift 278
	TOK_STRING  shift 279
	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 280
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	real_string_constant  goto 281
	real_string_or_identifier  goto 282
	bad_identifier  goto 283
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 196
	inheritance : modifiers TOK_INHERIT inherit_ref optional_rename_inherit . ';'  (17)

	';'  shift 284
	.  error


state 197
	low_program_ref : string_constant .  (12)
	string_constant : string_constant . '+' string  (601)

	'+'  shift 285
	error  reduce 12
	';'  reduce 12
	':'  reduce 12
	')'  reduce 12


state 198
	string_or_identifier : string .  (537)
	string : string . string_segment  (599)
	string_constant : string .  (600)

	TOK_STRING  shift 18
	TOK_FUNCTION_NAME  shift 24
	error  reduce 600
	TOK_COLON_COLON  reduce 537
	'+'  reduce 600
	';'  reduce 600
	':'  reduce 600
	')'  reduce 600

	string_segment  goto 124


state 199
	low_program_ref : idents .  (13)

	.  reduce 13


state 200
	inherit_ref : $$1 low_program_ref .  (16)

	.  reduce 16


state 201
	opt_array_type : '(' . full_type ')'  (218)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	full_type  goto 286
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 202
	basic_type : TOK_ARRAY_ID opt_array_type .  (181)

	.  reduce 181


state 203
	basic_type : TOK_ATTRIBUTE_ID error .  (186)

	.  reduce 186


state 204
	basic_type : TOK_ATTRIBUTE_ID '(' . string_constant ',' full_type ')'  (184)
	basic_type : TOK_ATTRIBUTE_ID '(' . string_constant error ')'  (185)

	TOK_STRING  shift 18
	TOK_FUNCTION_NAME  shift 24
	.  error

	string_constant  goto 287
	string_segment  goto 30
	string  goto 288


state 205
	basic_type : TOK_DEPRECATED_ID '(' . full_type ')'  (187)
	basic_type : TOK_DEPRECATED_ID '(' . error ')'  (188)

	error  shift 289
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	full_type  goto 290
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 206
	opt_function_type : '(' . $$7 function_type_list optional_dot_dot_dot ':' $$8 full_type ')'  (211)
	$$7 : .  (209)

	.  reduce 209

	$$7  goto 291


state 207
	basic_type : TOK_FUNCTION_ID opt_function_type .  (178)

	.  reduce 178


state 208
	opt_int_range : '(' . TOK_BITS ')'  (199)
	opt_int_range : '(' . number_or_minint expected_dot_dot number_or_maxint ')'  (200)
	opt_int_range : '(' . error ')'  (201)
	number_or_minint : .  (193)

	error  shift 292
	TOK_NUMBER  shift 293
	TOK_BITS  shift 294
	'-'  shift 295
	TOK_DOT_DOT  reduce 193
	TOK_DOT_DOT_DOT  reduce 193

	number_or_minint  goto 296


state 209
	basic_type : TOK_INT_ID opt_int_range .  (176)

	.  reduce 176


state 210
	basic_type : TOK_MULTISET_ID opt_array_type .  (182)

	.  reduce 182


state 211
	opt_mapping_type : '(' . $$10 full_type ':' $$11 full_type $$12 ')'  (223)
	$$10 : .  (220)

	.  reduce 220

	$$10  goto 297


state 212
	basic_type : TOK_MAPPING_ID opt_mapping_type .  (177)

	.  reduce 177


state 213
	basic_type : TOK_OBJECT_ID opt_object_type .  (179)

	.  reduce 179


state 214
	opt_object_type : $$6 . '(' program_ref ')'  (205)

	'('  shift 298
	.  error


state 215
	opt_program_type : '(' . full_type ')'  (207)
	opt_program_type : '(' . error ')'  (208)

	error  shift 299
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	full_type  goto 300
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 216
	basic_type : TOK_PROGRAM_ID opt_program_type .  (180)

	.  reduce 180


state 217
	basic_type : TOK_STRING_ID opt_string_width .  (175)

	.  reduce 175


state 218
	opt_string_width : opt_int_range .  (202)

	.  reduce 202


state 219
	typeof : TOK_TYPEOF '(' . expr0 ')'  (563)
	typeof : TOK_TYPEOF '(' . error ')'  (564)
	typeof : TOK_TYPEOF '(' . error '}'  (565)
	typeof : TOK_TYPEOF '(' . error TOK_LEX_EOF  (566)
	typeof : TOK_TYPEOF '(' . error ';'  (567)
	implicit_modifiers : .  (484)

	error  shift 301
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 302
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 220
	simple_identifier : TOK_IDENTIFIER .  (320)

	.  reduce 320


state 221
	full_type : full_type '|' . type3  (165)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	identifier_type  goto 158
	type3  goto 303
	basic_type  goto 160


state 222
	typedef : modifiers TOK_TYPEDEF full_type simple_identifier . ';'  (334)

	';'  shift 304
	.  error


state 223
	simple_identifier : bad_identifier .  (321)

	.  reduce 321


state 224
	program : program . def  (3)
	program : program . ';'  (4)
	def : modifiers '{' $$5 program . close_brace_or_eof  (72)
	modifier_list : .  (152)

	error  shift 3
	TOK_LEX_EOF  shift 305
	TOK_IMPORT  shift 5
	';'  shift 6
	'}'  shift 306
	TOK_CONSTANT  reduce 152
	TOK_ARRAY_ID  reduce 152
	TOK_ATTRIBUTE_ID  reduce 152
	TOK_CLASS  reduce 152
	TOK_DEPRECATED_ID  reduce 152
	TOK_ENUM  reduce 152
	TOK_EXTERN  reduce 152
	TOK_FLOAT_ID  reduce 152
	TOK_FUNCTION_ID  reduce 152
	TOK_GLOBAL  reduce 152
	TOK_IDENTIFIER  reduce 152
	TOK_RESERVED  reduce 152
	TOK_INHERIT  reduce 152
	TOK_INLINE  reduce 152
	TOK_LOCAL_ID  reduce 152
	TOK_FINAL_ID  reduce 152
	TOK_INT_ID  reduce 152
	TOK_MULTISET_ID  reduce 152
	TOK_MAPPING_ID  reduce 152
	TOK_MIXED_ID  reduce 152
	TOK_OBJECT_ID  reduce 152
	TOK_PRIVATE  reduce 152
	TOK_PROGRAM_ID  reduce 152
	TOK_PROTECTED  reduce 152
	TOK_PUBLIC  reduce 152
	TOK_STATIC  reduce 152
	TOK_STRING_ID  reduce 152
	TOK_TYPEDEF  reduce 152
	TOK_TYPEOF  reduce 152
	TOK_VARIANT  reduce 152
	TOK_VOID_ID  reduce 152
	TOK_OPTIONAL  reduce 152
	TOK_AUTO_ID  reduce 152
	'{'  reduce 152
	'.'  reduce 152

	modifier_list  goto 7
	modifiers  goto 8
	def  goto 9
	inheritance  goto 10
	import  goto 11
	constant  goto 12
	close_brace_or_eof  goto 307
	typedef  goto 13


state 225
	attribute : TOK_ATTRIBUTE_ID '(' . string_constant optional_comma ')'  (154)
	basic_type : TOK_ATTRIBUTE_ID '(' . string_constant ',' full_type ')'  (184)
	basic_type : TOK_ATTRIBUTE_ID '(' . string_constant error ')'  (185)

	TOK_STRING  shift 18
	TOK_FUNCTION_NAME  shift 24
	.  error

	string_constant  goto 308
	string_segment  goto 30
	string  goto 288


state 226
	attribute : TOK_DEPRECATED_ID '(' . ')'  (155)
	basic_type : TOK_DEPRECATED_ID '(' . full_type ')'  (187)
	basic_type : TOK_DEPRECATED_ID '(' . error ')'  (188)

	error  shift 289
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	')'  shift 309
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	full_type  goto 290
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 227
	optional_constant : TOK_CONSTANT .  (54)

	.  reduce 54


state 228
	def : modifiers optional_attributes simple_type optional_constant . TOK_IDENTIFIER start_function '(' $$2 arguments close_paren_or_missing $$3 block_or_semi  (57)
	def : modifiers optional_attributes simple_type optional_constant . TOK_IDENTIFIER start_function error  (58)
	def : modifiers optional_attributes simple_type optional_constant . bad_identifier $$4 '(' arguments ')' block_or_semi  (60)
	def : modifiers optional_attributes simple_type optional_constant . name_list ';'  (61)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 310
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	bad_identifier  goto 311
	name_list  goto 312
	new_name  goto 313
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 229
	safe_expr0 : error .  (347)

	.  reduce 347


state 230
	literal_expr : TOK_FLOAT .  (518)

	.  reduce 518


state 231
	literal_expr : TOK_NUMBER .  (517)

	.  reduce 517


state 232
	expr2 : TOK_INC . expr4  (468)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'('  shift 244
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 314
	catch  goto 252
	apply  goto 259
	expr4  goto 315
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 233
	expr2 : TOK_DEC . expr4  (469)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'('  shift 244
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 314
	catch  goto 252
	apply  goto 259
	expr4  goto 316
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 234
	expr2 : TOK_NOT . expr2  (470)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr2  goto 318
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 235
	sscanf : TOK_SSCANF . '(' expr0 ',' expr0 lvalue_list ')'  (577)
	sscanf : TOK_SSCANF . '(' expr0 ',' expr0 error ')'  (578)
	sscanf : TOK_SSCANF . '(' expr0 ',' expr0 error TOK_LEX_EOF  (579)
	sscanf : TOK_SSCANF . '(' expr0 ',' expr0 error '}'  (580)
	sscanf : TOK_SSCANF . '(' expr0 ',' expr0 error ';'  (581)
	sscanf : TOK_SSCANF . '(' expr0 error ')'  (582)
	sscanf : TOK_SSCANF . '(' expr0 error TOK_LEX_EOF  (583)
	sscanf : TOK_SSCANF . '(' expr0 error '}'  (584)
	sscanf : TOK_SSCANF . '(' expr0 error ';'  (585)
	sscanf : TOK_SSCANF . '(' error ')'  (586)
	sscanf : TOK_SSCANF . '(' error TOK_LEX_EOF  (587)
	sscanf : TOK_SSCANF . '(' error '}'  (588)
	sscanf : TOK_SSCANF . '(' error ';'  (589)

	'('  shift 320
	.  error


state 236
	catch : TOK_CATCH . $$41 catch_arg  (576)
	$$41 : .  (575)

	.  reduce 575

	$$41  goto 321


state 237
	safe_expr0 : TOK_LEX_EOF .  (346)

	.  reduce 346


state 238
	gauge : TOK_GAUGE . catch_arg  (562)

	error  shift 322
	'('  shift 323
	'{'  shift 324
	.  error

	block  goto 325
	catch_arg  goto 326


state 239
	lambda : TOK_LAMBDA . line_number_info implicit_identifier start_lambda func_args $$21 failsafe_block  (299)
	lambda : TOK_LAMBDA . line_number_info implicit_identifier start_lambda error  (300)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 327


state 240
	literal_expr : TOK_MULTISET_START . line_number_info expr_list TOK_MULTISET_END  (521)
	literal_expr : TOK_MULTISET_START . line_number_info expr_list ')'  (522)
	literal_expr : TOK_MULTISET_START . line_number_info error TOK_MULTISET_END  (523)
	literal_expr : TOK_MULTISET_START . line_number_info error ')'  (524)
	literal_expr : TOK_MULTISET_START . line_number_info error TOK_LEX_EOF  (525)
	literal_expr : TOK_MULTISET_START . line_number_info error ';'  (526)
	literal_expr : TOK_MULTISET_START . line_number_info error '}'  (527)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 328


state 241
	qualified_ident : TOK_PREDEF . TOK_COLON_COLON TOK_IDENTIFIER  (548)
	qualified_ident : TOK_PREDEF . TOK_COLON_COLON bad_identifier  (549)
	bad_expr_ident : TOK_PREDEF .  (642)

	TOK_COLON_COLON  shift 114
	error  reduce 642
	TOK_ARROW  reduce 642
	TOK_INC  reduce 642
	TOK_DEC  reduce 642
	TOK_EQ  reduce 642
	TOK_GE  reduce 642
	TOK_LE  reduce 642
	TOK_NE  reduce 642
	TOK_LSH  reduce 642
	TOK_RSH  reduce 642
	TOK_LAND  reduce 642
	TOK_LOR  reduce 642
	TOK_LEX_EOF  reduce 642
	TOK_ADD_EQ  reduce 642
	TOK_AND_EQ  reduce 642
	TOK_DIV_EQ  reduce 642
	TOK_DOT_DOT  reduce 642
	TOK_DOT_DOT_DOT  reduce 642
	TOK_MULTISET_END  reduce 642
	TOK_LSH_EQ  reduce 642
	TOK_MOD_EQ  reduce 642
	TOK_MULT_EQ  reduce 642
	TOK_OR_EQ  reduce 642
	TOK_RSH_EQ  reduce 642
	TOK_SUB_EQ  reduce 642
	TOK_XOR_EQ  reduce 642
	TOK_SAFE_INDEX  reduce 642
	TOK_SAFE_START_INDEX  reduce 642
	'='  reduce 642
	'?'  reduce 642
	'|'  reduce 642
	'^'  reduce 642
	'&'  reduce 642
	'>'  reduce 642
	'<'  reduce 642
	'+'  reduce 642
	'-'  reduce 642
	'*'  reduce 642
	'%'  reduce 642
	'/'  reduce 642
	';'  reduce 642
	':'  reduce 642
	'}'  reduce 642
	','  reduce 642
	'('  reduce 642
	')'  reduce 642
	'['  reduce 642
	']'  reduce 642


state 242
	expr2 : '-' . expr2  (472)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr2  goto 329
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 243
	expr2 : '~' . expr2  (471)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr2  goto 330
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 244
	open_paren_with_line_info : '(' .  (42)

	.  reduce 42


state 245
	open_bracket_with_line_info : '[' .  (49)

	.  reduce 49


state 246
	expr5 : implicit_modifiers . class  (495)
	expr5 : implicit_modifiers . enum  (496)

	TOK_CLASS  shift 49
	TOK_ENUM  shift 50
	.  error

	class  goto 331
	enum  goto 332


state 247
	expr2 : cast . expr2  (466)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr2  goto 333
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 248
	expr2 : soft_cast . expr2  (467)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr2  goto 334
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 249
	literal_expr : string .  (516)
	string_or_identifier : string .  (537)
	string : string . string_segment  (599)

	TOK_STRING  shift 18
	TOK_FUNCTION_NAME  shift 24
	error  reduce 516
	TOK_ARROW  reduce 516
	TOK_INC  reduce 516
	TOK_DEC  reduce 516
	TOK_EQ  reduce 516
	TOK_GE  reduce 516
	TOK_LE  reduce 516
	TOK_NE  reduce 516
	TOK_LSH  reduce 516
	TOK_RSH  reduce 516
	TOK_LAND  reduce 516
	TOK_LOR  reduce 516
	TOK_LEX_EOF  reduce 516
	TOK_ADD_EQ  reduce 516
	TOK_AND_EQ  reduce 516
	TOK_COLON_COLON  reduce 537
	TOK_DIV_EQ  reduce 516
	TOK_DOT_DOT  reduce 516
	TOK_DOT_DOT_DOT  reduce 516
	TOK_MULTISET_END  reduce 516
	TOK_LSH_EQ  reduce 516
	TOK_MOD_EQ  reduce 516
	TOK_MULT_EQ  reduce 516
	TOK_OR_EQ  reduce 516
	TOK_RSH_EQ  reduce 516
	TOK_SUB_EQ  reduce 516
	TOK_XOR_EQ  reduce 516
	TOK_SAFE_INDEX  reduce 516
	TOK_SAFE_START_INDEX  reduce 516
	'='  reduce 516
	'?'  reduce 516
	'|'  reduce 516
	'^'  reduce 516
	'&'  reduce 516
	'>'  reduce 516
	'<'  reduce 516
	'+'  reduce 516
	'-'  reduce 516
	'*'  reduce 516
	'%'  reduce 516
	'/'  reduce 516
	';'  reduce 516
	':'  reduce 516
	'}'  reduce 516
	','  reduce 516
	'('  reduce 516
	')'  reduce 516
	'['  reduce 516
	']'  reduce 516
	'.'  reduce 516

	string_segment  goto 124


state 250
	cast : open_paren_with_line_info . type ')'  (159)
	expr5 : open_paren_with_line_info . comma_expr2 ')'  (508)
	expr5 : open_paren_with_line_info . error ')'  (509)
	expr5 : open_paren_with_line_info . error TOK_LEX_EOF  (510)
	expr5 : open_paren_with_line_info . error ';'  (511)
	expr5 : open_paren_with_line_info . error '}'  (512)
	literal_expr : open_paren_with_line_info . '{' expr_list close_brace_or_missing ')'  (519)
	literal_expr : open_paren_with_line_info . open_bracket_with_line_info m_expr_list close_bracket_or_missing ')'  (520)
	implicit_modifiers : .  (484)

	error  shift 335
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'{'  shift 336
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 337
	catch  goto 252
	comma_expr2  goto 338
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 341
	basic_type  goto 342
	bad_expr_ident  goto 268


state 251
	soft_cast : open_bracket_with_line_info . type ']'  (160)
	expr0 : open_bracket_with_line_info . low_lvalue_list ']' '=' expr0  (398)
	expr0 : open_bracket_with_line_info . low_lvalue_list ']' assign expr0  (401)
	expr0 : open_bracket_with_line_info . low_lvalue_list ']' error  (402)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 314
	open_bracket_with_line_info  goto 343
	catch  goto 252
	apply  goto 259
	expr4  goto 344
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	lvalue  goto 346
	low_lvalue_list  goto 347
	sscanf  goto 266
	typeof  goto 340
	type  goto 348
	type2  goto 349
	identifier_type  goto 350
	basic_type  goto 342
	bad_expr_ident  goto 268


state 252
	expr5 : catch .  (490)

	.  reduce 490


state 253
	constant_name : error '=' safe_expr0 .  (31)

	.  reduce 31


state 254
	expr0 : expr01 .  (395)

	.  reduce 395


state 255
	expr01 : expr1 .  (403)
	expr01 : expr1 . '?' expr01 ':' expr01  (404)
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	TOK_EQ  shift 351
	TOK_GE  shift 352
	TOK_LE  shift 353
	TOK_NE  shift 354
	TOK_LSH  shift 355
	TOK_RSH  shift 356
	TOK_LAND  shift 357
	TOK_LOR  shift 358
	'?'  shift 359
	'|'  shift 360
	'^'  shift 361
	'&'  shift 362
	'>'  shift 363
	'<'  shift 364
	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 403
	TOK_LEX_EOF  reduce 403
	TOK_DOT_DOT  reduce 403
	TOK_DOT_DOT_DOT  reduce 403
	TOK_MULTISET_END  reduce 403
	';'  reduce 403
	':'  reduce 403
	'}'  reduce 403
	','  reduce 403
	')'  reduce 403
	']'  reduce 403


state 256
	expr1 : expr2 .  (428)

	.  reduce 428


state 257
	expr2 : expr3 .  (465)

	.  reduce 465


state 258
	safe_expr0 : expr0 .  (345)

	.  reduce 345


state 259
	expr5 : apply .  (497)

	.  reduce 497


state 260
	expr0 : expr4 . '=' expr0  (396)
	expr0 : expr4 . '=' error  (397)
	expr0 : expr4 . assign expr0  (399)
	expr0 : expr4 . assign error  (400)
	expr3 : expr4 .  (473)
	expr3 : expr4 . TOK_INC  (474)
	expr3 : expr4 . TOK_DEC  (475)
	apply : expr4 . open_paren_with_line_info expr_list ')' optional_block  (479)
	apply : expr4 . open_paren_with_line_info error ')' optional_block  (480)
	apply : expr4 . open_paren_with_line_info error TOK_LEX_EOF  (481)
	apply : expr4 . open_paren_with_line_info error ';'  (482)
	apply : expr4 . open_paren_with_line_info error '}'  (483)
	expr5 : expr4 . open_bracket_with_line_info '*' ']'  (498)
	expr5 : expr4 . open_bracket_with_line_info expr0 ']'  (499)
	expr5 : expr4 . open_bracket_with_line_info range_bound expected_dot_dot range_bound ']'  (500)
	expr5 : expr4 . TOK_SAFE_START_INDEX line_number_info expr0 ']'  (501)
	expr5 : expr4 . TOK_SAFE_START_INDEX line_number_info range_bound expected_dot_dot range_bound ']'  (502)
	expr5 : expr4 . open_bracket_with_line_info error ']'  (503)
	expr5 : expr4 . open_bracket_with_line_info error TOK_LEX_EOF  (504)
	expr5 : expr4 . open_bracket_with_line_info error ';'  (505)
	expr5 : expr4 . open_bracket_with_line_info error '}'  (506)
	expr5 : expr4 . open_bracket_with_line_info error ')'  (507)
	expr5 : expr4 . TOK_ARROW line_number_info magic_identifier  (513)
	expr5 : expr4 . TOK_SAFE_INDEX line_number_info TOK_IDENTIFIER  (514)
	expr5 : expr4 . TOK_ARROW line_number_info error  (515)

	TOK_ARROW  shift 370
	TOK_INC  shift 371
	TOK_DEC  shift 372
	TOK_ADD_EQ  shift 373
	TOK_AND_EQ  shift 374
	TOK_DIV_EQ  shift 375
	TOK_LSH_EQ  shift 376
	TOK_MOD_EQ  shift 377
	TOK_MULT_EQ  shift 378
	TOK_OR_EQ  shift 379
	TOK_RSH_EQ  shift 380
	TOK_SUB_EQ  shift 381
	TOK_XOR_EQ  shift 382
	TOK_SAFE_INDEX  shift 383
	TOK_SAFE_START_INDEX  shift 384
	'='  shift 385
	'('  shift 244
	'['  shift 245
	error  reduce 473
	TOK_EQ  reduce 473
	TOK_GE  reduce 473
	TOK_LE  reduce 473
	TOK_NE  reduce 473
	TOK_LSH  reduce 473
	TOK_RSH  reduce 473
	TOK_LAND  reduce 473
	TOK_LOR  reduce 473
	TOK_LEX_EOF  reduce 473
	TOK_DOT_DOT  reduce 473
	TOK_DOT_DOT_DOT  reduce 473
	TOK_MULTISET_END  reduce 473
	'?'  reduce 473
	'|'  reduce 473
	'^'  reduce 473
	'&'  reduce 473
	'>'  reduce 473
	'<'  reduce 473
	'+'  reduce 473
	'-'  reduce 473
	'*'  reduce 473
	'%'  reduce 473
	'/'  reduce 473
	';'  reduce 473
	':'  reduce 473
	'}'  reduce 473
	','  reduce 473
	')'  reduce 473
	']'  reduce 473

	assign  goto 386
	open_paren_with_line_info  goto 387
	open_bracket_with_line_info  goto 388


state 261
	expr4 : expr5 .  (486)
	expr4 : expr5 . '.' line_number_info TOK_IDENTIFIER  (487)

	'.'  shift 389
	error  reduce 486
	TOK_ARROW  reduce 486
	TOK_INC  reduce 486
	TOK_DEC  reduce 486
	TOK_EQ  reduce 486
	TOK_GE  reduce 486
	TOK_LE  reduce 486
	TOK_NE  reduce 486
	TOK_LSH  reduce 486
	TOK_RSH  reduce 486
	TOK_LAND  reduce 486
	TOK_LOR  reduce 486
	TOK_LEX_EOF  reduce 486
	TOK_ADD_EQ  reduce 486
	TOK_AND_EQ  reduce 486
	TOK_DIV_EQ  reduce 486
	TOK_DOT_DOT  reduce 486
	TOK_DOT_DOT_DOT  reduce 486
	TOK_MULTISET_END  reduce 486
	TOK_LSH_EQ  reduce 486
	TOK_MOD_EQ  reduce 486
	TOK_MULT_EQ  reduce 486
	TOK_OR_EQ  reduce 486
	TOK_RSH_EQ  reduce 486
	TOK_SUB_EQ  reduce 486
	TOK_XOR_EQ  reduce 486
	TOK_SAFE_INDEX  reduce 486
	TOK_SAFE_START_INDEX  reduce 486
	'='  reduce 486
	'?'  reduce 486
	'|'  reduce 486
	'^'  reduce 486
	'&'  reduce 486
	'>'  reduce 486
	'<'  reduce 486
	'+'  reduce 486
	'-'  reduce 486
	'*'  reduce 486
	'%'  reduce 486
	'/'  reduce 486
	';'  reduce 486
	':'  reduce 486
	'}'  reduce 486
	','  reduce 486
	'('  reduce 486
	')'  reduce 486
	'['  reduce 486
	']'  reduce 486


state 262
	expr5 : gauge .  (491)

	.  reduce 491


state 263
	expr4 : idents .  (485)

	.  reduce 485


state 264
	expr5 : lambda .  (494)

	.  reduce 494


state 265
	expr5 : literal_expr .  (489)

	.  reduce 489


state 266
	expr5 : sscanf .  (493)

	.  reduce 493


state 267
	expr5 : typeof .  (492)

	.  reduce 492


state 268
	expr4 : bad_expr_ident .  (488)

	.  reduce 488


state 269
	constant_name : TOK_IDENTIFIER '=' safe_expr0 .  (29)

	.  reduce 29


state 270
	constant_name : bad_identifier '=' safe_expr0 .  (30)

	.  reduce 30


state 271
	constant_name : error . '=' safe_expr0  (31)

	'='  shift 180
	.  error


state 272
	constant_list : constant_list ',' constant_name .  (33)

	.  reduce 33


state 273
	class : TOK_CLASS line_number_info optional_identifier $$24 . $$25 optional_create_arguments failsafe_program  (319)
	$$25 : .  (318)

	.  reduce 318

	$$25  goto 390


state 274
	enum : TOK_ENUM $$26 optional_identifier '{' . $$27 enum_list $$28 end_block  (333)
	$$27 : .  (331)

	.  reduce 331

	$$27  goto 391


state 275
	inheritance : modifiers TOK_INHERIT inherit_ref error TOK_LEX_EOF .  (19)

	.  reduce 19


state 276
	inheritance : modifiers TOK_INHERIT inherit_ref error ';' .  (18)

	.  reduce 18


state 277
	inheritance : modifiers TOK_INHERIT inherit_ref error '}' .  (20)

	.  reduce 20


state 278
	optional_rename_inherit : ':' error .  (10)

	.  reduce 10


state 279
	real_string_constant : TOK_STRING .  (602)

	.  reduce 602


state 280
	real_string_or_identifier : TOK_IDENTIFIER .  (6)

	.  reduce 6


state 281
	real_string_or_identifier : real_string_constant .  (7)
	real_string_constant : real_string_constant . TOK_STRING  (603)
	real_string_constant : real_string_constant . '+' TOK_STRING  (604)

	TOK_STRING  shift 392
	'+'  shift 393
	';'  reduce 7


state 282
	optional_rename_inherit : ':' real_string_or_identifier .  (8)

	.  reduce 8


state 283
	optional_rename_inherit : ':' bad_identifier .  (9)

	.  reduce 9


state 284
	inheritance : modifiers TOK_INHERIT inherit_ref optional_rename_inherit ';' .  (17)

	.  reduce 17


state 285
	string_constant : string_constant '+' . string  (601)

	TOK_STRING  shift 18
	TOK_FUNCTION_NAME  shift 24
	.  error

	string_segment  goto 30
	string  goto 394


state 286
	full_type : full_type . '|' type3  (165)
	opt_array_type : '(' full_type . ')'  (218)

	'|'  shift 221
	')'  shift 395
	.  error


state 287
	basic_type : TOK_ATTRIBUTE_ID '(' string_constant . ',' full_type ')'  (184)
	basic_type : TOK_ATTRIBUTE_ID '(' string_constant . error ')'  (185)
	string_constant : string_constant . '+' string  (601)

	error  shift 396
	'+'  shift 285
	','  shift 397
	.  error


state 288
	string : string . string_segment  (599)
	string_constant : string .  (600)

	TOK_STRING  shift 18
	TOK_FUNCTION_NAME  shift 24
	error  reduce 600
	'+'  reduce 600
	','  reduce 600
	')'  reduce 600

	string_segment  goto 124


state 289
	basic_type : TOK_DEPRECATED_ID '(' error . ')'  (188)

	')'  shift 398
	.  error


state 290
	full_type : full_type . '|' type3  (165)
	basic_type : TOK_DEPRECATED_ID '(' full_type . ')'  (187)

	'|'  shift 221
	')'  shift 399
	.  error


state 291
	opt_function_type : '(' $$7 . function_type_list optional_dot_dot_dot ':' $$8 full_type ')'  (211)
	optional_comma : .  (415)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	','  shift 400
	'.'  shift 27
	TOK_DOT_DOT  reduce 415
	TOK_DOT_DOT_DOT  reduce 415
	':'  reduce 415

	function_type_list  goto 401
	function_type_list2  goto 402
	optional_comma  goto 403
	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	full_type  goto 404
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 292
	opt_int_range : '(' error . ')'  (201)

	')'  shift 405
	.  error


state 293
	number_or_minint : TOK_NUMBER .  (194)

	.  reduce 194


state 294
	opt_int_range : '(' TOK_BITS . ')'  (199)

	')'  shift 406
	.  error


state 295
	number_or_minint : '-' . TOK_NUMBER  (195)

	TOK_NUMBER  shift 407
	.  error


state 296
	opt_int_range : '(' number_or_minint . expected_dot_dot number_or_maxint ')'  (200)

	TOK_DOT_DOT  shift 408
	TOK_DOT_DOT_DOT  shift 409
	.  error

	expected_dot_dot  goto 410


state 297
	opt_mapping_type : '(' $$10 . full_type ':' $$11 full_type $$12 ')'  (223)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	full_type  goto 411
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 298
	opt_object_type : $$6 '(' . program_ref ')'  (205)

	TOK_STRING  shift 18
	TOK_COLON_COLON  shift 19
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_LOCAL_ID  shift 23
	TOK_FUNCTION_NAME  shift 24
	TOK_PREDEF  shift 25
	TOK_VERSION  shift 26
	'.'  shift 27
	.  error

	inherit_specifier  goto 28
	string_constant  goto 197
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 198
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 199
	low_idents  goto 36
	low_program_ref  goto 412
	program_ref  goto 413


state 299
	opt_program_type : '(' error . ')'  (208)

	')'  shift 414
	.  error


state 300
	full_type : full_type . '|' type3  (165)
	opt_program_type : '(' full_type . ')'  (207)

	'|'  shift 221
	')'  shift 415
	.  error


state 301
	typeof : TOK_TYPEOF '(' error . ')'  (564)
	typeof : TOK_TYPEOF '(' error . '}'  (565)
	typeof : TOK_TYPEOF '(' error . TOK_LEX_EOF  (566)
	typeof : TOK_TYPEOF '(' error . ';'  (567)

	TOK_LEX_EOF  shift 416
	';'  shift 417
	'}'  shift 418
	')'  shift 419
	.  error


state 302
	typeof : TOK_TYPEOF '(' expr0 . ')'  (563)

	')'  shift 420
	.  error


state 303
	full_type : full_type '|' type3 .  (165)

	.  reduce 165


state 304
	typedef : modifiers TOK_TYPEDEF full_type simple_identifier ';' .  (334)

	.  reduce 334


state 305
	close_brace_or_eof : TOK_LEX_EOF .  (48)

	.  reduce 48


state 306
	close_brace_or_eof : '}' .  (47)

	.  reduce 47


state 307
	def : modifiers '{' $$5 program close_brace_or_eof .  (72)

	.  reduce 72


state 308
	attribute : TOK_ATTRIBUTE_ID '(' string_constant . optional_comma ')'  (154)
	basic_type : TOK_ATTRIBUTE_ID '(' string_constant . ',' full_type ')'  (184)
	basic_type : TOK_ATTRIBUTE_ID '(' string_constant . error ')'  (185)
	string_constant : string_constant . '+' string  (601)
	optional_comma : .  (415)

	error  shift 396
	'+'  shift 285
	','  shift 421
	')'  reduce 415

	optional_comma  goto 422


state 309
	attribute : TOK_DEPRECATED_ID '(' ')' .  (155)

	.  reduce 155


state 310
	def : modifiers optional_attributes simple_type optional_constant TOK_IDENTIFIER . start_function '(' $$2 arguments close_paren_or_missing $$3 block_or_semi  (57)
	def : modifiers optional_attributes simple_type optional_constant TOK_IDENTIFIER . start_function error  (58)
	new_name : TOK_IDENTIFIER .  (227)
	new_name : TOK_IDENTIFIER . '=' $$13 expr0  (230)
	new_name : TOK_IDENTIFIER . '=' error  (231)
	new_name : TOK_IDENTIFIER . '=' TOK_LEX_EOF  (232)
	start_function : .  (52)

	'='  shift 423
	error  reduce 52
	';'  reduce 227
	','  reduce 227
	'('  reduce 52

	start_function  goto 424


state 311
	def : modifiers optional_attributes simple_type optional_constant bad_identifier . $$4 '(' arguments ')' block_or_semi  (60)
	new_name : bad_identifier .  (228)
	new_name : bad_identifier . '=' expr0  (233)
	$$4 : .  (59)

	'='  shift 425
	';'  reduce 228
	','  reduce 228
	'('  reduce 59

	$$4  goto 426


state 312
	def : modifiers optional_attributes simple_type optional_constant name_list . ';'  (61)
	name_list : name_list . ',' new_name  (226)

	';'  shift 427
	','  shift 428
	.  error


state 313
	name_list : new_name .  (225)

	.  reduce 225


state 314
	expr5 : open_paren_with_line_info . comma_expr2 ')'  (508)
	expr5 : open_paren_with_line_info . error ')'  (509)
	expr5 : open_paren_with_line_info . error TOK_LEX_EOF  (510)
	expr5 : open_paren_with_line_info . error ';'  (511)
	expr5 : open_paren_with_line_info . error '}'  (512)
	literal_expr : open_paren_with_line_info . '{' expr_list close_brace_or_missing ')'  (519)
	literal_expr : open_paren_with_line_info . open_bracket_with_line_info m_expr_list close_bracket_or_missing ')'  (520)
	implicit_modifiers : .  (484)

	error  shift 335
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'{'  shift 336
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 337
	catch  goto 252
	comma_expr2  goto 338
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 315
	expr2 : TOK_INC expr4 .  (468)
	apply : expr4 . open_paren_with_line_info expr_list ')' optional_block  (479)
	apply : expr4 . open_paren_with_line_info error ')' optional_block  (480)
	apply : expr4 . open_paren_with_line_info error TOK_LEX_EOF  (481)
	apply : expr4 . open_paren_with_line_info error ';'  (482)
	apply : expr4 . open_paren_with_line_info error '}'  (483)
	expr5 : expr4 . open_bracket_with_line_info '*' ']'  (498)
	expr5 : expr4 . open_bracket_with_line_info expr0 ']'  (499)
	expr5 : expr4 . open_bracket_with_line_info range_bound expected_dot_dot range_bound ']'  (500)
	expr5 : expr4 . TOK_SAFE_START_INDEX line_number_info expr0 ']'  (501)
	expr5 : expr4 . TOK_SAFE_START_INDEX line_number_info range_bound expected_dot_dot range_bound ']'  (502)
	expr5 : expr4 . open_bracket_with_line_info error ']'  (503)
	expr5 : expr4 . open_bracket_with_line_info error TOK_LEX_EOF  (504)
	expr5 : expr4 . open_bracket_with_line_info error ';'  (505)
	expr5 : expr4 . open_bracket_with_line_info error '}'  (506)
	expr5 : expr4 . open_bracket_with_line_info error ')'  (507)
	expr5 : expr4 . TOK_ARROW line_number_info magic_identifier  (513)
	expr5 : expr4 . TOK_SAFE_INDEX line_number_info TOK_IDENTIFIER  (514)
	expr5 : expr4 . TOK_ARROW line_number_info error  (515)

	TOK_ARROW  shift 370
	TOK_SAFE_INDEX  shift 383
	TOK_SAFE_START_INDEX  shift 384
	'('  shift 244
	'['  shift 245
	error  reduce 468
	TOK_EQ  reduce 468
	TOK_GE  reduce 468
	TOK_LE  reduce 468
	TOK_NE  reduce 468
	TOK_LSH  reduce 468
	TOK_RSH  reduce 468
	TOK_LAND  reduce 468
	TOK_LOR  reduce 468
	TOK_LEX_EOF  reduce 468
	TOK_DOT_DOT  reduce 468
	TOK_DOT_DOT_DOT  reduce 468
	TOK_MULTISET_END  reduce 468
	'?'  reduce 468
	'|'  reduce 468
	'^'  reduce 468
	'&'  reduce 468
	'>'  reduce 468
	'<'  reduce 468
	'+'  reduce 468
	'-'  reduce 468
	'*'  reduce 468
	'%'  reduce 468
	'/'  reduce 468
	';'  reduce 468
	':'  reduce 468
	'}'  reduce 468
	','  reduce 468
	')'  reduce 468
	']'  reduce 468

	open_paren_with_line_info  goto 387
	open_bracket_with_line_info  goto 388


state 316
	expr2 : TOK_DEC expr4 .  (469)
	apply : expr4 . open_paren_with_line_info expr_list ')' optional_block  (479)
	apply : expr4 . open_paren_with_line_info error ')' optional_block  (480)
	apply : expr4 . open_paren_with_line_info error TOK_LEX_EOF  (481)
	apply : expr4 . open_paren_with_line_info error ';'  (482)
	apply : expr4 . open_paren_with_line_info error '}'  (483)
	expr5 : expr4 . open_bracket_with_line_info '*' ']'  (498)
	expr5 : expr4 . open_bracket_with_line_info expr0 ']'  (499)
	expr5 : expr4 . open_bracket_with_line_info range_bound expected_dot_dot range_bound ']'  (500)
	expr5 : expr4 . TOK_SAFE_START_INDEX line_number_info expr0 ']'  (501)
	expr5 : expr4 . TOK_SAFE_START_INDEX line_number_info range_bound expected_dot_dot range_bound ']'  (502)
	expr5 : expr4 . open_bracket_with_line_info error ']'  (503)
	expr5 : expr4 . open_bracket_with_line_info error TOK_LEX_EOF  (504)
	expr5 : expr4 . open_bracket_with_line_info error ';'  (505)
	expr5 : expr4 . open_bracket_with_line_info error '}'  (506)
	expr5 : expr4 . open_bracket_with_line_info error ')'  (507)
	expr5 : expr4 . TOK_ARROW line_number_info magic_identifier  (513)
	expr5 : expr4 . TOK_SAFE_INDEX line_number_info TOK_IDENTIFIER  (514)
	expr5 : expr4 . TOK_ARROW line_number_info error  (515)

	TOK_ARROW  shift 370
	TOK_SAFE_INDEX  shift 383
	TOK_SAFE_START_INDEX  shift 384
	'('  shift 244
	'['  shift 245
	error  reduce 469
	TOK_EQ  reduce 469
	TOK_GE  reduce 469
	TOK_LE  reduce 469
	TOK_NE  reduce 469
	TOK_LSH  reduce 469
	TOK_RSH  reduce 469
	TOK_LAND  reduce 469
	TOK_LOR  reduce 469
	TOK_LEX_EOF  reduce 469
	TOK_DOT_DOT  reduce 469
	TOK_DOT_DOT_DOT  reduce 469
	TOK_MULTISET_END  reduce 469
	'?'  reduce 469
	'|'  reduce 469
	'^'  reduce 469
	'&'  reduce 469
	'>'  reduce 469
	'<'  reduce 469
	'+'  reduce 469
	'-'  reduce 469
	'*'  reduce 469
	'%'  reduce 469
	'/'  reduce 469
	';'  reduce 469
	':'  reduce 469
	'}'  reduce 469
	','  reduce 469
	')'  reduce 469
	']'  reduce 469

	open_paren_with_line_info  goto 387
	open_bracket_with_line_info  goto 388


state 317
	soft_cast : open_bracket_with_line_info . type ']'  (160)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	.  error

	typeof  goto 156
	type  goto 429
	basic_type  goto 342


state 318
	expr2 : TOK_NOT expr2 .  (470)

	.  reduce 470


state 319
	expr3 : expr4 .  (473)
	expr3 : expr4 . TOK_INC  (474)
	expr3 : expr4 . TOK_DEC  (475)
	apply : expr4 . open_paren_with_line_info expr_list ')' optional_block  (479)
	apply : expr4 . open_paren_with_line_info error ')' optional_block  (480)
	apply : expr4 . open_paren_with_line_info error TOK_LEX_EOF  (481)
	apply : expr4 . open_paren_with_line_info error ';'  (482)
	apply : expr4 . open_paren_with_line_info error '}'  (483)
	expr5 : expr4 . open_bracket_with_line_info '*' ']'  (498)
	expr5 : expr4 . open_bracket_with_line_info expr0 ']'  (499)
	expr5 : expr4 . open_bracket_with_line_info range_bound expected_dot_dot range_bound ']'  (500)
	expr5 : expr4 . TOK_SAFE_START_INDEX line_number_info expr0 ']'  (501)
	expr5 : expr4 . TOK_SAFE_START_INDEX line_number_info range_bound expected_dot_dot range_bound ']'  (502)
	expr5 : expr4 . open_bracket_with_line_info error ']'  (503)
	expr5 : expr4 . open_bracket_with_line_info error TOK_LEX_EOF  (504)
	expr5 : expr4 . open_bracket_with_line_info error ';'  (505)
	expr5 : expr4 . open_bracket_with_line_info error '}'  (506)
	expr5 : expr4 . open_bracket_with_line_info error ')'  (507)
	expr5 : expr4 . TOK_ARROW line_number_info magic_identifier  (513)
	expr5 : expr4 . TOK_SAFE_INDEX line_number_info TOK_IDENTIFIER  (514)
	expr5 : expr4 . TOK_ARROW line_number_info error  (515)

	TOK_ARROW  shift 370
	TOK_INC  shift 371
	TOK_DEC  shift 372
	TOK_SAFE_INDEX  shift 383
	TOK_SAFE_START_INDEX  shift 384
	'('  shift 244
	'['  shift 245
	error  reduce 473
	TOK_EQ  reduce 473
	TOK_GE  reduce 473
	TOK_LE  reduce 473
	TOK_NE  reduce 473
	TOK_LSH  reduce 473
	TOK_RSH  reduce 473
	TOK_LAND  reduce 473
	TOK_LOR  reduce 473
	TOK_LEX_EOF  reduce 473
	TOK_DOT_DOT  reduce 473
	TOK_DOT_DOT_DOT  reduce 473
	TOK_MULTISET_END  reduce 473
	'?'  reduce 473
	'|'  reduce 473
	'^'  reduce 473
	'&'  reduce 473
	'>'  reduce 473
	'<'  reduce 473
	'+'  reduce 473
	'-'  reduce 473
	'*'  reduce 473
	'%'  reduce 473
	'/'  reduce 473
	';'  reduce 473
	':'  reduce 473
	'}'  reduce 473
	','  reduce 473
	')'  reduce 473
	']'  reduce 473

	open_paren_with_line_info  goto 387
	open_bracket_with_line_info  goto 388


state 320
	sscanf : TOK_SSCANF '(' . expr0 ',' expr0 lvalue_list ')'  (577)
	sscanf : TOK_SSCANF '(' . expr0 ',' expr0 error ')'  (578)
	sscanf : TOK_SSCANF '(' . expr0 ',' expr0 error TOK_LEX_EOF  (579)
	sscanf : TOK_SSCANF '(' . expr0 ',' expr0 error '}'  (580)
	sscanf : TOK_SSCANF '(' . expr0 ',' expr0 error ';'  (581)
	sscanf : TOK_SSCANF '(' . expr0 error ')'  (582)
	sscanf : TOK_SSCANF '(' . expr0 error TOK_LEX_EOF  (583)
	sscanf : TOK_SSCANF '(' . expr0 error '}'  (584)
	sscanf : TOK_SSCANF '(' . expr0 error ';'  (585)
	sscanf : TOK_SSCANF '(' . error ')'  (586)
	sscanf : TOK_SSCANF '(' . error TOK_LEX_EOF  (587)
	sscanf : TOK_SSCANF '(' . error '}'  (588)
	sscanf : TOK_SSCANF '(' . error ';'  (589)
	implicit_modifiers : .  (484)

	error  shift 430
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 431
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 321
	catch : TOK_CATCH $$41 . catch_arg  (576)

	error  shift 322
	'('  shift 323
	'{'  shift 324
	.  error

	block  goto 325
	catch_arg  goto 432


state 322
	catch_arg : error .  (574)

	.  reduce 574


state 323
	catch_arg : '(' . comma_expr ')'  (568)
	catch_arg : '(' . error ')'  (569)
	catch_arg : '(' . error TOK_LEX_EOF  (570)
	catch_arg : '(' . error '}'  (571)
	catch_arg : '(' . error ';'  (572)
	implicit_modifiers : .  (484)

	error  shift 433
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	comma_expr  goto 434
	comma_expr2  goto 435
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 324
	block : '{' . $$18 line_number_info $$19 statements end_block  (247)
	$$18 : .  (245)

	.  reduce 245

	$$18  goto 439


state 325
	catch_arg : block .  (573)

	.  reduce 573


state 326
	gauge : TOK_GAUGE catch_arg .  (562)

	.  reduce 562


state 327
	lambda : TOK_LAMBDA line_number_info . implicit_identifier start_lambda func_args $$21 failsafe_block  (299)
	lambda : TOK_LAMBDA line_number_info . implicit_identifier start_lambda error  (300)
	implicit_identifier : .  (297)

	.  reduce 297

	implicit_identifier  goto 440


state 328
	literal_expr : TOK_MULTISET_START line_number_info . expr_list TOK_MULTISET_END  (521)
	literal_expr : TOK_MULTISET_START line_number_info . expr_list ')'  (522)
	literal_expr : TOK_MULTISET_START line_number_info . error TOK_MULTISET_END  (523)
	literal_expr : TOK_MULTISET_START line_number_info . error ')'  (524)
	literal_expr : TOK_MULTISET_START line_number_info . error TOK_LEX_EOF  (525)
	literal_expr : TOK_MULTISET_START line_number_info . error ';'  (526)
	literal_expr : TOK_MULTISET_START line_number_info . error '}'  (527)
	expr_list : .  (417)
	implicit_modifiers : .  (484)

	error  shift 441
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'@'  shift 442
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	TOK_MULTISET_END  reduce 417
	')'  reduce 417

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	splice_expr  goto 443
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 444
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	expr_list  goto 445
	expr_list2  goto 446
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 329
	expr2 : '-' expr2 .  (472)

	.  reduce 472


state 330
	expr2 : '~' expr2 .  (471)

	.  reduce 471


state 331
	expr5 : implicit_modifiers class .  (495)

	.  reduce 495


state 332
	expr5 : implicit_modifiers enum .  (496)

	.  reduce 496


state 333
	expr2 : cast expr2 .  (466)

	.  reduce 466


state 334
	expr2 : soft_cast expr2 .  (467)

	.  reduce 467


state 335
	expr5 : open_paren_with_line_info error . ')'  (509)
	expr5 : open_paren_with_line_info error . TOK_LEX_EOF  (510)
	expr5 : open_paren_with_line_info error . ';'  (511)
	expr5 : open_paren_with_line_info error . '}'  (512)

	TOK_LEX_EOF  shift 447
	';'  shift 448
	'}'  shift 449
	')'  shift 450
	.  error


state 336
	literal_expr : open_paren_with_line_info '{' . expr_list close_brace_or_missing ')'  (519)
	expr_list : .  (417)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'@'  shift 442
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	'}'  reduce 417
	')'  reduce 417

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	splice_expr  goto 443
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 444
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	expr_list  goto 451
	expr_list2  goto 446
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 337
	soft_cast : open_bracket_with_line_info . type ']'  (160)
	expr0 : open_bracket_with_line_info . low_lvalue_list ']' '=' expr0  (398)
	expr0 : open_bracket_with_line_info . low_lvalue_list ']' assign expr0  (401)
	expr0 : open_bracket_with_line_info . low_lvalue_list ']' error  (402)
	literal_expr : open_paren_with_line_info open_bracket_with_line_info . m_expr_list close_bracket_or_missing ')'  (520)
	m_expr_list : .  (421)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	')'  reduce 421
	']'  reduce 421

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	assoc_pair  goto 452
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 453
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 454
	apply  goto 259
	expr4  goto 455
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	lvalue  goto 346
	low_lvalue_list  goto 347
	m_expr_list  goto 456
	m_expr_list2  goto 457
	sscanf  goto 266
	typeof  goto 340
	type  goto 348
	type2  goto 349
	identifier_type  goto 350
	basic_type  goto 342
	bad_expr_ident  goto 268


state 338
	comma_expr2 : comma_expr2 . ',' expr0  (392)
	expr5 : open_paren_with_line_info comma_expr2 . ')'  (508)

	','  shift 458
	')'  shift 459
	.  error


state 339
	comma_expr2 : expr0 .  (391)

	.  reduce 391


340: reduce/reduce conflict (reduce 183, reduce 492) on '|'
340: reduce/reduce conflict (reduce 183, reduce 492) on ')'
340: reduce/reduce conflict (reduce 183, reduce 492) on ']'
state 340
	basic_type : typeof .  (183)
	expr5 : typeof .  (492)

	TOK_ARROW  reduce 492
	TOK_INC  reduce 492
	TOK_DEC  reduce 492
	TOK_RETURN  reduce 183
	TOK_EQ  reduce 492
	TOK_GE  reduce 492
	TOK_LE  reduce 492
	TOK_NE  reduce 492
	TOK_LSH  reduce 492
	TOK_RSH  reduce 492
	TOK_LAND  reduce 492
	TOK_LOR  reduce 492
	TOK_SWITCH  reduce 183
	TOK_SSCANF  reduce 183
	TOK_CATCH  reduce 183
	TOK_FOREACH  reduce 183
	TOK_LEX_EOF  reduce 492
	TOK_ADD_EQ  reduce 492
	TOK_AND_EQ  reduce 492
	TOK_ARRAY_ID  reduce 183
	TOK_ATTRIBUTE_ID  reduce 183
	TOK_BREAK  reduce 183
	TOK_CASE  reduce 183
	TOK_CLASS  reduce 183
	TOK_CONTINUE  reduce 183
	TOK_DEFAULT  reduce 183
	TOK_DEPRECATED_ID  reduce 183
	TOK_DIV_EQ  reduce 492
	TOK_DO  reduce 183
	TOK_DOT_DOT  reduce 492
	TOK_DOT_DOT_DOT  reduce 492
	TOK_ELSE  reduce 183
	TOK_ENUM  reduce 183
	TOK_EXTERN  reduce 183
	TOK_FLOAT_ID  reduce 183
	TOK_FOR  reduce 183
	TOK_FUNCTION_ID  reduce 183
	TOK_GAUGE  reduce 183
	TOK_IDENTIFIER  reduce 183
	TOK_RESERVED  reduce 183
	TOK_IF  reduce 183
	TOK_IMPORT  reduce 183
	TOK_INHERIT  reduce 183
	TOK_INLINE  reduce 183
	TOK_LOCAL_ID  reduce 183
	TOK_FINAL_ID  reduce 183
	TOK_FUNCTION_NAME  reduce 183
	TOK_INT_ID  reduce 183
	TOK_LAMBDA  reduce 183
	TOK_MULTISET_ID  reduce 183
	TOK_LSH_EQ  reduce 492
	TOK_MAPPING_ID  reduce 183
	TOK_MIXED_ID  reduce 183
	TOK_MOD_EQ  reduce 492
	TOK_MULT_EQ  reduce 492
	TOK_OBJECT_ID  reduce 183
	TOK_OR_EQ  reduce 492
	TOK_PRIVATE  reduce 183
	TOK_PROGRAM_ID  reduce 183
	TOK_PROTECTED  reduce 183
	TOK_PREDEF  reduce 183
	TOK_PUBLIC  reduce 183
	TOK_RSH_EQ  reduce 492
	TOK_STATIC  reduce 183
	TOK_STRING_ID  reduce 183
	TOK_SUB_EQ  reduce 492
	TOK_TYPEDEF  reduce 183
	TOK_TYPEOF  reduce 183
	TOK_VARIANT  reduce 183
	TOK_VOID_ID  reduce 183
	TOK_XOR_EQ  reduce 492
	TOK_OPTIONAL  reduce 183
	TOK_SAFE_INDEX  reduce 492
	TOK_SAFE_START_INDEX  reduce 492
	'='  reduce 492
	'?'  reduce 492
	'|'  reduce 183
	'^'  reduce 492
	'&'  reduce 492
	'>'  reduce 492
	'<'  reduce 492
	'+'  reduce 492
	'-'  reduce 492
	'*'  reduce 492
	'%'  reduce 492
	'/'  reduce 492
	';'  reduce 492
	':'  reduce 492
	'}'  reduce 492
	','  reduce 492
	'('  reduce 492
	')'  reduce 183
	'['  reduce 492
	']'  reduce 183
	'.'  reduce 492


state 341
	cast : open_paren_with_line_info type . ')'  (159)
	type : type . '|' type3  (167)

	'|'  shift 460
	')'  shift 461
	.  error


state 342
	type : basic_type .  (168)

	.  reduce 168


state 343
	lvalue : open_bracket_with_line_info . low_lvalue_list ']'  (591)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 314
	open_bracket_with_line_info  goto 343
	catch  goto 252
	apply  goto 259
	expr4  goto 344
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	lvalue  goto 346
	low_lvalue_list  goto 462
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 349
	identifier_type  goto 350
	basic_type  goto 342
	bad_expr_ident  goto 268


state 344
	apply : expr4 . open_paren_with_line_info expr_list ')' optional_block  (479)
	apply : expr4 . open_paren_with_line_info error ')' optional_block  (480)
	apply : expr4 . open_paren_with_line_info error TOK_LEX_EOF  (481)
	apply : expr4 . open_paren_with_line_info error ';'  (482)
	apply : expr4 . open_paren_with_line_info error '}'  (483)
	expr5 : expr4 . open_bracket_with_line_info '*' ']'  (498)
	expr5 : expr4 . open_bracket_with_line_info expr0 ']'  (499)
	expr5 : expr4 . open_bracket_with_line_info range_bound expected_dot_dot range_bound ']'  (500)
	expr5 : expr4 . TOK_SAFE_START_INDEX line_number_info expr0 ']'  (501)
	expr5 : expr4 . TOK_SAFE_START_INDEX line_number_info range_bound expected_dot_dot range_bound ']'  (502)
	expr5 : expr4 . open_bracket_with_line_info error ']'  (503)
	expr5 : expr4 . open_bracket_with_line_info error TOK_LEX_EOF  (504)
	expr5 : expr4 . open_bracket_with_line_info error ';'  (505)
	expr5 : expr4 . open_bracket_with_line_info error '}'  (506)
	expr5 : expr4 . open_bracket_with_line_info error ')'  (507)
	expr5 : expr4 . TOK_ARROW line_number_info magic_identifier  (513)
	expr5 : expr4 . TOK_SAFE_INDEX line_number_info TOK_IDENTIFIER  (514)
	expr5 : expr4 . TOK_ARROW line_number_info error  (515)
	lvalue : expr4 .  (590)

	TOK_ARROW  shift 370
	TOK_SAFE_INDEX  shift 383
	TOK_SAFE_START_INDEX  shift 384
	'('  shift 244
	'['  shift 245
	TOK_LEX_EOF  reduce 590
	';'  reduce 590
	'}'  reduce 590
	','  reduce 590
	')'  reduce 590
	']'  reduce 590

	open_paren_with_line_info  goto 387
	open_bracket_with_line_info  goto 388


state 345
	identifier_type : unqualified_idents .  (189)
	unqualified_idents : unqualified_idents . '.' TOK_IDENTIFIER  (529)
	unqualified_idents : unqualified_idents . '.' bad_identifier  (530)
	idents : unqualified_idents .  (534)

	'.'  shift 125
	TOK_ARROW  reduce 534
	TOK_INC  reduce 534
	TOK_DEC  reduce 534
	TOK_RETURN  reduce 189
	TOK_EQ  reduce 534
	TOK_GE  reduce 534
	TOK_LE  reduce 534
	TOK_NE  reduce 534
	TOK_LSH  reduce 534
	TOK_RSH  reduce 534
	TOK_LAND  reduce 534
	TOK_LOR  reduce 534
	TOK_SWITCH  reduce 189
	TOK_SSCANF  reduce 189
	TOK_CATCH  reduce 189
	TOK_FOREACH  reduce 189
	TOK_LEX_EOF  reduce 534
	TOK_ADD_EQ  reduce 534
	TOK_AND_EQ  reduce 534
	TOK_ARRAY_ID  reduce 189
	TOK_ATTRIBUTE_ID  reduce 189
	TOK_BREAK  reduce 189
	TOK_CASE  reduce 189
	TOK_CLASS  reduce 189
	TOK_CONTINUE  reduce 189
	TOK_DEFAULT  reduce 189
	TOK_DEPRECATED_ID  reduce 189
	TOK_DIV_EQ  reduce 534
	TOK_DO  reduce 189
	TOK_DOT_DOT  reduce 534
	TOK_DOT_DOT_DOT  reduce 534
	TOK_ELSE  reduce 189
	TOK_ENUM  reduce 189
	TOK_EXTERN  reduce 189
	TOK_FLOAT_ID  reduce 189
	TOK_FOR  reduce 189
	TOK_FUNCTION_ID  reduce 189
	TOK_GAUGE  reduce 189
	TOK_IDENTIFIER  reduce 189
	TOK_RESERVED  reduce 189
	TOK_IF  reduce 189
	TOK_IMPORT  reduce 189
	TOK_INHERIT  reduce 189
	TOK_INLINE  reduce 189
	TOK_LOCAL_ID  reduce 189
	TOK_FINAL_ID  reduce 189
	TOK_FUNCTION_NAME  reduce 189
	TOK_INT_ID  reduce 189
	TOK_LAMBDA  reduce 189
	TOK_MULTISET_ID  reduce 189
	TOK_LSH_EQ  reduce 534
	TOK_MAPPING_ID  reduce 189
	TOK_MIXED_ID  reduce 189
	TOK_MOD_EQ  reduce 534
	TOK_MULT_EQ  reduce 534
	TOK_OBJECT_ID  reduce 189
	TOK_OR_EQ  reduce 534
	TOK_PRIVATE  reduce 189
	TOK_PROGRAM_ID  reduce 189
	TOK_PROTECTED  reduce 189
	TOK_PREDEF  reduce 189
	TOK_PUBLIC  reduce 189
	TOK_RSH_EQ  reduce 534
	TOK_STATIC  reduce 189
	TOK_STRING_ID  reduce 189
	TOK_SUB_EQ  reduce 534
	TOK_TYPEDEF  reduce 189
	TOK_TYPEOF  reduce 189
	TOK_VARIANT  reduce 189
	TOK_VOID_ID  reduce 189
	TOK_XOR_EQ  reduce 534
	TOK_OPTIONAL  reduce 189
	TOK_SAFE_INDEX  reduce 534
	TOK_SAFE_START_INDEX  reduce 534
	'='  reduce 534
	'?'  reduce 534
	'|'  reduce 534
	'^'  reduce 534
	'&'  reduce 534
	'>'  reduce 534
	'<'  reduce 534
	'+'  reduce 534
	'-'  reduce 534
	'*'  reduce 534
	'%'  reduce 534
	'/'  reduce 534
	';'  reduce 534
	':'  reduce 534
	'}'  reduce 534
	','  reduce 534
	'('  reduce 534
	')'  reduce 534
	'['  reduce 534
	']'  reduce 534


state 346
	low_lvalue_list : lvalue . lvalue_list  (593)
	lvalue_list : .  (594)

	','  shift 463
	']'  reduce 594

	lvalue_list  goto 464


state 347
	expr0 : open_bracket_with_line_info low_lvalue_list . ']' '=' expr0  (398)
	expr0 : open_bracket_with_line_info low_lvalue_list . ']' assign expr0  (401)
	expr0 : open_bracket_with_line_info low_lvalue_list . ']' error  (402)

	']'  shift 465
	.  error


state 348
	soft_cast : open_bracket_with_line_info type . ']'  (160)
	type2 : type .  (161)
	type : type . '|' type3  (167)

	'|'  shift 460
	']'  shift 466
	TOK_IDENTIFIER  reduce 161


state 349
	lvalue : type2 . TOK_IDENTIFIER  (592)

	TOK_IDENTIFIER  shift 467
	.  error


state 350
	type2 : identifier_type .  (162)

	.  reduce 162


state 351
	expr1 : expr1 TOK_EQ . expr1  (434)
	expr1 : expr1 TOK_EQ . error  (452)
	implicit_modifiers : .  (484)

	error  shift 468
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 469
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 352
	expr1 : expr1 TOK_GE . expr1  (437)
	expr1 : expr1 TOK_GE . error  (455)
	implicit_modifiers : .  (484)

	error  shift 470
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 471
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 353
	expr1 : expr1 TOK_LE . expr1  (439)
	expr1 : expr1 TOK_LE . error  (457)
	implicit_modifiers : .  (484)

	error  shift 472
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 473
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 354
	expr1 : expr1 TOK_NE . expr1  (435)
	expr1 : expr1 TOK_NE . error  (453)
	implicit_modifiers : .  (484)

	error  shift 474
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 475
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 355
	expr1 : expr1 TOK_LSH . expr1  (440)
	expr1 : expr1 TOK_LSH . error  (458)
	implicit_modifiers : .  (484)

	error  shift 476
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 477
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 356
	expr1 : expr1 TOK_RSH . expr1  (441)
	expr1 : expr1 TOK_RSH . error  (459)
	implicit_modifiers : .  (484)

	error  shift 478
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 479
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 357
	expr1 : expr1 TOK_LAND . expr1  (430)
	expr1 : expr1 TOK_LAND . error  (448)
	implicit_modifiers : .  (484)

	error  shift 480
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 481
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 358
	expr1 : expr1 TOK_LOR . expr1  (429)
	expr1 : expr1 TOK_LOR . error  (447)
	implicit_modifiers : .  (484)

	error  shift 482
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 483
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 359
	expr01 : expr1 '?' . expr01 ':' expr01  (404)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr01  goto 484
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 360
	expr1 : expr1 '|' . expr1  (431)
	expr1 : expr1 '|' . error  (449)
	implicit_modifiers : .  (484)

	error  shift 485
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 486
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 361
	expr1 : expr1 '^' . expr1  (432)
	expr1 : expr1 '^' . error  (450)
	implicit_modifiers : .  (484)

	error  shift 487
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 488
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 362
	expr1 : expr1 '&' . expr1  (433)
	expr1 : expr1 '&' . error  (451)
	implicit_modifiers : .  (484)

	error  shift 489
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 490
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 363
	expr1 : expr1 '>' . expr1  (436)
	expr1 : expr1 '>' . error  (454)
	implicit_modifiers : .  (484)

	error  shift 491
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 492
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 364
	expr1 : expr1 '<' . expr1  (438)
	expr1 : expr1 '<' . error  (456)
	implicit_modifiers : .  (484)

	error  shift 493
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 494
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 365
	expr1 : expr1 '+' . expr1  (442)
	expr1 : expr1 '+' . error  (460)
	implicit_modifiers : .  (484)

	error  shift 495
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 496
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 366
	expr1 : expr1 '-' . expr1  (443)
	expr1 : expr1 '-' . error  (461)
	implicit_modifiers : .  (484)

	error  shift 497
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 498
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 367
	expr1 : expr1 '*' . expr1  (444)
	expr1 : expr1 '*' . error  (462)
	implicit_modifiers : .  (484)

	error  shift 499
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 500
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 368
	expr1 : expr1 '%' . expr1  (445)
	expr1 : expr1 '%' . error  (463)
	implicit_modifiers : .  (484)

	error  shift 501
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 502
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 369
	expr1 : expr1 '/' . expr1  (446)
	expr1 : expr1 '/' . error  (464)
	implicit_modifiers : .  (484)

	error  shift 503
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr1  goto 504
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 370
	expr5 : expr4 TOK_ARROW . line_number_info magic_identifier  (513)
	expr5 : expr4 TOK_ARROW . line_number_info error  (515)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 505


state 371
	expr3 : expr4 TOK_INC .  (474)

	.  reduce 474


state 372
	expr3 : expr4 TOK_DEC .  (475)

	.  reduce 475


state 373
	assign : TOK_ADD_EQ .  (410)

	.  reduce 410


state 374
	assign : TOK_AND_EQ .  (405)

	.  reduce 405


state 375
	assign : TOK_DIV_EQ .  (414)

	.  reduce 414


state 376
	assign : TOK_LSH_EQ .  (408)

	.  reduce 408


state 377
	assign : TOK_MOD_EQ .  (413)

	.  reduce 413


state 378
	assign : TOK_MULT_EQ .  (412)

	.  reduce 412


state 379
	assign : TOK_OR_EQ .  (406)

	.  reduce 406


state 380
	assign : TOK_RSH_EQ .  (409)

	.  reduce 409


state 381
	assign : TOK_SUB_EQ .  (411)

	.  reduce 411


state 382
	assign : TOK_XOR_EQ .  (407)

	.  reduce 407


state 383
	expr5 : expr4 TOK_SAFE_INDEX . line_number_info TOK_IDENTIFIER  (514)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 506


state 384
	expr5 : expr4 TOK_SAFE_START_INDEX . line_number_info expr0 ']'  (501)
	expr5 : expr4 TOK_SAFE_START_INDEX . line_number_info range_bound expected_dot_dot range_bound ']'  (502)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 507


state 385
	expr0 : expr4 '=' . expr0  (396)
	expr0 : expr4 '=' . error  (397)
	implicit_modifiers : .  (484)

	error  shift 508
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 509
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 386
	expr0 : expr4 assign . expr0  (399)
	expr0 : expr4 assign . error  (400)
	implicit_modifiers : .  (484)

	error  shift 510
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 511
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 387
	apply : expr4 open_paren_with_line_info . expr_list ')' optional_block  (479)
	apply : expr4 open_paren_with_line_info . error ')' optional_block  (480)
	apply : expr4 open_paren_with_line_info . error TOK_LEX_EOF  (481)
	apply : expr4 open_paren_with_line_info . error ';'  (482)
	apply : expr4 open_paren_with_line_info . error '}'  (483)
	expr_list : .  (417)
	implicit_modifiers : .  (484)

	error  shift 512
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'@'  shift 442
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	')'  reduce 417

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	splice_expr  goto 443
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 444
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	expr_list  goto 513
	expr_list2  goto 446
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 388
	expr5 : expr4 open_bracket_with_line_info . '*' ']'  (498)
	expr5 : expr4 open_bracket_with_line_info . expr0 ']'  (499)
	expr5 : expr4 open_bracket_with_line_info . range_bound expected_dot_dot range_bound ']'  (500)
	expr5 : expr4 open_bracket_with_line_info . error ']'  (503)
	expr5 : expr4 open_bracket_with_line_info . error TOK_LEX_EOF  (504)
	expr5 : expr4 open_bracket_with_line_info . error ';'  (505)
	expr5 : expr4 open_bracket_with_line_info . error '}'  (506)
	expr5 : expr4 open_bracket_with_line_info . error ')'  (507)
	implicit_modifiers : .  (484)
	range_bound : .  (557)

	error  shift 514
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_LEX_EOF  shift 515
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'<'  shift 516
	'-'  shift 242
	'*'  shift 517
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_DOT_DOT  reduce 557
	TOK_DOT_DOT_DOT  reduce 557
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	comma_expr  goto 518
	comma_expr2  goto 435
	range_bound  goto 519
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 520
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 389
	expr4 : expr5 '.' . line_number_info TOK_IDENTIFIER  (487)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 521


state 390
	class : TOK_CLASS line_number_info optional_identifier $$24 $$25 . optional_create_arguments failsafe_program  (319)
	optional_create_arguments : .  (311)

	'('  shift 522
	error  reduce 311
	TOK_LEX_EOF  reduce 311
	'{'  reduce 311

	optional_create_arguments  goto 523


state 391
	enum : TOK_ENUM $$26 optional_identifier '{' $$27 . enum_list $$28 end_block  (333)
	enum_def : .  (324)

	error  shift 524
	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 220
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	TOK_LEX_EOF  reduce 324
	'}'  reduce 324
	','  reduce 324

	simple_identifier  goto 525
	bad_identifier  goto 223
	enum_def  goto 526
	enum_list  goto 527
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 392
	real_string_constant : real_string_constant TOK_STRING .  (603)

	.  reduce 603


state 393
	real_string_constant : real_string_constant '+' . TOK_STRING  (604)

	TOK_STRING  shift 528
	.  error


state 394
	string : string . string_segment  (599)
	string_constant : string_constant '+' string .  (601)

	TOK_STRING  shift 18
	TOK_FUNCTION_NAME  shift 24
	error  reduce 601
	'+'  reduce 601
	';'  reduce 601
	':'  reduce 601
	','  reduce 601
	')'  reduce 601

	string_segment  goto 124


state 395
	opt_array_type : '(' full_type ')' .  (218)

	.  reduce 218


state 396
	basic_type : TOK_ATTRIBUTE_ID '(' string_constant error . ')'  (185)

	')'  shift 529
	.  error


state 397
	basic_type : TOK_ATTRIBUTE_ID '(' string_constant ',' . full_type ')'  (184)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	full_type  goto 530
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 398
	basic_type : TOK_DEPRECATED_ID '(' error ')' .  (188)

	.  reduce 188


state 399
	basic_type : TOK_DEPRECATED_ID '(' full_type ')' .  (187)

	.  reduce 187


state 400
	optional_comma : ',' .  (416)

	.  reduce 416


state 401
	opt_function_type : '(' $$7 function_type_list . optional_dot_dot_dot ':' $$8 full_type ')'  (211)
	optional_dot_dot_dot : .  (75)

	TOK_DOT_DOT  shift 531
	TOK_DOT_DOT_DOT  shift 532
	':'  reduce 75

	optional_dot_dot_dot  goto 533


state 402
	function_type_list : function_type_list2 . optional_comma  (214)
	function_type_list2 : function_type_list2 . ',' $$9 full_type  (217)
	optional_comma : .  (415)

	','  shift 534
	TOK_DOT_DOT  reduce 415
	TOK_DOT_DOT_DOT  reduce 415
	':'  reduce 415

	optional_comma  goto 535


state 403
	function_type_list : optional_comma .  (213)

	.  reduce 213


state 404
	full_type : full_type . '|' type3  (165)
	function_type_list2 : full_type .  (215)

	'|'  shift 221
	TOK_DOT_DOT  reduce 215
	TOK_DOT_DOT_DOT  reduce 215
	':'  reduce 215
	','  reduce 215


state 405
	opt_int_range : '(' error ')' .  (201)

	.  reduce 201


state 406
	opt_int_range : '(' TOK_BITS ')' .  (199)

	.  reduce 199


state 407
	number_or_minint : '-' TOK_NUMBER .  (195)

	.  reduce 195


state 408
	expected_dot_dot : TOK_DOT_DOT .  (196)

	.  reduce 196


state 409
	expected_dot_dot : TOK_DOT_DOT_DOT .  (197)

	.  reduce 197


state 410
	opt_int_range : '(' number_or_minint expected_dot_dot . number_or_maxint ')'  (200)
	number_or_maxint : .  (190)

	TOK_NUMBER  shift 536
	'-'  shift 537
	')'  reduce 190

	number_or_maxint  goto 538


state 411
	full_type : full_type . '|' type3  (165)
	opt_mapping_type : '(' $$10 full_type . ':' $$11 full_type $$12 ')'  (223)

	'|'  shift 221
	':'  shift 539
	.  error


state 412
	program_ref : low_program_ref .  (14)

	.  reduce 14


state 413
	opt_object_type : $$6 '(' program_ref . ')'  (205)

	')'  shift 540
	.  error


state 414
	opt_program_type : '(' error ')' .  (208)

	.  reduce 208


state 415
	opt_program_type : '(' full_type ')' .  (207)

	.  reduce 207


state 416
	typeof : TOK_TYPEOF '(' error TOK_LEX_EOF .  (566)

	.  reduce 566


state 417
	typeof : TOK_TYPEOF '(' error ';' .  (567)

	.  reduce 567


state 418
	typeof : TOK_TYPEOF '(' error '}' .  (565)

	.  reduce 565


state 419
	typeof : TOK_TYPEOF '(' error ')' .  (564)

	.  reduce 564


state 420
	typeof : TOK_TYPEOF '(' expr0 ')' .  (563)

	.  reduce 563


state 421
	basic_type : TOK_ATTRIBUTE_ID '(' string_constant ',' . full_type ')'  (184)
	optional_comma : ',' .  (416)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	')'  reduce 416

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	full_type  goto 530
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 422
	attribute : TOK_ATTRIBUTE_ID '(' string_constant optional_comma . ')'  (154)

	')'  shift 541
	.  error


state 423
	new_name : TOK_IDENTIFIER '=' . $$13 expr0  (230)
	new_name : TOK_IDENTIFIER '=' . error  (231)
	new_name : TOK_IDENTIFIER '=' . TOK_LEX_EOF  (232)
	$$13 : .  (229)

	error  shift 542
	TOK_LEX_EOF  shift 543
	TOK_FLOAT  reduce 229
	TOK_STRING  reduce 229
	TOK_NUMBER  reduce 229
	TOK_INC  reduce 229
	TOK_DEC  reduce 229
	TOK_NOT  reduce 229
	TOK_SSCANF  reduce 229
	TOK_CATCH  reduce 229
	TOK_CLASS  reduce 229
	TOK_COLON_COLON  reduce 229
	TOK_ELSE  reduce 229
	TOK_ENUM  reduce 229
	TOK_EXTERN  reduce 229
	TOK_GAUGE  reduce 229
	TOK_GLOBAL  reduce 229
	TOK_IDENTIFIER  reduce 229
	TOK_RESERVED  reduce 229
	TOK_IMPORT  reduce 229
	TOK_INHERIT  reduce 229
	TOK_INLINE  reduce 229
	TOK_LOCAL_ID  reduce 229
	TOK_FINAL_ID  reduce 229
	TOK_FUNCTION_NAME  reduce 229
	TOK_LAMBDA  reduce 229
	TOK_MULTISET_START  reduce 229
	TOK_PRIVATE  reduce 229
	TOK_PROTECTED  reduce 229
	TOK_PREDEF  reduce 229
	TOK_PUBLIC  reduce 229
	TOK_STATIC  reduce 229
	TOK_TYPEOF  reduce 229
	TOK_VARIANT  reduce 229
	TOK_VERSION  reduce 229
	TOK_OPTIONAL  reduce 229
	'-'  reduce 229
	'~'  reduce 229
	'('  reduce 229
	'['  reduce 229
	'.'  reduce 229

	$$13  goto 544


state 424
	def : modifiers optional_attributes simple_type optional_constant TOK_IDENTIFIER start_function . '(' $$2 arguments close_paren_or_missing $$3 block_or_semi  (57)
	def : modifiers optional_attributes simple_type optional_constant TOK_IDENTIFIER start_function . error  (58)

	error  shift 545
	'('  shift 546
	.  error


state 425
	new_name : bad_identifier '=' . expr0  (233)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 547
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 426
	def : modifiers optional_attributes simple_type optional_constant bad_identifier $$4 . '(' arguments ')' block_or_semi  (60)

	'('  shift 548
	.  error


state 427
	def : modifiers optional_attributes simple_type optional_constant name_list ';' .  (61)

	.  reduce 61


state 428
	name_list : name_list ',' . new_name  (226)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 549
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	bad_identifier  goto 550
	new_name  goto 551
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 429
	soft_cast : open_bracket_with_line_info type . ']'  (160)
	type : type . '|' type3  (167)

	'|'  shift 460
	']'  shift 466
	.  error


state 430
	sscanf : TOK_SSCANF '(' error . ')'  (586)
	sscanf : TOK_SSCANF '(' error . TOK_LEX_EOF  (587)
	sscanf : TOK_SSCANF '(' error . '}'  (588)
	sscanf : TOK_SSCANF '(' error . ';'  (589)

	TOK_LEX_EOF  shift 552
	';'  shift 553
	'}'  shift 554
	')'  shift 555
	.  error


state 431
	sscanf : TOK_SSCANF '(' expr0 . ',' expr0 lvalue_list ')'  (577)
	sscanf : TOK_SSCANF '(' expr0 . ',' expr0 error ')'  (578)
	sscanf : TOK_SSCANF '(' expr0 . ',' expr0 error TOK_LEX_EOF  (579)
	sscanf : TOK_SSCANF '(' expr0 . ',' expr0 error '}'  (580)
	sscanf : TOK_SSCANF '(' expr0 . ',' expr0 error ';'  (581)
	sscanf : TOK_SSCANF '(' expr0 . error ')'  (582)
	sscanf : TOK_SSCANF '(' expr0 . error TOK_LEX_EOF  (583)
	sscanf : TOK_SSCANF '(' expr0 . error '}'  (584)
	sscanf : TOK_SSCANF '(' expr0 . error ';'  (585)

	error  shift 556
	','  shift 557
	.  error


state 432
	catch : TOK_CATCH $$41 catch_arg .  (576)

	.  reduce 576


state 433
	catch_arg : '(' error . ')'  (569)
	catch_arg : '(' error . TOK_LEX_EOF  (570)
	catch_arg : '(' error . '}'  (571)
	catch_arg : '(' error . ';'  (572)

	TOK_LEX_EOF  shift 558
	';'  shift 559
	'}'  shift 560
	')'  shift 561
	.  error


state 434
	catch_arg : '(' comma_expr . ')'  (568)

	')'  shift 562
	.  error


state 435
	comma_expr : comma_expr2 .  (388)
	comma_expr2 : comma_expr2 . ',' expr0  (392)

	','  shift 458
	TOK_LEX_EOF  reduce 388
	TOK_DOT_DOT  reduce 388
	TOK_DOT_DOT_DOT  reduce 388
	';'  reduce 388
	':'  reduce 388
	'}'  reduce 388
	')'  reduce 388
	']'  reduce 388


state 436
	type2 : type .  (161)
	type : type . '|' type3  (167)

	'|'  shift 460
	TOK_RETURN  reduce 161
	TOK_SWITCH  reduce 161
	TOK_SSCANF  reduce 161
	TOK_CATCH  reduce 161
	TOK_FOREACH  reduce 161
	TOK_ARRAY_ID  reduce 161
	TOK_ATTRIBUTE_ID  reduce 161
	TOK_BREAK  reduce 161
	TOK_CASE  reduce 161
	TOK_CLASS  reduce 161
	TOK_CONTINUE  reduce 161
	TOK_DEFAULT  reduce 161
	TOK_DEPRECATED_ID  reduce 161
	TOK_DO  reduce 161
	TOK_ELSE  reduce 161
	TOK_ENUM  reduce 161
	TOK_EXTERN  reduce 161
	TOK_FLOAT_ID  reduce 161
	TOK_FOR  reduce 161
	TOK_FUNCTION_ID  reduce 161
	TOK_GAUGE  reduce 161
	TOK_IDENTIFIER  reduce 161
	TOK_RESERVED  reduce 161
	TOK_IF  reduce 161
	TOK_IMPORT  reduce 161
	TOK_INHERIT  reduce 161
	TOK_INLINE  reduce 161
	TOK_LOCAL_ID  reduce 161
	TOK_FINAL_ID  reduce 161
	TOK_FUNCTION_NAME  reduce 161
	TOK_INT_ID  reduce 161
	TOK_LAMBDA  reduce 161
	TOK_MULTISET_ID  reduce 161
	TOK_MAPPING_ID  reduce 161
	TOK_MIXED_ID  reduce 161
	TOK_OBJECT_ID  reduce 161
	TOK_PRIVATE  reduce 161
	TOK_PROGRAM_ID  reduce 161
	TOK_PROTECTED  reduce 161
	TOK_PREDEF  reduce 161
	TOK_PUBLIC  reduce 161
	TOK_STATIC  reduce 161
	TOK_STRING_ID  reduce 161
	TOK_TYPEDEF  reduce 161
	TOK_TYPEOF  reduce 161
	TOK_VARIANT  reduce 161
	TOK_VOID_ID  reduce 161
	TOK_OPTIONAL  reduce 161


state 437
	simple_type2 : type2 .  (164)

	.  reduce 164


state 438
	comma_expr : simple_type2 . local_name_list  (389)
	comma_expr : simple_type2 . local_function  (390)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 563
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	local_name_list  goto 564
	new_local_name  goto 565
	local_function  goto 566
	bad_identifier  goto 567
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 439
	block : '{' $$18 . line_number_info $$19 statements end_block  (247)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 568


state 440
	lambda : TOK_LAMBDA line_number_info implicit_identifier . start_lambda func_args $$21 failsafe_block  (299)
	lambda : TOK_LAMBDA line_number_info implicit_identifier . start_lambda error  (300)
	start_lambda : .  (296)

	.  reduce 296

	start_lambda  goto 569


state 441
	literal_expr : TOK_MULTISET_START line_number_info error . TOK_MULTISET_END  (523)
	literal_expr : TOK_MULTISET_START line_number_info error . ')'  (524)
	literal_expr : TOK_MULTISET_START line_number_info error . TOK_LEX_EOF  (525)
	literal_expr : TOK_MULTISET_START line_number_info error . ';'  (526)
	literal_expr : TOK_MULTISET_START line_number_info error . '}'  (527)

	TOK_LEX_EOF  shift 570
	TOK_MULTISET_END  shift 571
	';'  shift 572
	'}'  shift 573
	')'  shift 574
	.  error


state 442
	splice_expr : '@' . expr0  (394)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 575
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 443
	expr_list2 : splice_expr .  (419)

	.  reduce 419


state 444
	splice_expr : expr0 .  (393)

	.  reduce 393


state 445
	literal_expr : TOK_MULTISET_START line_number_info expr_list . TOK_MULTISET_END  (521)
	literal_expr : TOK_MULTISET_START line_number_info expr_list . ')'  (522)

	TOK_MULTISET_END  shift 576
	')'  shift 577
	.  error


state 446
	expr_list : expr_list2 . optional_comma  (418)
	expr_list2 : expr_list2 . ',' splice_expr  (420)
	optional_comma : .  (415)

	','  shift 578
	TOK_MULTISET_END  reduce 415
	'}'  reduce 415
	')'  reduce 415

	optional_comma  goto 579


state 447
	expr5 : open_paren_with_line_info error TOK_LEX_EOF .  (510)

	.  reduce 510


state 448
	expr5 : open_paren_with_line_info error ';' .  (511)

	.  reduce 511


state 449
	expr5 : open_paren_with_line_info error '}' .  (512)

	.  reduce 512


state 450
	expr5 : open_paren_with_line_info error ')' .  (509)

	.  reduce 509


state 451
	literal_expr : open_paren_with_line_info '{' expr_list . close_brace_or_missing ')'  (519)
	close_brace_or_missing : .  (46)

	'}'  shift 580
	')'  reduce 46

	close_brace_or_missing  goto 581


state 452
	m_expr_list2 : assoc_pair .  (423)

	.  reduce 423


state 453
	soft_cast : open_bracket_with_line_info . type ']'  (160)
	expr0 : open_bracket_with_line_info . low_lvalue_list ']' '=' expr0  (398)
	expr0 : open_bracket_with_line_info . low_lvalue_list ']' assign expr0  (401)
	expr0 : open_bracket_with_line_info . low_lvalue_list ']' error  (402)
	lvalue : open_bracket_with_line_info . low_lvalue_list ']'  (591)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 314
	open_bracket_with_line_info  goto 343
	catch  goto 252
	apply  goto 259
	expr4  goto 344
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	lvalue  goto 346
	low_lvalue_list  goto 582
	sscanf  goto 266
	typeof  goto 340
	type  goto 348
	type2  goto 349
	identifier_type  goto 350
	basic_type  goto 342
	bad_expr_ident  goto 268


state 454
	assoc_pair : expr0 . expected_colon expr0  (426)
	assoc_pair : expr0 . expected_colon error  (427)

	TOK_LEX_EOF  shift 583
	';'  shift 584
	':'  shift 585
	'}'  shift 586
	.  error

	expected_colon  goto 587


state 455
	expr0 : expr4 . '=' expr0  (396)
	expr0 : expr4 . '=' error  (397)
	expr0 : expr4 . assign expr0  (399)
	expr0 : expr4 . assign error  (400)
	expr3 : expr4 .  (473)
	expr3 : expr4 . TOK_INC  (474)
	expr3 : expr4 . TOK_DEC  (475)
	apply : expr4 . open_paren_with_line_info expr_list ')' optional_block  (479)
	apply : expr4 . open_paren_with_line_info error ')' optional_block  (480)
	apply : expr4 . open_paren_with_line_info error TOK_LEX_EOF  (481)
	apply : expr4 . open_paren_with_line_info error ';'  (482)
	apply : expr4 . open_paren_with_line_info error '}'  (483)
	expr5 : expr4 . open_bracket_with_line_info '*' ']'  (498)
	expr5 : expr4 . open_bracket_with_line_info expr0 ']'  (499)
	expr5 : expr4 . open_bracket_with_line_info range_bound expected_dot_dot range_bound ']'  (500)
	expr5 : expr4 . TOK_SAFE_START_INDEX line_number_info expr0 ']'  (501)
	expr5 : expr4 . TOK_SAFE_START_INDEX line_number_info range_bound expected_dot_dot range_bound ']'  (502)
	expr5 : expr4 . open_bracket_with_line_info error ']'  (503)
	expr5 : expr4 . open_bracket_with_line_info error TOK_LEX_EOF  (504)
	expr5 : expr4 . open_bracket_with_line_info error ';'  (505)
	expr5 : expr4 . open_bracket_with_line_info error '}'  (506)
	expr5 : expr4 . open_bracket_with_line_info error ')'  (507)
	expr5 : expr4 . TOK_ARROW line_number_info magic_identifier  (513)
	expr5 : expr4 . TOK_SAFE_INDEX line_number_info TOK_IDENTIFIER  (514)
	expr5 : expr4 . TOK_ARROW line_number_info error  (515)
	lvalue : expr4 .  (590)

	TOK_ARROW  shift 370
	TOK_INC  shift 371
	TOK_DEC  shift 372
	TOK_ADD_EQ  shift 373
	TOK_AND_EQ  shift 374
	TOK_DIV_EQ  shift 375
	TOK_LSH_EQ  shift 376
	TOK_MOD_EQ  shift 377
	TOK_MULT_EQ  shift 378
	TOK_OR_EQ  shift 379
	TOK_RSH_EQ  shift 380
	TOK_SUB_EQ  shift 381
	TOK_XOR_EQ  shift 382
	TOK_SAFE_INDEX  shift 383
	TOK_SAFE_START_INDEX  shift 384
	'='  shift 385
	'('  shift 244
	'['  shift 245
	TOK_EQ  reduce 473
	TOK_GE  reduce 473
	TOK_LE  reduce 473
	TOK_NE  reduce 473
	TOK_LSH  reduce 473
	TOK_RSH  reduce 473
	TOK_LAND  reduce 473
	TOK_LOR  reduce 473
	TOK_LEX_EOF  reduce 473
	'?'  reduce 473
	'|'  reduce 473
	'^'  reduce 473
	'&'  reduce 473
	'>'  reduce 473
	'<'  reduce 473
	'+'  reduce 473
	'-'  reduce 473
	'*'  reduce 473
	'%'  reduce 473
	'/'  reduce 473
	';'  reduce 473
	':'  reduce 473
	'}'  reduce 473
	','  reduce 590
	']'  reduce 590

	assign  goto 386
	open_paren_with_line_info  goto 387
	open_bracket_with_line_info  goto 388


state 456
	literal_expr : open_paren_with_line_info open_bracket_with_line_info m_expr_list . close_bracket_or_missing ')'  (520)
	close_bracket_or_missing : .  (51)

	']'  shift 588
	')'  reduce 51

	close_bracket_or_missing  goto 589


state 457
	m_expr_list : m_expr_list2 . optional_comma  (422)
	m_expr_list2 : m_expr_list2 . ',' assoc_pair  (424)
	m_expr_list2 : m_expr_list2 . ',' error  (425)
	optional_comma : .  (415)

	','  shift 590
	')'  reduce 415
	']'  reduce 415

	optional_comma  goto 591


state 458
	comma_expr2 : comma_expr2 ',' . expr0  (392)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 592
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 459
	expr5 : open_paren_with_line_info comma_expr2 ')' .  (508)

	.  reduce 508


state 460
	type : type '|' . type3  (167)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	identifier_type  goto 158
	type3  goto 593
	basic_type  goto 160


state 461
	cast : open_paren_with_line_info type ')' .  (159)

	.  reduce 159


state 462
	lvalue : open_bracket_with_line_info low_lvalue_list . ']'  (591)

	']'  shift 594
	.  error


state 463
	lvalue_list : ',' . lvalue lvalue_list  (595)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 314
	open_bracket_with_line_info  goto 343
	catch  goto 252
	apply  goto 259
	expr4  goto 344
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	lvalue  goto 595
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 349
	identifier_type  goto 350
	basic_type  goto 342
	bad_expr_ident  goto 268


state 464
	low_lvalue_list : lvalue lvalue_list .  (593)

	.  reduce 593


state 465
	expr0 : open_bracket_with_line_info low_lvalue_list ']' . '=' expr0  (398)
	expr0 : open_bracket_with_line_info low_lvalue_list ']' . assign expr0  (401)
	expr0 : open_bracket_with_line_info low_lvalue_list ']' . error  (402)

	error  shift 596
	TOK_ADD_EQ  shift 373
	TOK_AND_EQ  shift 374
	TOK_DIV_EQ  shift 375
	TOK_LSH_EQ  shift 376
	TOK_MOD_EQ  shift 377
	TOK_MULT_EQ  shift 378
	TOK_OR_EQ  shift 379
	TOK_RSH_EQ  shift 380
	TOK_SUB_EQ  shift 381
	TOK_XOR_EQ  shift 382
	'='  shift 597
	.  error

	assign  goto 598


state 466
	soft_cast : open_bracket_with_line_info type ']' .  (160)

	.  reduce 160


state 467
	lvalue : type2 TOK_IDENTIFIER .  (592)

	.  reduce 592


state 468
	expr1 : expr1 TOK_EQ error .  (452)

	.  reduce 452


state 469
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 TOK_EQ expr1 .  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	TOK_GE  shift 352
	TOK_LE  shift 353
	TOK_LSH  shift 355
	TOK_RSH  shift 356
	'>'  shift 363
	'<'  shift 364
	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 434
	TOK_EQ  reduce 434
	TOK_NE  reduce 434
	TOK_LAND  reduce 434
	TOK_LOR  reduce 434
	TOK_LEX_EOF  reduce 434
	TOK_DOT_DOT  reduce 434
	TOK_DOT_DOT_DOT  reduce 434
	TOK_MULTISET_END  reduce 434
	'?'  reduce 434
	'|'  reduce 434
	'^'  reduce 434
	'&'  reduce 434
	';'  reduce 434
	':'  reduce 434
	'}'  reduce 434
	','  reduce 434
	')'  reduce 434
	']'  reduce 434


state 470
	expr1 : expr1 TOK_GE error .  (455)

	.  reduce 455


state 471
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 TOK_GE expr1 .  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	TOK_LSH  shift 355
	TOK_RSH  shift 356
	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 437
	TOK_EQ  reduce 437
	TOK_GE  reduce 437
	TOK_LE  reduce 437
	TOK_NE  reduce 437
	TOK_LAND  reduce 437
	TOK_LOR  reduce 437
	TOK_LEX_EOF  reduce 437
	TOK_DOT_DOT  reduce 437
	TOK_DOT_DOT_DOT  reduce 437
	TOK_MULTISET_END  reduce 437
	'?'  reduce 437
	'|'  reduce 437
	'^'  reduce 437
	'&'  reduce 437
	'>'  reduce 437
	'<'  reduce 437
	';'  reduce 437
	':'  reduce 437
	'}'  reduce 437
	','  reduce 437
	')'  reduce 437
	']'  reduce 437


state 472
	expr1 : expr1 TOK_LE error .  (457)

	.  reduce 457


state 473
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 TOK_LE expr1 .  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	TOK_LSH  shift 355
	TOK_RSH  shift 356
	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 439
	TOK_EQ  reduce 439
	TOK_GE  reduce 439
	TOK_LE  reduce 439
	TOK_NE  reduce 439
	TOK_LAND  reduce 439
	TOK_LOR  reduce 439
	TOK_LEX_EOF  reduce 439
	TOK_DOT_DOT  reduce 439
	TOK_DOT_DOT_DOT  reduce 439
	TOK_MULTISET_END  reduce 439
	'?'  reduce 439
	'|'  reduce 439
	'^'  reduce 439
	'&'  reduce 439
	'>'  reduce 439
	'<'  reduce 439
	';'  reduce 439
	':'  reduce 439
	'}'  reduce 439
	','  reduce 439
	')'  reduce 439
	']'  reduce 439


state 474
	expr1 : expr1 TOK_NE error .  (453)

	.  reduce 453


state 475
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 TOK_NE expr1 .  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	TOK_GE  shift 352
	TOK_LE  shift 353
	TOK_LSH  shift 355
	TOK_RSH  shift 356
	'>'  shift 363
	'<'  shift 364
	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 435
	TOK_EQ  reduce 435
	TOK_NE  reduce 435
	TOK_LAND  reduce 435
	TOK_LOR  reduce 435
	TOK_LEX_EOF  reduce 435
	TOK_DOT_DOT  reduce 435
	TOK_DOT_DOT_DOT  reduce 435
	TOK_MULTISET_END  reduce 435
	'?'  reduce 435
	'|'  reduce 435
	'^'  reduce 435
	'&'  reduce 435
	';'  reduce 435
	':'  reduce 435
	'}'  reduce 435
	','  reduce 435
	')'  reduce 435
	']'  reduce 435


state 476
	expr1 : expr1 TOK_LSH error .  (458)

	.  reduce 458


state 477
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 TOK_LSH expr1 .  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 440
	TOK_EQ  reduce 440
	TOK_GE  reduce 440
	TOK_LE  reduce 440
	TOK_NE  reduce 440
	TOK_LSH  reduce 440
	TOK_RSH  reduce 440
	TOK_LAND  reduce 440
	TOK_LOR  reduce 440
	TOK_LEX_EOF  reduce 440
	TOK_DOT_DOT  reduce 440
	TOK_DOT_DOT_DOT  reduce 440
	TOK_MULTISET_END  reduce 440
	'?'  reduce 440
	'|'  reduce 440
	'^'  reduce 440
	'&'  reduce 440
	'>'  reduce 440
	'<'  reduce 440
	';'  reduce 440
	':'  reduce 440
	'}'  reduce 440
	','  reduce 440
	')'  reduce 440
	']'  reduce 440


state 478
	expr1 : expr1 TOK_RSH error .  (459)

	.  reduce 459


state 479
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 TOK_RSH expr1 .  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 441
	TOK_EQ  reduce 441
	TOK_GE  reduce 441
	TOK_LE  reduce 441
	TOK_NE  reduce 441
	TOK_LSH  reduce 441
	TOK_RSH  reduce 441
	TOK_LAND  reduce 441
	TOK_LOR  reduce 441
	TOK_LEX_EOF  reduce 441
	TOK_DOT_DOT  reduce 441
	TOK_DOT_DOT_DOT  reduce 441
	TOK_MULTISET_END  reduce 441
	'?'  reduce 441
	'|'  reduce 441
	'^'  reduce 441
	'&'  reduce 441
	'>'  reduce 441
	'<'  reduce 441
	';'  reduce 441
	':'  reduce 441
	'}'  reduce 441
	','  reduce 441
	')'  reduce 441
	']'  reduce 441


state 480
	expr1 : expr1 TOK_LAND error .  (448)

	.  reduce 448


state 481
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 TOK_LAND expr1 .  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	TOK_EQ  shift 351
	TOK_GE  shift 352
	TOK_LE  shift 353
	TOK_NE  shift 354
	TOK_LSH  shift 355
	TOK_RSH  shift 356
	'|'  shift 360
	'^'  shift 361
	'&'  shift 362
	'>'  shift 363
	'<'  shift 364
	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 430
	TOK_LAND  reduce 430
	TOK_LOR  reduce 430
	TOK_LEX_EOF  reduce 430
	TOK_DOT_DOT  reduce 430
	TOK_DOT_DOT_DOT  reduce 430
	TOK_MULTISET_END  reduce 430
	'?'  reduce 430
	';'  reduce 430
	':'  reduce 430
	'}'  reduce 430
	','  reduce 430
	')'  reduce 430
	']'  reduce 430


state 482
	expr1 : expr1 TOK_LOR error .  (447)

	.  reduce 447


state 483
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 TOK_LOR expr1 .  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	TOK_EQ  shift 351
	TOK_GE  shift 352
	TOK_LE  shift 353
	TOK_NE  shift 354
	TOK_LSH  shift 355
	TOK_RSH  shift 356
	TOK_LAND  shift 357
	'|'  shift 360
	'^'  shift 361
	'&'  shift 362
	'>'  shift 363
	'<'  shift 364
	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 429
	TOK_LOR  reduce 429
	TOK_LEX_EOF  reduce 429
	TOK_DOT_DOT  reduce 429
	TOK_DOT_DOT_DOT  reduce 429
	TOK_MULTISET_END  reduce 429
	'?'  reduce 429
	';'  reduce 429
	':'  reduce 429
	'}'  reduce 429
	','  reduce 429
	')'  reduce 429
	']'  reduce 429


state 484
	expr01 : expr1 '?' expr01 . ':' expr01  (404)

	':'  shift 599
	.  error


state 485
	expr1 : expr1 '|' error .  (449)

	.  reduce 449


state 486
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 '|' expr1 .  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	TOK_EQ  shift 351
	TOK_GE  shift 352
	TOK_LE  shift 353
	TOK_NE  shift 354
	TOK_LSH  shift 355
	TOK_RSH  shift 356
	'^'  shift 361
	'&'  shift 362
	'>'  shift 363
	'<'  shift 364
	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 431
	TOK_LAND  reduce 431
	TOK_LOR  reduce 431
	TOK_LEX_EOF  reduce 431
	TOK_DOT_DOT  reduce 431
	TOK_DOT_DOT_DOT  reduce 431
	TOK_MULTISET_END  reduce 431
	'?'  reduce 431
	'|'  reduce 431
	';'  reduce 431
	':'  reduce 431
	'}'  reduce 431
	','  reduce 431
	')'  reduce 431
	']'  reduce 431


state 487
	expr1 : expr1 '^' error .  (450)

	.  reduce 450


state 488
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 '^' expr1 .  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	TOK_EQ  shift 351
	TOK_GE  shift 352
	TOK_LE  shift 353
	TOK_NE  shift 354
	TOK_LSH  shift 355
	TOK_RSH  shift 356
	'&'  shift 362
	'>'  shift 363
	'<'  shift 364
	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 432
	TOK_LAND  reduce 432
	TOK_LOR  reduce 432
	TOK_LEX_EOF  reduce 432
	TOK_DOT_DOT  reduce 432
	TOK_DOT_DOT_DOT  reduce 432
	TOK_MULTISET_END  reduce 432
	'?'  reduce 432
	'|'  reduce 432
	'^'  reduce 432
	';'  reduce 432
	':'  reduce 432
	'}'  reduce 432
	','  reduce 432
	')'  reduce 432
	']'  reduce 432


state 489
	expr1 : expr1 '&' error .  (451)

	.  reduce 451


state 490
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 '&' expr1 .  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	TOK_EQ  shift 351
	TOK_GE  shift 352
	TOK_LE  shift 353
	TOK_NE  shift 354
	TOK_LSH  shift 355
	TOK_RSH  shift 356
	'>'  shift 363
	'<'  shift 364
	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 433
	TOK_LAND  reduce 433
	TOK_LOR  reduce 433
	TOK_LEX_EOF  reduce 433
	TOK_DOT_DOT  reduce 433
	TOK_DOT_DOT_DOT  reduce 433
	TOK_MULTISET_END  reduce 433
	'?'  reduce 433
	'|'  reduce 433
	'^'  reduce 433
	'&'  reduce 433
	';'  reduce 433
	':'  reduce 433
	'}'  reduce 433
	','  reduce 433
	')'  reduce 433
	']'  reduce 433


state 491
	expr1 : expr1 '>' error .  (454)

	.  reduce 454


state 492
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 '>' expr1 .  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	TOK_LSH  shift 355
	TOK_RSH  shift 356
	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 436
	TOK_EQ  reduce 436
	TOK_GE  reduce 436
	TOK_LE  reduce 436
	TOK_NE  reduce 436
	TOK_LAND  reduce 436
	TOK_LOR  reduce 436
	TOK_LEX_EOF  reduce 436
	TOK_DOT_DOT  reduce 436
	TOK_DOT_DOT_DOT  reduce 436
	TOK_MULTISET_END  reduce 436
	'?'  reduce 436
	'|'  reduce 436
	'^'  reduce 436
	'&'  reduce 436
	'>'  reduce 436
	'<'  reduce 436
	';'  reduce 436
	':'  reduce 436
	'}'  reduce 436
	','  reduce 436
	')'  reduce 436
	']'  reduce 436


state 493
	expr1 : expr1 '<' error .  (456)

	.  reduce 456


state 494
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 '<' expr1 .  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	TOK_LSH  shift 355
	TOK_RSH  shift 356
	'+'  shift 365
	'-'  shift 366
	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 438
	TOK_EQ  reduce 438
	TOK_GE  reduce 438
	TOK_LE  reduce 438
	TOK_NE  reduce 438
	TOK_LAND  reduce 438
	TOK_LOR  reduce 438
	TOK_LEX_EOF  reduce 438
	TOK_DOT_DOT  reduce 438
	TOK_DOT_DOT_DOT  reduce 438
	TOK_MULTISET_END  reduce 438
	'?'  reduce 438
	'|'  reduce 438
	'^'  reduce 438
	'&'  reduce 438
	'>'  reduce 438
	'<'  reduce 438
	';'  reduce 438
	':'  reduce 438
	'}'  reduce 438
	','  reduce 438
	')'  reduce 438
	']'  reduce 438


state 495
	expr1 : expr1 '+' error .  (460)

	.  reduce 460


state 496
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 '+' expr1 .  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 442
	TOK_EQ  reduce 442
	TOK_GE  reduce 442
	TOK_LE  reduce 442
	TOK_NE  reduce 442
	TOK_LSH  reduce 442
	TOK_RSH  reduce 442
	TOK_LAND  reduce 442
	TOK_LOR  reduce 442
	TOK_LEX_EOF  reduce 442
	TOK_DOT_DOT  reduce 442
	TOK_DOT_DOT_DOT  reduce 442
	TOK_MULTISET_END  reduce 442
	'?'  reduce 442
	'|'  reduce 442
	'^'  reduce 442
	'&'  reduce 442
	'>'  reduce 442
	'<'  reduce 442
	'+'  reduce 442
	'-'  reduce 442
	';'  reduce 442
	':'  reduce 442
	'}'  reduce 442
	','  reduce 442
	')'  reduce 442
	']'  reduce 442


state 497
	expr1 : expr1 '-' error .  (461)

	.  reduce 461


state 498
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 '-' expr1 .  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	'*'  shift 367
	'%'  shift 368
	'/'  shift 369
	error  reduce 443
	TOK_EQ  reduce 443
	TOK_GE  reduce 443
	TOK_LE  reduce 443
	TOK_NE  reduce 443
	TOK_LSH  reduce 443
	TOK_RSH  reduce 443
	TOK_LAND  reduce 443
	TOK_LOR  reduce 443
	TOK_LEX_EOF  reduce 443
	TOK_DOT_DOT  reduce 443
	TOK_DOT_DOT_DOT  reduce 443
	TOK_MULTISET_END  reduce 443
	'?'  reduce 443
	'|'  reduce 443
	'^'  reduce 443
	'&'  reduce 443
	'>'  reduce 443
	'<'  reduce 443
	'+'  reduce 443
	'-'  reduce 443
	';'  reduce 443
	':'  reduce 443
	'}'  reduce 443
	','  reduce 443
	')'  reduce 443
	']'  reduce 443


state 499
	expr1 : expr1 '*' error .  (462)

	.  reduce 462


state 500
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 '*' expr1 .  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	.  reduce 444


state 501
	expr1 : expr1 '%' error .  (463)

	.  reduce 463


state 502
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 '%' expr1 .  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	.  reduce 445


state 503
	expr1 : expr1 '/' error .  (464)

	.  reduce 464


state 504
	expr1 : expr1 . TOK_LOR expr1  (429)
	expr1 : expr1 . TOK_LAND expr1  (430)
	expr1 : expr1 . '|' expr1  (431)
	expr1 : expr1 . '^' expr1  (432)
	expr1 : expr1 . '&' expr1  (433)
	expr1 : expr1 . TOK_EQ expr1  (434)
	expr1 : expr1 . TOK_NE expr1  (435)
	expr1 : expr1 . '>' expr1  (436)
	expr1 : expr1 . TOK_GE expr1  (437)
	expr1 : expr1 . '<' expr1  (438)
	expr1 : expr1 . TOK_LE expr1  (439)
	expr1 : expr1 . TOK_LSH expr1  (440)
	expr1 : expr1 . TOK_RSH expr1  (441)
	expr1 : expr1 . '+' expr1  (442)
	expr1 : expr1 . '-' expr1  (443)
	expr1 : expr1 . '*' expr1  (444)
	expr1 : expr1 . '%' expr1  (445)
	expr1 : expr1 . '/' expr1  (446)
	expr1 : expr1 '/' expr1 .  (446)
	expr1 : expr1 . TOK_LOR error  (447)
	expr1 : expr1 . TOK_LAND error  (448)
	expr1 : expr1 . '|' error  (449)
	expr1 : expr1 . '^' error  (450)
	expr1 : expr1 . '&' error  (451)
	expr1 : expr1 . TOK_EQ error  (452)
	expr1 : expr1 . TOK_NE error  (453)
	expr1 : expr1 . '>' error  (454)
	expr1 : expr1 . TOK_GE error  (455)
	expr1 : expr1 . '<' error  (456)
	expr1 : expr1 . TOK_LE error  (457)
	expr1 : expr1 . TOK_LSH error  (458)
	expr1 : expr1 . TOK_RSH error  (459)
	expr1 : expr1 . '+' error  (460)
	expr1 : expr1 . '-' error  (461)
	expr1 : expr1 . '*' error  (462)
	expr1 : expr1 . '%' error  (463)
	expr1 : expr1 . '/' error  (464)

	.  reduce 446


state 505
	expr5 : expr4 TOK_ARROW line_number_info . magic_identifier  (513)
	expr5 : expr4 TOK_ARROW line_number_info . error  (515)

	error  shift 600
	TOK_CONSTANT  shift 601
	TOK_RETURN  shift 602
	TOK_SWITCH  shift 603
	TOK_SSCANF  shift 604
	TOK_CATCH  shift 605
	TOK_FOREACH  shift 606
	TOK_ARRAY_ID  shift 607
	TOK_ATTRIBUTE_ID  shift 608
	TOK_BREAK  shift 609
	TOK_CASE  shift 610
	TOK_CLASS  shift 611
	TOK_CONTINUE  shift 612
	TOK_DEFAULT  shift 613
	TOK_DEPRECATED_ID  shift 614
	TOK_DO  shift 615
	TOK_ELSE  shift 616
	TOK_ENUM  shift 617
	TOK_EXTERN  shift 618
	TOK_FLOAT_ID  shift 619
	TOK_FOR  shift 620
	TOK_FUNCTION_ID  shift 621
	TOK_GAUGE  shift 622
	TOK_GLOBAL  shift 623
	TOK_IDENTIFIER  shift 624
	TOK_RESERVED  shift 625
	TOK_IF  shift 626
	TOK_IMPORT  shift 627
	TOK_INHERIT  shift 628
	TOK_INLINE  shift 629
	TOK_LOCAL_ID  shift 630
	TOK_FINAL_ID  shift 631
	TOK_FUNCTION_NAME  shift 632
	TOK_INT_ID  shift 633
	TOK_LAMBDA  shift 634
	TOK_MULTISET_ID  shift 635
	TOK_MAPPING_ID  shift 636
	TOK_MIXED_ID  shift 637
	TOK_OBJECT_ID  shift 638
	TOK_PRIVATE  shift 639
	TOK_PROGRAM_ID  shift 640
	TOK_PROTECTED  shift 641
	TOK_PREDEF  shift 642
	TOK_PUBLIC  shift 643
	TOK_STATIC  shift 644
	TOK_STRING_ID  shift 645
	TOK_TYPEDEF  shift 646
	TOK_TYPEOF  shift 647
	TOK_VARIANT  shift 648
	TOK_VOID_ID  shift 649
	TOK_WHILE  shift 650
	TOK_OPTIONAL  shift 651
	.  error

	magic_identifiers  goto 652
	magic_identifiers1  goto 653
	magic_identifiers2  goto 654
	magic_identifiers3  goto 655
	magic_identifier  goto 656


state 506
	expr5 : expr4 TOK_SAFE_INDEX line_number_info . TOK_IDENTIFIER  (514)

	TOK_IDENTIFIER  shift 657
	.  error


state 507
	expr5 : expr4 TOK_SAFE_START_INDEX line_number_info . expr0 ']'  (501)
	expr5 : expr4 TOK_SAFE_START_INDEX line_number_info . range_bound expected_dot_dot range_bound ']'  (502)
	implicit_modifiers : .  (484)
	range_bound : .  (557)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_LEX_EOF  shift 515
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'<'  shift 516
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_DOT_DOT  reduce 557
	TOK_DOT_DOT_DOT  reduce 557
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	comma_expr  goto 518
	comma_expr2  goto 435
	range_bound  goto 658
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 659
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 508
	expr0 : expr4 '=' error .  (397)

	.  reduce 397


state 509
	expr0 : expr4 '=' expr0 .  (396)

	.  reduce 396


state 510
	expr0 : expr4 assign error .  (400)

	.  reduce 400


state 511
	expr0 : expr4 assign expr0 .  (399)

	.  reduce 399


state 512
	apply : expr4 open_paren_with_line_info error . ')' optional_block  (480)
	apply : expr4 open_paren_with_line_info error . TOK_LEX_EOF  (481)
	apply : expr4 open_paren_with_line_info error . ';'  (482)
	apply : expr4 open_paren_with_line_info error . '}'  (483)

	TOK_LEX_EOF  shift 660
	';'  shift 661
	'}'  shift 662
	')'  shift 663
	.  error


state 513
	apply : expr4 open_paren_with_line_info expr_list . ')' optional_block  (479)

	')'  shift 664
	.  error


state 514
	expr5 : expr4 open_bracket_with_line_info error . ']'  (503)
	expr5 : expr4 open_bracket_with_line_info error . TOK_LEX_EOF  (504)
	expr5 : expr4 open_bracket_with_line_info error . ';'  (505)
	expr5 : expr4 open_bracket_with_line_info error . '}'  (506)
	expr5 : expr4 open_bracket_with_line_info error . ')'  (507)

	TOK_LEX_EOF  shift 665
	';'  shift 666
	'}'  shift 667
	')'  shift 668
	']'  shift 669
	.  error


state 515
	range_bound : TOK_LEX_EOF .  (560)

	.  reduce 560


state 516
	range_bound : '<' . comma_expr  (559)
	range_bound : '<' . TOK_LEX_EOF  (561)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_LEX_EOF  shift 670
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	comma_expr  goto 671
	comma_expr2  goto 435
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 517
	expr5 : expr4 open_bracket_with_line_info '*' . ']'  (498)

	']'  shift 672
	.  error


state 518
	range_bound : comma_expr .  (558)

	.  reduce 558


state 519
	expr5 : expr4 open_bracket_with_line_info range_bound . expected_dot_dot range_bound ']'  (500)

	TOK_DOT_DOT  shift 408
	TOK_DOT_DOT_DOT  shift 409
	.  error

	expected_dot_dot  goto 673


state 520
	comma_expr2 : expr0 .  (391)
	expr5 : expr4 open_bracket_with_line_info expr0 . ']'  (499)

	']'  shift 674
	TOK_DOT_DOT  reduce 391
	TOK_DOT_DOT_DOT  reduce 391
	','  reduce 391


state 521
	expr4 : expr5 '.' line_number_info . TOK_IDENTIFIER  (487)

	TOK_IDENTIFIER  shift 675
	.  error


state 522
	optional_create_arguments : '(' . create_arguments close_paren_or_missing  (312)
	modifier_list : .  (152)
	optional_comma : .  (415)

	','  shift 400
	error  reduce 415
	TOK_LEX_EOF  reduce 415
	TOK_ARRAY_ID  reduce 152
	TOK_ATTRIBUTE_ID  reduce 152
	TOK_DEPRECATED_ID  reduce 152
	TOK_EXTERN  reduce 152
	TOK_FLOAT_ID  reduce 152
	TOK_FUNCTION_ID  reduce 152
	TOK_GLOBAL  reduce 152
	TOK_IDENTIFIER  reduce 152
	TOK_RESERVED  reduce 152
	TOK_INLINE  reduce 152
	TOK_LOCAL_ID  reduce 152
	TOK_FINAL_ID  reduce 152
	TOK_INT_ID  reduce 152
	TOK_MULTISET_ID  reduce 152
	TOK_MAPPING_ID  reduce 152
	TOK_MIXED_ID  reduce 152
	TOK_OBJECT_ID  reduce 152
	TOK_PRIVATE  reduce 152
	TOK_PROGRAM_ID  reduce 152
	TOK_PROTECTED  reduce 152
	TOK_PUBLIC  reduce 152
	TOK_STATIC  reduce 152
	TOK_STRING_ID  reduce 152
	TOK_TYPEOF  reduce 152
	TOK_VARIANT  reduce 152
	TOK_VOID_ID  reduce 152
	TOK_OPTIONAL  reduce 152
	TOK_AUTO_ID  reduce 152
	')'  reduce 415
	'{'  reduce 415
	'.'  reduce 152

	create_arguments  goto 676
	create_arguments2  goto 677
	create_arg  goto 678
	modifier_list  goto 7
	modifiers  goto 679
	optional_comma  goto 680


state 523
	class : TOK_CLASS line_number_info optional_identifier $$24 $$25 optional_create_arguments . failsafe_program  (319)

	error  shift 681
	TOK_LEX_EOF  shift 682
	'{'  shift 683
	.  error

	failsafe_program  goto 684


state 524
	enum_list : error .  (329)

	.  reduce 329


state 525
	enum_def : simple_identifier . enum_value  (325)
	enum_value : .  (322)

	'='  shift 685
	TOK_LEX_EOF  reduce 322
	'}'  reduce 322
	','  reduce 322

	enum_value  goto 686


state 526
	enum_list : enum_def .  (327)

	.  reduce 327


state 527
	enum_list : enum_list . ',' propagated_enum_value enum_def  (328)
	enum : TOK_ENUM $$26 optional_identifier '{' $$27 enum_list . $$28 end_block  (333)
	$$28 : .  (332)

	','  shift 687
	TOK_LEX_EOF  reduce 332
	'}'  reduce 332

	$$28  goto 688


state 528
	real_string_constant : real_string_constant '+' TOK_STRING .  (604)

	.  reduce 604


state 529
	basic_type : TOK_ATTRIBUTE_ID '(' string_constant error ')' .  (185)

	.  reduce 185


state 530
	full_type : full_type . '|' type3  (165)
	basic_type : TOK_ATTRIBUTE_ID '(' string_constant ',' full_type . ')'  (184)

	'|'  shift 221
	')'  shift 689
	.  error


state 531
	optional_dot_dot_dot : TOK_DOT_DOT .  (74)

	.  reduce 74


state 532
	optional_dot_dot_dot : TOK_DOT_DOT_DOT .  (73)

	.  reduce 73


state 533
	opt_function_type : '(' $$7 function_type_list optional_dot_dot_dot . ':' $$8 full_type ')'  (211)

	':'  shift 690
	.  error


state 534
	function_type_list2 : function_type_list2 ',' . $$9 full_type  (217)
	optional_comma : ',' .  (416)
	$$9 : .  (216)

	TOK_ARRAY_ID  reduce 216
	TOK_ATTRIBUTE_ID  reduce 216
	TOK_DEPRECATED_ID  reduce 216
	TOK_DOT_DOT  reduce 416
	TOK_DOT_DOT_DOT  reduce 416
	TOK_FLOAT_ID  reduce 216
	TOK_FUNCTION_ID  reduce 216
	TOK_GLOBAL  reduce 216
	TOK_IDENTIFIER  reduce 216
	TOK_RESERVED  reduce 216
	TOK_INT_ID  reduce 216
	TOK_MULTISET_ID  reduce 216
	TOK_MAPPING_ID  reduce 216
	TOK_MIXED_ID  reduce 216
	TOK_OBJECT_ID  reduce 216
	TOK_PROGRAM_ID  reduce 216
	TOK_STRING_ID  reduce 216
	TOK_TYPEOF  reduce 216
	TOK_VOID_ID  reduce 216
	TOK_AUTO_ID  reduce 216
	':'  reduce 416
	'.'  reduce 216

	$$9  goto 691


state 535
	function_type_list : function_type_list2 optional_comma .  (214)

	.  reduce 214


state 536
	number_or_maxint : TOK_NUMBER .  (191)

	.  reduce 191


state 537
	number_or_maxint : '-' . TOK_NUMBER  (192)

	TOK_NUMBER  shift 692
	.  error


state 538
	opt_int_range : '(' number_or_minint expected_dot_dot number_or_maxint . ')'  (200)

	')'  shift 693
	.  error


state 539
	opt_mapping_type : '(' $$10 full_type ':' . $$11 full_type $$12 ')'  (223)
	$$11 : .  (221)

	.  reduce 221

	$$11  goto 694


state 540
	opt_object_type : $$6 '(' program_ref ')' .  (205)

	.  reduce 205


state 541
	attribute : TOK_ATTRIBUTE_ID '(' string_constant optional_comma ')' .  (154)

	.  reduce 154


state 542
	new_name : TOK_IDENTIFIER '=' error .  (231)

	.  reduce 231


state 543
	new_name : TOK_IDENTIFIER '=' TOK_LEX_EOF .  (232)

	.  reduce 232


state 544
	new_name : TOK_IDENTIFIER '=' $$13 . expr0  (230)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 695
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 545
	def : modifiers optional_attributes simple_type optional_constant TOK_IDENTIFIER start_function error .  (58)

	.  reduce 58


state 546
	def : modifiers optional_attributes simple_type optional_constant TOK_IDENTIFIER start_function '(' . $$2 arguments close_paren_or_missing $$3 block_or_semi  (57)
	$$2 : .  (55)

	.  reduce 55

	$$2  goto 696


state 547
	new_name : bad_identifier '=' expr0 .  (233)

	.  reduce 233


state 548
	def : modifiers optional_attributes simple_type optional_constant bad_identifier $$4 '(' . arguments ')' block_or_semi  (60)
	optional_comma : .  (415)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	','  shift 400
	'.'  shift 27
	')'  reduce 415

	arguments  goto 697
	arguments2  goto 698
	optional_comma  goto 699
	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	new_arg_name  goto 700
	full_type  goto 701
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 549
	new_name : TOK_IDENTIFIER .  (227)
	new_name : TOK_IDENTIFIER . '=' $$13 expr0  (230)
	new_name : TOK_IDENTIFIER . '=' error  (231)
	new_name : TOK_IDENTIFIER . '=' TOK_LEX_EOF  (232)

	'='  shift 423
	';'  reduce 227
	','  reduce 227


state 550
	new_name : bad_identifier .  (228)
	new_name : bad_identifier . '=' expr0  (233)

	'='  shift 425
	';'  reduce 228
	','  reduce 228


state 551
	name_list : name_list ',' new_name .  (226)

	.  reduce 226


state 552
	sscanf : TOK_SSCANF '(' error TOK_LEX_EOF .  (587)

	.  reduce 587


state 553
	sscanf : TOK_SSCANF '(' error ';' .  (589)

	.  reduce 589


state 554
	sscanf : TOK_SSCANF '(' error '}' .  (588)

	.  reduce 588


state 555
	sscanf : TOK_SSCANF '(' error ')' .  (586)

	.  reduce 586


state 556
	sscanf : TOK_SSCANF '(' expr0 error . ')'  (582)
	sscanf : TOK_SSCANF '(' expr0 error . TOK_LEX_EOF  (583)
	sscanf : TOK_SSCANF '(' expr0 error . '}'  (584)
	sscanf : TOK_SSCANF '(' expr0 error . ';'  (585)

	TOK_LEX_EOF  shift 702
	';'  shift 703
	'}'  shift 704
	')'  shift 705
	.  error


state 557
	sscanf : TOK_SSCANF '(' expr0 ',' . expr0 lvalue_list ')'  (577)
	sscanf : TOK_SSCANF '(' expr0 ',' . expr0 error ')'  (578)
	sscanf : TOK_SSCANF '(' expr0 ',' . expr0 error TOK_LEX_EOF  (579)
	sscanf : TOK_SSCANF '(' expr0 ',' . expr0 error '}'  (580)
	sscanf : TOK_SSCANF '(' expr0 ',' . expr0 error ';'  (581)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 706
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 558
	catch_arg : '(' error TOK_LEX_EOF .  (570)

	.  reduce 570


state 559
	catch_arg : '(' error ';' .  (572)

	.  reduce 572


state 560
	catch_arg : '(' error '}' .  (571)

	.  reduce 571


state 561
	catch_arg : '(' error ')' .  (569)

	.  reduce 569


state 562
	catch_arg : '(' comma_expr ')' .  (568)

	.  reduce 568


state 563
	new_local_name : TOK_IDENTIFIER .  (234)
	new_local_name : TOK_IDENTIFIER . '=' $$14 expr0  (237)
	new_local_name : TOK_IDENTIFIER . '=' $$16 error  (241)
	new_local_name : TOK_IDENTIFIER . '=' $$17 TOK_LEX_EOF  (243)
	local_function : TOK_IDENTIFIER . start_function func_args $$22 failsafe_block  (302)
	local_function : TOK_IDENTIFIER . start_function error  (303)
	start_function : .  (52)

	'='  shift 707
	error  reduce 52
	TOK_LEX_EOF  reduce 234
	TOK_DOT_DOT  reduce 234
	TOK_DOT_DOT_DOT  reduce 234
	';'  reduce 234
	':'  reduce 234
	'}'  reduce 234
	','  reduce 234
	'('  reduce 52
	')'  reduce 234
	']'  reduce 234

	start_function  goto 708


state 564
	local_name_list : local_name_list . ',' new_local_name  (254)
	comma_expr : simple_type2 local_name_list .  (389)

	','  shift 709
	TOK_LEX_EOF  reduce 389
	TOK_DOT_DOT  reduce 389
	TOK_DOT_DOT_DOT  reduce 389
	';'  reduce 389
	':'  reduce 389
	'}'  reduce 389
	')'  reduce 389
	']'  reduce 389


state 565
	local_name_list : new_local_name .  (253)

	.  reduce 253


state 566
	comma_expr : simple_type2 local_function .  (390)

	.  reduce 390


state 567
	new_local_name : bad_identifier .  (235)
	new_local_name : bad_identifier . '=' $$15 expr0  (239)

	'='  shift 710
	TOK_LEX_EOF  reduce 235
	TOK_DOT_DOT  reduce 235
	TOK_DOT_DOT_DOT  reduce 235
	';'  reduce 235
	':'  reduce 235
	'}'  reduce 235
	','  reduce 235
	')'  reduce 235
	']'  reduce 235


state 568
	block : '{' $$18 line_number_info . $$19 statements end_block  (247)
	$$19 : .  (246)

	.  reduce 246

	$$19  goto 711


state 569
	lambda : TOK_LAMBDA line_number_info implicit_identifier start_lambda . func_args $$21 failsafe_block  (299)
	lambda : TOK_LAMBDA line_number_info implicit_identifier start_lambda . error  (300)

	error  shift 712
	'('  shift 713
	.  error

	func_args  goto 714


state 570
	literal_expr : TOK_MULTISET_START line_number_info error TOK_LEX_EOF .  (525)

	.  reduce 525


state 571
	literal_expr : TOK_MULTISET_START line_number_info error TOK_MULTISET_END .  (523)

	.  reduce 523


state 572
	literal_expr : TOK_MULTISET_START line_number_info error ';' .  (526)

	.  reduce 526


state 573
	literal_expr : TOK_MULTISET_START line_number_info error '}' .  (527)

	.  reduce 527


state 574
	literal_expr : TOK_MULTISET_START line_number_info error ')' .  (524)

	.  reduce 524


state 575
	splice_expr : '@' expr0 .  (394)

	.  reduce 394


state 576
	literal_expr : TOK_MULTISET_START line_number_info expr_list TOK_MULTISET_END .  (521)

	.  reduce 521


state 577
	literal_expr : TOK_MULTISET_START line_number_info expr_list ')' .  (522)

	.  reduce 522


state 578
	optional_comma : ',' .  (416)
	expr_list2 : expr_list2 ',' . splice_expr  (420)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'@'  shift 442
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	TOK_MULTISET_END  reduce 416
	'}'  reduce 416
	')'  reduce 416

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	splice_expr  goto 715
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 444
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 579
	expr_list : expr_list2 optional_comma .  (418)

	.  reduce 418


state 580
	close_brace_or_missing : '}' .  (45)

	.  reduce 45


state 581
	literal_expr : open_paren_with_line_info '{' expr_list close_brace_or_missing . ')'  (519)

	')'  shift 716
	.  error


state 582
	expr0 : open_bracket_with_line_info low_lvalue_list . ']' '=' expr0  (398)
	expr0 : open_bracket_with_line_info low_lvalue_list . ']' assign expr0  (401)
	expr0 : open_bracket_with_line_info low_lvalue_list . ']' error  (402)
	lvalue : open_bracket_with_line_info low_lvalue_list . ']'  (591)

	']'  shift 717
	.  error


state 583
	expected_colon : TOK_LEX_EOF .  (378)

	.  reduce 378


state 584
	expected_colon : ';' .  (376)

	.  reduce 376


state 585
	expected_colon : ':' .  (375)

	.  reduce 375


state 586
	expected_colon : '}' .  (377)

	.  reduce 377


state 587
	assoc_pair : expr0 expected_colon . expr0  (426)
	assoc_pair : expr0 expected_colon . error  (427)
	implicit_modifiers : .  (484)

	error  shift 718
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 719
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 588
	close_bracket_or_missing : ']' .  (50)

	.  reduce 50


state 589
	literal_expr : open_paren_with_line_info open_bracket_with_line_info m_expr_list close_bracket_or_missing . ')'  (520)

	')'  shift 720
	.  error


state 590
	optional_comma : ',' .  (416)
	m_expr_list2 : m_expr_list2 ',' . assoc_pair  (424)
	m_expr_list2 : m_expr_list2 ',' . error  (425)
	implicit_modifiers : .  (484)

	error  shift 721
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	')'  reduce 416
	']'  reduce 416

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	assoc_pair  goto 722
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 454
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 591
	m_expr_list : m_expr_list2 optional_comma .  (422)

	.  reduce 422


state 592
	comma_expr2 : comma_expr2 ',' expr0 .  (392)

	.  reduce 392


state 593
	type : type '|' type3 .  (167)

	.  reduce 167


state 594
	lvalue : open_bracket_with_line_info low_lvalue_list ']' .  (591)

	.  reduce 591


state 595
	lvalue_list : ',' lvalue . lvalue_list  (595)
	lvalue_list : .  (594)

	','  shift 463
	')'  reduce 594
	']'  reduce 594

	lvalue_list  goto 723


state 596
	expr0 : open_bracket_with_line_info low_lvalue_list ']' error .  (402)

	.  reduce 402


state 597
	expr0 : open_bracket_with_line_info low_lvalue_list ']' '=' . expr0  (398)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 724
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 598
	expr0 : open_bracket_with_line_info low_lvalue_list ']' assign . expr0  (401)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 725
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 599
	expr01 : expr1 '?' expr01 ':' . expr01  (404)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 317
	catch  goto 252
	expr01  goto 726
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	apply  goto 259
	expr4  goto 319
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 600
	expr5 : expr4 TOK_ARROW line_number_info error .  (515)

	.  reduce 515


state 601
	magic_identifiers3 : TOK_CONSTANT .  (133)

	.  reduce 133


state 602
	magic_identifiers3 : TOK_RETURN .  (140)

	.  reduce 140


state 603
	magic_identifiers3 : TOK_SWITCH .  (142)

	.  reduce 142


state 604
	magic_identifiers3 : TOK_SSCANF .  (141)

	.  reduce 141


state 605
	magic_identifiers3 : TOK_CATCH .  (128)

	.  reduce 128


state 606
	magic_identifiers3 : TOK_FOREACH .  (127)

	.  reduce 127


state 607
	magic_identifiers2 : TOK_ARRAY_ID .  (108)

	.  reduce 108


state 608
	magic_identifiers2 : TOK_ATTRIBUTE_ID .  (109)

	.  reduce 109


state 609
	magic_identifiers3 : TOK_BREAK .  (131)

	.  reduce 131


state 610
	magic_identifiers3 : TOK_CASE .  (132)

	.  reduce 132


state 611
	magic_identifiers3 : TOK_CLASS .  (130)

	.  reduce 130


state 612
	magic_identifiers3 : TOK_CONTINUE .  (134)

	.  reduce 134


state 613
	magic_identifiers3 : TOK_DEFAULT .  (135)

	.  reduce 135


state 614
	magic_identifiers2 : TOK_DEPRECATED_ID .  (110)

	.  reduce 110


state 615
	magic_identifiers3 : TOK_DO .  (123)

	.  reduce 123


state 616
	magic_identifiers3 : TOK_ELSE .  (126)

	.  reduce 126


state 617
	magic_identifiers2 : TOK_ENUM .  (120)

	.  reduce 120


state 618
	magic_identifiers1 : TOK_EXTERN .  (98)

	.  reduce 98


state 619
	magic_identifiers2 : TOK_FLOAT_ID .  (118)

	.  reduce 118


state 620
	magic_identifiers3 : TOK_FOR .  (124)

	.  reduce 124


state 621
	magic_identifiers2 : TOK_FUNCTION_ID .  (114)

	.  reduce 114


state 622
	magic_identifiers3 : TOK_GAUGE .  (129)

	.  reduce 129


state 623
	magic_identifiers3 : TOK_GLOBAL .  (144)

	.  reduce 144


state 624
	magic_identifier : TOK_IDENTIFIER .  (148)

	.  reduce 148


state 625
	magic_identifier : TOK_RESERVED .  (149)

	.  reduce 149


state 626
	magic_identifiers3 : TOK_IF .  (122)

	.  reduce 122


state 627
	magic_identifiers3 : TOK_IMPORT .  (136)

	.  reduce 136


state 628
	magic_identifiers3 : TOK_INHERIT .  (137)

	.  reduce 137


state 629
	magic_identifiers1 : TOK_INLINE .  (103)

	.  reduce 103


state 630
	magic_identifiers1 : TOK_LOCAL_ID .  (100)

	.  reduce 100


state 631
	magic_identifiers1 : TOK_FINAL_ID .  (96)

	.  reduce 96


state 632
	magic_identifiers2 : TOK_FUNCTION_NAME .  (115)

	.  reduce 115


state 633
	magic_identifiers2 : TOK_INT_ID .  (119)

	.  reduce 119


state 634
	magic_identifiers3 : TOK_LAMBDA .  (138)

	.  reduce 138


state 635
	magic_identifiers2 : TOK_MULTISET_ID .  (112)

	.  reduce 112


state 636
	magic_identifiers2 : TOK_MAPPING_ID .  (111)

	.  reduce 111


state 637
	magic_identifiers2 : TOK_MIXED_ID .  (107)

	.  reduce 107


state 638
	magic_identifiers2 : TOK_OBJECT_ID .  (113)

	.  reduce 113


state 639
	magic_identifiers1 : TOK_PRIVATE .  (99)

	.  reduce 99


state 640
	magic_identifiers2 : TOK_PROGRAM_ID .  (116)

	.  reduce 116


state 641
	magic_identifiers1 : TOK_PROTECTED .  (102)

	.  reduce 102


state 642
	magic_identifiers3 : TOK_PREDEF .  (139)

	.  reduce 139


state 643
	magic_identifiers1 : TOK_PUBLIC .  (101)

	.  reduce 101


state 644
	magic_identifiers1 : TOK_STATIC .  (97)

	.  reduce 97


state 645
	magic_identifiers2 : TOK_STRING_ID .  (117)

	.  reduce 117


state 646
	magic_identifiers2 : TOK_TYPEDEF .  (121)

	.  reduce 121


state 647
	magic_identifiers3 : TOK_TYPEOF .  (143)

	.  reduce 143


state 648
	magic_identifiers1 : TOK_VARIANT .  (105)

	.  reduce 105


state 649
	magic_identifiers2 : TOK_VOID_ID .  (106)

	.  reduce 106


state 650
	magic_identifiers3 : TOK_WHILE .  (125)

	.  reduce 125


state 651
	magic_identifiers1 : TOK_OPTIONAL .  (104)

	.  reduce 104


state 652
	magic_identifier : magic_identifiers .  (150)

	.  reduce 150


state 653
	magic_identifiers : magic_identifiers1 .  (145)

	.  reduce 145


state 654
	magic_identifiers : magic_identifiers2 .  (146)

	.  reduce 146


state 655
	magic_identifiers : magic_identifiers3 .  (147)

	.  reduce 147


state 656
	expr5 : expr4 TOK_ARROW line_number_info magic_identifier .  (513)

	.  reduce 513


state 657
	expr5 : expr4 TOK_SAFE_INDEX line_number_info TOK_IDENTIFIER .  (514)

	.  reduce 514


state 658
	expr5 : expr4 TOK_SAFE_START_INDEX line_number_info range_bound . expected_dot_dot range_bound ']'  (502)

	TOK_DOT_DOT  shift 408
	TOK_DOT_DOT_DOT  shift 409
	.  error

	expected_dot_dot  goto 727


state 659
	comma_expr2 : expr0 .  (391)
	expr5 : expr4 TOK_SAFE_START_INDEX line_number_info expr0 . ']'  (501)

	']'  shift 728
	TOK_DOT_DOT  reduce 391
	TOK_DOT_DOT_DOT  reduce 391
	','  reduce 391


state 660
	apply : expr4 open_paren_with_line_info error TOK_LEX_EOF .  (481)

	.  reduce 481


state 661
	apply : expr4 open_paren_with_line_info error ';' .  (482)

	.  reduce 482


state 662
	apply : expr4 open_paren_with_line_info error '}' .  (483)

	.  reduce 483


state 663
	apply : expr4 open_paren_with_line_info error ')' . optional_block  (480)
	optional_block : .  (476)

	'{'  shift 729
	error  reduce 476
	TOK_ARROW  reduce 476
	TOK_INC  reduce 476
	TOK_DEC  reduce 476
	TOK_EQ  reduce 476
	TOK_GE  reduce 476
	TOK_LE  reduce 476
	TOK_NE  reduce 476
	TOK_LSH  reduce 476
	TOK_RSH  reduce 476
	TOK_LAND  reduce 476
	TOK_LOR  reduce 476
	TOK_LEX_EOF  reduce 476
	TOK_ADD_EQ  reduce 476
	TOK_AND_EQ  reduce 476
	TOK_DIV_EQ  reduce 476
	TOK_DOT_DOT  reduce 476
	TOK_DOT_DOT_DOT  reduce 476
	TOK_MULTISET_END  reduce 476
	TOK_LSH_EQ  reduce 476
	TOK_MOD_EQ  reduce 476
	TOK_MULT_EQ  reduce 476
	TOK_OR_EQ  reduce 476
	TOK_RSH_EQ  reduce 476
	TOK_SUB_EQ  reduce 476
	TOK_XOR_EQ  reduce 476
	TOK_SAFE_INDEX  reduce 476
	TOK_SAFE_START_INDEX  reduce 476
	'='  reduce 476
	'?'  reduce 476
	'|'  reduce 476
	'^'  reduce 476
	'&'  reduce 476
	'>'  reduce 476
	'<'  reduce 476
	'+'  reduce 476
	'-'  reduce 476
	'*'  reduce 476
	'%'  reduce 476
	'/'  reduce 476
	';'  reduce 476
	':'  reduce 476
	'}'  reduce 476
	','  reduce 476
	'('  reduce 476
	')'  reduce 476
	'['  reduce 476
	']'  reduce 476
	'.'  reduce 476

	optional_block  goto 730


state 664
	apply : expr4 open_paren_with_line_info expr_list ')' . optional_block  (479)
	optional_block : .  (476)

	'{'  shift 729
	error  reduce 476
	TOK_ARROW  reduce 476
	TOK_INC  reduce 476
	TOK_DEC  reduce 476
	TOK_EQ  reduce 476
	TOK_GE  reduce 476
	TOK_LE  reduce 476
	TOK_NE  reduce 476
	TOK_LSH  reduce 476
	TOK_RSH  reduce 476
	TOK_LAND  reduce 476
	TOK_LOR  reduce 476
	TOK_LEX_EOF  reduce 476
	TOK_ADD_EQ  reduce 476
	TOK_AND_EQ  reduce 476
	TOK_DIV_EQ  reduce 476
	TOK_DOT_DOT  reduce 476
	TOK_DOT_DOT_DOT  reduce 476
	TOK_MULTISET_END  reduce 476
	TOK_LSH_EQ  reduce 476
	TOK_MOD_EQ  reduce 476
	TOK_MULT_EQ  reduce 476
	TOK_OR_EQ  reduce 476
	TOK_RSH_EQ  reduce 476
	TOK_SUB_EQ  reduce 476
	TOK_XOR_EQ  reduce 476
	TOK_SAFE_INDEX  reduce 476
	TOK_SAFE_START_INDEX  reduce 476
	'='  reduce 476
	'?'  reduce 476
	'|'  reduce 476
	'^'  reduce 476
	'&'  reduce 476
	'>'  reduce 476
	'<'  reduce 476
	'+'  reduce 476
	'-'  reduce 476
	'*'  reduce 476
	'%'  reduce 476
	'/'  reduce 476
	';'  reduce 476
	':'  reduce 476
	'}'  reduce 476
	','  reduce 476
	'('  reduce 476
	')'  reduce 476
	'['  reduce 476
	']'  reduce 476
	'.'  reduce 476

	optional_block  goto 731


state 665
	expr5 : expr4 open_bracket_with_line_info error TOK_LEX_EOF .  (504)

	.  reduce 504


state 666
	expr5 : expr4 open_bracket_with_line_info error ';' .  (505)

	.  reduce 505


state 667
	expr5 : expr4 open_bracket_with_line_info error '}' .  (506)

	.  reduce 506


state 668
	expr5 : expr4 open_bracket_with_line_info error ')' .  (507)

	.  reduce 507


state 669
	expr5 : expr4 open_bracket_with_line_info error ']' .  (503)

	.  reduce 503


state 670
	range_bound : '<' TOK_LEX_EOF .  (561)

	.  reduce 561


state 671
	range_bound : '<' comma_expr .  (559)

	.  reduce 559


state 672
	expr5 : expr4 open_bracket_with_line_info '*' ']' .  (498)

	.  reduce 498


state 673
	expr5 : expr4 open_bracket_with_line_info range_bound expected_dot_dot . range_bound ']'  (500)
	implicit_modifiers : .  (484)
	range_bound : .  (557)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_LEX_EOF  shift 515
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'<'  shift 516
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	']'  reduce 557

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	comma_expr  goto 518
	comma_expr2  goto 435
	range_bound  goto 732
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 674
	expr5 : expr4 open_bracket_with_line_info expr0 ']' .  (499)

	.  reduce 499


state 675
	expr4 : expr5 '.' line_number_info TOK_IDENTIFIER .  (487)

	.  reduce 487


state 676
	optional_create_arguments : '(' create_arguments . close_paren_or_missing  (312)
	close_paren_or_missing : .  (44)

	')'  shift 733
	error  reduce 44
	TOK_LEX_EOF  reduce 44
	'{'  reduce 44

	close_paren_or_missing  goto 734


state 677
	create_arguments2 : create_arguments2 . ',' create_arg  (307)
	create_arguments2 : create_arguments2 . ':' create_arg  (308)
	create_arguments : create_arguments2 . optional_comma  (310)
	optional_comma : .  (415)

	':'  shift 735
	','  shift 736
	error  reduce 415
	TOK_LEX_EOF  reduce 415
	')'  reduce 415
	'{'  reduce 415

	optional_comma  goto 737


state 678
	create_arguments2 : create_arg .  (306)

	.  reduce 306


state 679
	create_arg : modifiers . simple_type optional_dot_dot_dot TOK_IDENTIFIER  (304)
	create_arg : modifiers . simple_type bad_identifier  (305)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	simple_type  goto 738
	full_type  goto 166
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 680
	create_arguments : optional_comma .  (309)

	.  reduce 309


state 681
	failsafe_program : error .  (315)

	.  reduce 315


state 682
	failsafe_program : TOK_LEX_EOF .  (316)

	.  reduce 316


state 683
	failsafe_program : '{' . program $$23 end_block  (314)
	program : .  (5)

	.  reduce 5

	program  goto 739


state 684
	class : TOK_CLASS line_number_info optional_identifier $$24 $$25 optional_create_arguments failsafe_program .  (319)

	.  reduce 319


state 685
	enum_value : '=' . safe_expr0  (323)
	implicit_modifiers : .  (484)

	error  shift 229
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_LEX_EOF  shift 237
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_expr0  goto 740
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 258
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 686
	enum_def : simple_identifier enum_value .  (325)

	.  reduce 325


state 687
	enum_list : enum_list ',' . propagated_enum_value enum_def  (328)
	propagated_enum_value : .  (326)

	.  reduce 326

	propagated_enum_value  goto 741


state 688
	enum : TOK_ENUM $$26 optional_identifier '{' $$27 enum_list $$28 . end_block  (333)

	TOK_LEX_EOF  shift 742
	'}'  shift 743
	.  error

	end_block  goto 744


state 689
	basic_type : TOK_ATTRIBUTE_ID '(' string_constant ',' full_type ')' .  (184)

	.  reduce 184


state 690
	opt_function_type : '(' $$7 function_type_list optional_dot_dot_dot ':' . $$8 full_type ')'  (211)
	$$8 : .  (210)

	.  reduce 210

	$$8  goto 745


state 691
	function_type_list2 : function_type_list2 ',' $$9 . full_type  (217)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	full_type  goto 746
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 692
	number_or_maxint : '-' TOK_NUMBER .  (192)

	.  reduce 192


state 693
	opt_int_range : '(' number_or_minint expected_dot_dot number_or_maxint ')' .  (200)

	.  reduce 200


state 694
	opt_mapping_type : '(' $$10 full_type ':' $$11 . full_type $$12 ')'  (223)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	full_type  goto 747
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 695
	new_name : TOK_IDENTIFIER '=' $$13 expr0 .  (230)

	.  reduce 230


state 696
	def : modifiers optional_attributes simple_type optional_constant TOK_IDENTIFIER start_function '(' $$2 . arguments close_paren_or_missing $$3 block_or_semi  (57)
	optional_comma : .  (415)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	','  shift 400
	'.'  shift 27
	error  reduce 415
	TOK_LEX_EOF  reduce 415
	';'  reduce 415
	')'  reduce 415
	'{'  reduce 415

	arguments  goto 748
	arguments2  goto 698
	optional_comma  goto 699
	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	new_arg_name  goto 700
	full_type  goto 701
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 697
	def : modifiers optional_attributes simple_type optional_constant bad_identifier $$4 '(' arguments . ')' block_or_semi  (60)

	')'  shift 749
	.  error


state 698
	arguments : arguments2 . optional_comma  (82)
	arguments2 : arguments2 . ',' new_arg_name  (84)
	arguments2 : arguments2 . ':' new_arg_name  (85)
	optional_comma : .  (415)

	':'  shift 750
	','  shift 751
	error  reduce 415
	TOK_LEX_EOF  reduce 415
	';'  reduce 415
	')'  reduce 415
	'{'  reduce 415

	optional_comma  goto 752


state 699
	arguments : optional_comma .  (81)

	.  reduce 81


state 700
	arguments2 : new_arg_name .  (83)

	.  reduce 83


state 701
	new_arg_name : full_type . optional_dot_dot_dot optional_identifier  (79)
	full_type : full_type . '|' type3  (165)
	optional_dot_dot_dot : .  (75)

	TOK_DOT_DOT  shift 531
	TOK_DOT_DOT_DOT  shift 532
	'|'  shift 221
	error  reduce 75
	TOK_RETURN  reduce 75
	TOK_SWITCH  reduce 75
	TOK_SSCANF  reduce 75
	TOK_CATCH  reduce 75
	TOK_FOREACH  reduce 75
	TOK_LEX_EOF  reduce 75
	TOK_ARRAY_ID  reduce 75
	TOK_ATTRIBUTE_ID  reduce 75
	TOK_BREAK  reduce 75
	TOK_CASE  reduce 75
	TOK_CLASS  reduce 75
	TOK_CONTINUE  reduce 75
	TOK_DEFAULT  reduce 75
	TOK_DEPRECATED_ID  reduce 75
	TOK_DO  reduce 75
	TOK_ELSE  reduce 75
	TOK_ENUM  reduce 75
	TOK_EXTERN  reduce 75
	TOK_FLOAT_ID  reduce 75
	TOK_FOR  reduce 75
	TOK_FUNCTION_ID  reduce 75
	TOK_GAUGE  reduce 75
	TOK_IDENTIFIER  reduce 75
	TOK_RESERVED  reduce 75
	TOK_IF  reduce 75
	TOK_IMPORT  reduce 75
	TOK_INHERIT  reduce 75
	TOK_INLINE  reduce 75
	TOK_LOCAL_ID  reduce 75
	TOK_FINAL_ID  reduce 75
	TOK_FUNCTION_NAME  reduce 75
	TOK_INT_ID  reduce 75
	TOK_LAMBDA  reduce 75
	TOK_MULTISET_ID  reduce 75
	TOK_MAPPING_ID  reduce 75
	TOK_MIXED_ID  reduce 75
	TOK_OBJECT_ID  reduce 75
	TOK_PRIVATE  reduce 75
	TOK_PROGRAM_ID  reduce 75
	TOK_PROTECTED  reduce 75
	TOK_PREDEF  reduce 75
	TOK_PUBLIC  reduce 75
	TOK_STATIC  reduce 75
	TOK_STRING_ID  reduce 75
	TOK_TYPEDEF  reduce 75
	TOK_TYPEOF  reduce 75
	TOK_VARIANT  reduce 75
	TOK_VOID_ID  reduce 75
	TOK_OPTIONAL  reduce 75
	';'  reduce 75
	':'  reduce 75
	','  reduce 75
	')'  reduce 75
	'{'  reduce 75

	optional_dot_dot_dot  goto 753


state 702
	sscanf : TOK_SSCANF '(' expr0 error TOK_LEX_EOF .  (583)

	.  reduce 583


state 703
	sscanf : TOK_SSCANF '(' expr0 error ';' .  (585)

	.  reduce 585


state 704
	sscanf : TOK_SSCANF '(' expr0 error '}' .  (584)

	.  reduce 584


state 705
	sscanf : TOK_SSCANF '(' expr0 error ')' .  (582)

	.  reduce 582


state 706
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 . lvalue_list ')'  (577)
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 . error ')'  (578)
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 . error TOK_LEX_EOF  (579)
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 . error '}'  (580)
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 . error ';'  (581)
	lvalue_list : .  (594)

	error  shift 754
	','  shift 463
	')'  reduce 594

	lvalue_list  goto 755


state 707
	new_local_name : TOK_IDENTIFIER '=' . $$14 expr0  (237)
	new_local_name : TOK_IDENTIFIER '=' . $$16 error  (241)
	new_local_name : TOK_IDENTIFIER '=' . $$17 TOK_LEX_EOF  (243)
	$$14 : .  (236)
	$$16 : .  (240)
	$$17 : .  (242)

	error  reduce 240
	TOK_FLOAT  reduce 236
	TOK_STRING  reduce 236
	TOK_NUMBER  reduce 236
	TOK_INC  reduce 236
	TOK_DEC  reduce 236
	TOK_NOT  reduce 236
	TOK_SSCANF  reduce 236
	TOK_CATCH  reduce 236
	TOK_LEX_EOF  reduce 242
	TOK_CLASS  reduce 236
	TOK_COLON_COLON  reduce 236
	TOK_ELSE  reduce 236
	TOK_ENUM  reduce 236
	TOK_EXTERN  reduce 236
	TOK_GAUGE  reduce 236
	TOK_GLOBAL  reduce 236
	TOK_IDENTIFIER  reduce 236
	TOK_RESERVED  reduce 236
	TOK_IMPORT  reduce 236
	TOK_INHERIT  reduce 236
	TOK_INLINE  reduce 236
	TOK_LOCAL_ID  reduce 236
	TOK_FINAL_ID  reduce 236
	TOK_FUNCTION_NAME  reduce 236
	TOK_LAMBDA  reduce 236
	TOK_MULTISET_START  reduce 236
	TOK_PRIVATE  reduce 236
	TOK_PROTECTED  reduce 236
	TOK_PREDEF  reduce 236
	TOK_PUBLIC  reduce 236
	TOK_STATIC  reduce 236
	TOK_TYPEOF  reduce 236
	TOK_VARIANT  reduce 236
	TOK_VERSION  reduce 236
	TOK_OPTIONAL  reduce 236
	'-'  reduce 236
	'~'  reduce 236
	'('  reduce 236
	'['  reduce 236
	'.'  reduce 236

	$$14  goto 756
	$$16  goto 757
	$$17  goto 758


state 708
	local_function : TOK_IDENTIFIER start_function . func_args $$22 failsafe_block  (302)
	local_function : TOK_IDENTIFIER start_function . error  (303)

	error  shift 759
	'('  shift 713
	.  error

	func_args  goto 760


state 709
	local_name_list : local_name_list ',' . new_local_name  (254)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 761
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	new_local_name  goto 762
	bad_identifier  goto 567
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 710
	new_local_name : bad_identifier '=' . $$15 expr0  (239)
	$$15 : .  (238)

	.  reduce 238

	$$15  goto 763


state 711
	block : '{' $$18 line_number_info $$19 . statements end_block  (247)
	statements : .  (264)

	.  reduce 264

	statements  goto 764


state 712
	lambda : TOK_LAMBDA line_number_info implicit_identifier start_lambda error .  (300)

	.  reduce 300


state 713
	func_args : '(' . arguments close_paren_or_missing  (80)
	optional_comma : .  (415)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	','  shift 400
	'.'  shift 27
	error  reduce 415
	TOK_LEX_EOF  reduce 415
	')'  reduce 415
	'{'  reduce 415

	arguments  goto 765
	arguments2  goto 698
	optional_comma  goto 699
	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	new_arg_name  goto 700
	full_type  goto 701
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 714
	lambda : TOK_LAMBDA line_number_info implicit_identifier start_lambda func_args . $$21 failsafe_block  (299)
	$$21 : .  (298)

	.  reduce 298

	$$21  goto 766


state 715
	expr_list2 : expr_list2 ',' splice_expr .  (420)

	.  reduce 420


state 716
	literal_expr : open_paren_with_line_info '{' expr_list close_brace_or_missing ')' .  (519)

	.  reduce 519


state 717
	expr0 : open_bracket_with_line_info low_lvalue_list ']' . '=' expr0  (398)
	expr0 : open_bracket_with_line_info low_lvalue_list ']' . assign expr0  (401)
	expr0 : open_bracket_with_line_info low_lvalue_list ']' . error  (402)
	lvalue : open_bracket_with_line_info low_lvalue_list ']' .  (591)

	error  shift 596
	TOK_ADD_EQ  shift 373
	TOK_AND_EQ  shift 374
	TOK_DIV_EQ  shift 375
	TOK_LSH_EQ  shift 376
	TOK_MOD_EQ  shift 377
	TOK_MULT_EQ  shift 378
	TOK_OR_EQ  shift 379
	TOK_RSH_EQ  shift 380
	TOK_SUB_EQ  shift 381
	TOK_XOR_EQ  shift 382
	'='  shift 597
	','  reduce 591
	']'  reduce 591

	assign  goto 598


state 718
	assoc_pair : expr0 expected_colon error .  (427)

	.  reduce 427


state 719
	assoc_pair : expr0 expected_colon expr0 .  (426)

	.  reduce 426


state 720
	literal_expr : open_paren_with_line_info open_bracket_with_line_info m_expr_list close_bracket_or_missing ')' .  (520)

	.  reduce 520


state 721
	m_expr_list2 : m_expr_list2 ',' error .  (425)

	.  reduce 425


state 722
	m_expr_list2 : m_expr_list2 ',' assoc_pair .  (424)

	.  reduce 424


state 723
	lvalue_list : ',' lvalue lvalue_list .  (595)

	.  reduce 595


state 724
	expr0 : open_bracket_with_line_info low_lvalue_list ']' '=' expr0 .  (398)

	.  reduce 398


state 725
	expr0 : open_bracket_with_line_info low_lvalue_list ']' assign expr0 .  (401)

	.  reduce 401


state 726
	expr01 : expr1 '?' expr01 ':' expr01 .  (404)

	.  reduce 404


state 727
	expr5 : expr4 TOK_SAFE_START_INDEX line_number_info range_bound expected_dot_dot . range_bound ']'  (502)
	implicit_modifiers : .  (484)
	range_bound : .  (557)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_LEX_EOF  shift 515
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'<'  shift 516
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	']'  reduce 557

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	comma_expr  goto 518
	comma_expr2  goto 435
	range_bound  goto 767
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 728
	expr5 : expr4 TOK_SAFE_START_INDEX line_number_info expr0 ']' .  (501)

	.  reduce 501


state 729
	optional_block : '{' . line_number_info start_lambda $$40 statements end_block  (478)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 768


state 730
	apply : expr4 open_paren_with_line_info error ')' optional_block .  (480)

	.  reduce 480


state 731
	apply : expr4 open_paren_with_line_info expr_list ')' optional_block .  (479)

	.  reduce 479


state 732
	expr5 : expr4 open_bracket_with_line_info range_bound expected_dot_dot range_bound . ']'  (500)

	']'  shift 769
	.  error


state 733
	close_paren_or_missing : ')' .  (43)

	.  reduce 43


state 734
	optional_create_arguments : '(' create_arguments close_paren_or_missing .  (312)

	.  reduce 312


state 735
	create_arguments2 : create_arguments2 ':' . create_arg  (308)
	modifier_list : .  (152)

	.  reduce 152

	create_arg  goto 770
	modifier_list  goto 7
	modifiers  goto 679


state 736
	create_arguments2 : create_arguments2 ',' . create_arg  (307)
	optional_comma : ',' .  (416)
	modifier_list : .  (152)

	error  reduce 416
	TOK_LEX_EOF  reduce 416
	TOK_ARRAY_ID  reduce 152
	TOK_ATTRIBUTE_ID  reduce 152
	TOK_DEPRECATED_ID  reduce 152
	TOK_EXTERN  reduce 152
	TOK_FLOAT_ID  reduce 152
	TOK_FUNCTION_ID  reduce 152
	TOK_GLOBAL  reduce 152
	TOK_IDENTIFIER  reduce 152
	TOK_RESERVED  reduce 152
	TOK_INLINE  reduce 152
	TOK_LOCAL_ID  reduce 152
	TOK_FINAL_ID  reduce 152
	TOK_INT_ID  reduce 152
	TOK_MULTISET_ID  reduce 152
	TOK_MAPPING_ID  reduce 152
	TOK_MIXED_ID  reduce 152
	TOK_OBJECT_ID  reduce 152
	TOK_PRIVATE  reduce 152
	TOK_PROGRAM_ID  reduce 152
	TOK_PROTECTED  reduce 152
	TOK_PUBLIC  reduce 152
	TOK_STATIC  reduce 152
	TOK_STRING_ID  reduce 152
	TOK_TYPEOF  reduce 152
	TOK_VARIANT  reduce 152
	TOK_VOID_ID  reduce 152
	TOK_OPTIONAL  reduce 152
	TOK_AUTO_ID  reduce 152
	')'  reduce 416
	'{'  reduce 416
	'.'  reduce 152

	create_arg  goto 771
	modifier_list  goto 7
	modifiers  goto 679


state 737
	create_arguments : create_arguments2 optional_comma .  (310)

	.  reduce 310


state 738
	create_arg : modifiers simple_type . optional_dot_dot_dot TOK_IDENTIFIER  (304)
	create_arg : modifiers simple_type . bad_identifier  (305)
	optional_dot_dot_dot : .  (75)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_DOT_DOT  shift 531
	TOK_DOT_DOT_DOT  shift 532
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	TOK_IDENTIFIER  reduce 75

	optional_dot_dot_dot  goto 772
	bad_identifier  goto 773
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 739
	program : program . def  (3)
	program : program . ';'  (4)
	failsafe_program : '{' program . $$23 end_block  (314)
	modifier_list : .  (152)
	$$23 : .  (313)

	error  shift 3
	TOK_IMPORT  shift 5
	';'  shift 6
	TOK_CONSTANT  reduce 152
	TOK_LEX_EOF  reduce 313
	TOK_ARRAY_ID  reduce 152
	TOK_ATTRIBUTE_ID  reduce 152
	TOK_CLASS  reduce 152
	TOK_DEPRECATED_ID  reduce 152
	TOK_ENUM  reduce 152
	TOK_EXTERN  reduce 152
	TOK_FLOAT_ID  reduce 152
	TOK_FUNCTION_ID  reduce 152
	TOK_GLOBAL  reduce 152
	TOK_IDENTIFIER  reduce 152
	TOK_RESERVED  reduce 152
	TOK_INHERIT  reduce 152
	TOK_INLINE  reduce 152
	TOK_LOCAL_ID  reduce 152
	TOK_FINAL_ID  reduce 152
	TOK_INT_ID  reduce 152
	TOK_MULTISET_ID  reduce 152
	TOK_MAPPING_ID  reduce 152
	TOK_MIXED_ID  reduce 152
	TOK_OBJECT_ID  reduce 152
	TOK_PRIVATE  reduce 152
	TOK_PROGRAM_ID  reduce 152
	TOK_PROTECTED  reduce 152
	TOK_PUBLIC  reduce 152
	TOK_STATIC  reduce 152
	TOK_STRING_ID  reduce 152
	TOK_TYPEDEF  reduce 152
	TOK_TYPEOF  reduce 152
	TOK_VARIANT  reduce 152
	TOK_VOID_ID  reduce 152
	TOK_OPTIONAL  reduce 152
	TOK_AUTO_ID  reduce 152
	'}'  reduce 313
	'{'  reduce 152
	'.'  reduce 152

	modifier_list  goto 7
	modifiers  goto 8
	def  goto 9
	inheritance  goto 10
	import  goto 11
	constant  goto 12
	typedef  goto 13
	$$23  goto 774


state 740
	enum_value : '=' safe_expr0 .  (323)

	.  reduce 323


state 741
	enum_list : enum_list ',' propagated_enum_value . enum_def  (328)
	enum_def : .  (324)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 220
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	TOK_LEX_EOF  reduce 324
	'}'  reduce 324
	','  reduce 324

	simple_identifier  goto 525
	bad_identifier  goto 223
	enum_def  goto 775
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 742
	end_block : TOK_LEX_EOF .  (249)

	.  reduce 249


state 743
	end_block : '}' .  (248)

	.  reduce 248


state 744
	enum : TOK_ENUM $$26 optional_identifier '{' $$27 enum_list $$28 end_block .  (333)

	.  reduce 333


state 745
	opt_function_type : '(' $$7 function_type_list optional_dot_dot_dot ':' $$8 . full_type ')'  (211)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	full_type  goto 776
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 746
	full_type : full_type . '|' type3  (165)
	function_type_list2 : function_type_list2 ',' $$9 full_type .  (217)

	'|'  shift 221
	TOK_DOT_DOT  reduce 217
	TOK_DOT_DOT_DOT  reduce 217
	':'  reduce 217
	','  reduce 217


state 747
	full_type : full_type . '|' type3  (165)
	opt_mapping_type : '(' $$10 full_type ':' $$11 full_type . $$12 ')'  (223)
	$$12 : .  (222)

	'|'  shift 221
	')'  reduce 222

	$$12  goto 777


state 748
	def : modifiers optional_attributes simple_type optional_constant TOK_IDENTIFIER start_function '(' $$2 arguments . close_paren_or_missing $$3 block_or_semi  (57)
	close_paren_or_missing : .  (44)

	')'  shift 733
	error  reduce 44
	TOK_LEX_EOF  reduce 44
	';'  reduce 44
	'{'  reduce 44

	close_paren_or_missing  goto 778


state 749
	def : modifiers optional_attributes simple_type optional_constant bad_identifier $$4 '(' arguments ')' . block_or_semi  (60)

	error  shift 779
	TOK_LEX_EOF  shift 780
	';'  shift 781
	'{'  shift 324
	.  error

	block  goto 782
	block_or_semi  goto 783


state 750
	arguments2 : arguments2 ':' . new_arg_name  (85)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	.  error

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	new_arg_name  goto 784
	full_type  goto 701
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 751
	arguments2 : arguments2 ',' . new_arg_name  (84)
	optional_comma : ',' .  (416)

	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_DEPRECATED_ID  shift 140
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GLOBAL  shift 143
	TOK_IDENTIFIER  shift 144
	TOK_RESERVED  shift 22
	TOK_INT_ID  shift 145
	TOK_MULTISET_ID  shift 146
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PROGRAM_ID  shift 150
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VOID_ID  shift 153
	TOK_AUTO_ID  shift 154
	'.'  shift 27
	error  reduce 416
	TOK_LEX_EOF  reduce 416
	';'  reduce 416
	')'  reduce 416
	'{'  reduce 416

	unqualified_idents  goto 155
	low_idents  goto 36
	typeof  goto 156
	new_arg_name  goto 785
	full_type  goto 701
	identifier_type  goto 158
	type3  goto 159
	basic_type  goto 160


state 752
	arguments : arguments2 optional_comma .  (82)

	.  reduce 82


state 753
	new_arg_name : full_type optional_dot_dot_dot . optional_identifier  (79)
	optional_identifier : .  (78)

	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 187
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	error  reduce 78
	TOK_LEX_EOF  reduce 78
	';'  reduce 78
	':'  reduce 78
	','  reduce 78
	')'  reduce 78
	'{'  reduce 78

	optional_identifier  goto 786
	bad_identifier  goto 189
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 754
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 error . ')'  (578)
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 error . TOK_LEX_EOF  (579)
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 error . '}'  (580)
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 error . ';'  (581)

	TOK_LEX_EOF  shift 787
	';'  shift 788
	'}'  shift 789
	')'  shift 790
	.  error


state 755
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 lvalue_list . ')'  (577)

	')'  shift 791
	.  error


state 756
	new_local_name : TOK_IDENTIFIER '=' $$14 . expr0  (237)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 792
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 757
	new_local_name : TOK_IDENTIFIER '=' $$16 . error  (241)

	error  shift 793
	.  error


state 758
	new_local_name : TOK_IDENTIFIER '=' $$17 . TOK_LEX_EOF  (243)

	TOK_LEX_EOF  shift 794
	.  error


state 759
	local_function : TOK_IDENTIFIER start_function error .  (303)

	.  reduce 303


state 760
	local_function : TOK_IDENTIFIER start_function func_args . $$22 failsafe_block  (302)
	$$22 : .  (301)

	.  reduce 301

	$$22  goto 795


state 761
	new_local_name : TOK_IDENTIFIER .  (234)
	new_local_name : TOK_IDENTIFIER . '=' $$14 expr0  (237)
	new_local_name : TOK_IDENTIFIER . '=' $$16 error  (241)
	new_local_name : TOK_IDENTIFIER . '=' $$17 TOK_LEX_EOF  (243)

	'='  shift 707
	TOK_LEX_EOF  reduce 234
	TOK_DOT_DOT  reduce 234
	TOK_DOT_DOT_DOT  reduce 234
	';'  reduce 234
	':'  reduce 234
	'}'  reduce 234
	','  reduce 234
	')'  reduce 234
	']'  reduce 234


state 762
	local_name_list : local_name_list ',' new_local_name .  (254)

	.  reduce 254


state 763
	new_local_name : bad_identifier '=' $$15 . expr0  (239)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 796
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 764
	block : '{' $$18 line_number_info $$19 statements . end_block  (247)
	statements : statements . statement  (265)
	implicit_modifiers : .  (484)

	error  shift 797
	TOK_CONSTANT  shift 798
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_RETURN  shift 799
	TOK_NOT  shift 234
	TOK_SWITCH  shift 800
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_FOREACH  shift 801
	TOK_LEX_EOF  shift 742
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_BREAK  shift 802
	TOK_CASE  shift 803
	TOK_COLON_COLON  shift 19
	TOK_CONTINUE  shift 804
	TOK_DEFAULT  shift 805
	TOK_DEPRECATED_ID  shift 140
	TOK_DO  shift 806
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FOR  shift 807
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 808
	TOK_RESERVED  shift 22
	TOK_IF  shift 809
	TOK_IMPORT  shift 810
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_WHILE  shift 811
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	';'  shift 812
	'}'  shift 743
	'('  shift 244
	'['  shift 245
	'{'  shift 324
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	block  goto 813
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	break  goto 814
	case  goto 815
	catch  goto 252
	comma_expr  goto 816
	comma_expr2  goto 435
	cond  goto 817
	continue  goto 818
	default  goto 819
	do  goto 820
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	for  goto 821
	foreach  goto 822
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	labeled_statement  goto 823
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	normal_label_statement  goto 824
	return  goto 825
	sscanf  goto 266
	statement  goto 826
	statement_with_semicolon  goto 827
	switch  goto 828
	typeof  goto 340
	unused2  goto 829
	while  goto 830
	import  goto 831
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	end_block  goto 832
	local_constant  goto 833
	bad_expr_ident  goto 268


state 765
	func_args : '(' arguments . close_paren_or_missing  (80)
	close_paren_or_missing : .  (44)

	')'  shift 733
	error  reduce 44
	TOK_LEX_EOF  reduce 44
	'{'  reduce 44

	close_paren_or_missing  goto 834


state 766
	lambda : TOK_LAMBDA line_number_info implicit_identifier start_lambda func_args $$21 . failsafe_block  (299)

	error  shift 835
	TOK_LEX_EOF  shift 836
	'{'  shift 324
	.  error

	block  goto 837
	failsafe_block  goto 838


state 767
	expr5 : expr4 TOK_SAFE_START_INDEX line_number_info range_bound expected_dot_dot range_bound . ']'  (502)

	']'  shift 839
	.  error


state 768
	optional_block : '{' line_number_info . start_lambda $$40 statements end_block  (478)
	start_lambda : .  (296)

	.  reduce 296

	start_lambda  goto 840


state 769
	expr5 : expr4 open_bracket_with_line_info range_bound expected_dot_dot range_bound ']' .  (500)

	.  reduce 500


state 770
	create_arguments2 : create_arguments2 ':' create_arg .  (308)

	.  reduce 308


state 771
	create_arguments2 : create_arguments2 ',' create_arg .  (307)

	.  reduce 307


state 772
	create_arg : modifiers simple_type optional_dot_dot_dot . TOK_IDENTIFIER  (304)

	TOK_IDENTIFIER  shift 841
	.  error


state 773
	create_arg : modifiers simple_type bad_identifier .  (305)

	.  reduce 305


state 774
	failsafe_program : '{' program $$23 . end_block  (314)

	TOK_LEX_EOF  shift 742
	'}'  shift 743
	.  error

	end_block  goto 842


state 775
	enum_list : enum_list ',' propagated_enum_value enum_def .  (328)

	.  reduce 328


state 776
	full_type : full_type . '|' type3  (165)
	opt_function_type : '(' $$7 function_type_list optional_dot_dot_dot ':' $$8 full_type . ')'  (211)

	'|'  shift 221
	')'  shift 843
	.  error


state 777
	opt_mapping_type : '(' $$10 full_type ':' $$11 full_type $$12 . ')'  (223)

	')'  shift 844
	.  error


state 778
	def : modifiers optional_attributes simple_type optional_constant TOK_IDENTIFIER start_function '(' $$2 arguments close_paren_or_missing . $$3 block_or_semi  (57)
	$$3 : .  (56)

	.  reduce 56

	$$3  goto 845


state 779
	block_or_semi : error .  (41)

	.  reduce 41


state 780
	block_or_semi : TOK_LEX_EOF .  (40)

	.  reduce 40


state 781
	block_or_semi : ';' .  (39)

	.  reduce 39


state 782
	block_or_semi : block .  (38)

	.  reduce 38


state 783
	def : modifiers optional_attributes simple_type optional_constant bad_identifier $$4 '(' arguments ')' block_or_semi .  (60)

	.  reduce 60


state 784
	arguments2 : arguments2 ':' new_arg_name .  (85)

	.  reduce 85


state 785
	arguments2 : arguments2 ',' new_arg_name .  (84)

	.  reduce 84


state 786
	new_arg_name : full_type optional_dot_dot_dot optional_identifier .  (79)

	.  reduce 79


state 787
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 error TOK_LEX_EOF .  (579)

	.  reduce 579


state 788
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 error ';' .  (581)

	.  reduce 581


state 789
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 error '}' .  (580)

	.  reduce 580


state 790
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 error ')' .  (578)

	.  reduce 578


state 791
	sscanf : TOK_SSCANF '(' expr0 ',' expr0 lvalue_list ')' .  (577)

	.  reduce 577


state 792
	new_local_name : TOK_IDENTIFIER '=' $$14 expr0 .  (237)

	.  reduce 237


state 793
	new_local_name : TOK_IDENTIFIER '=' $$16 error .  (241)

	.  reduce 241


state 794
	new_local_name : TOK_IDENTIFIER '=' $$17 TOK_LEX_EOF .  (243)

	.  reduce 243


state 795
	local_function : TOK_IDENTIFIER start_function func_args $$22 . failsafe_block  (302)

	error  shift 835
	TOK_LEX_EOF  shift 836
	'{'  shift 324
	.  error

	block  goto 837
	failsafe_block  goto 846


state 796
	new_local_name : bad_identifier '=' $$15 expr0 .  (239)

	.  reduce 239


state 797
	normal_label_statement : error . ';'  (275)
	normal_label_statement : error . TOK_LEX_EOF  (276)
	normal_label_statement : error . '}'  (277)

	TOK_LEX_EOF  shift 847
	';'  shift 848
	'}'  shift 849
	.  error


state 798
	local_constant : TOK_CONSTANT . local_constant_list ';'  (260)
	local_constant : TOK_CONSTANT . error ';'  (261)
	local_constant : TOK_CONSTANT . error TOK_LEX_EOF  (262)
	local_constant : TOK_CONSTANT . error '}'  (263)

	error  shift 850
	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 851
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	bad_identifier  goto 852
	local_constant_name  goto 853
	local_constant_list  goto 854
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 799
	return : TOK_RETURN . expected_semicolon  (379)
	return : TOK_RETURN . safe_comma_expr expected_semicolon  (380)
	implicit_modifiers : .  (484)

	error  shift 855
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_LEX_EOF  shift 856
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	';'  shift 857
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_comma_expr  goto 858
	comma_expr  goto 859
	comma_expr2  goto 435
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	expected_semicolon  goto 860
	bad_expr_ident  goto 268


state 800
	switch : TOK_SWITCH . $$38 line_number_info $$39 '(' safe_comma_expr end_cond statement  (371)
	$$38 : .  (369)

	.  reduce 369

	$$38  goto 861


state 801
	foreach : TOK_FOREACH . $$31 line_number_info $$32 '(' expr0 foreach_lvalues end_cond $$33 statement  (355)
	$$31 : .  (352)

	.  reduce 352

	$$31  goto 862


state 802
	break : TOK_BREAK . optional_label  (292)
	optional_label : .  (291)

	TOK_IDENTIFIER  shift 863
	TOK_LEX_EOF  reduce 291
	';'  reduce 291

	optional_label  goto 864


state 803
	case : TOK_CASE . safe_comma_expr expected_colon  (372)
	case : TOK_CASE . safe_comma_expr expected_dot_dot optional_comma_expr expected_colon  (373)
	case : TOK_CASE . expected_dot_dot safe_comma_expr expected_colon  (374)
	implicit_modifiers : .  (484)

	error  shift 855
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_DOT_DOT  shift 408
	TOK_DOT_DOT_DOT  shift 409
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_comma_expr  goto 865
	comma_expr  goto 859
	comma_expr2  goto 435
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	expected_dot_dot  goto 866
	bad_expr_ident  goto 268


state 804
	continue : TOK_CONTINUE . optional_label  (295)
	optional_label : .  (291)

	TOK_IDENTIFIER  shift 863
	TOK_LEX_EOF  reduce 291
	';'  reduce 291

	optional_label  goto 867


state 805
	default : TOK_DEFAULT . ':'  (293)
	default : TOK_DEFAULT .  (294)

	':'  shift 868
	error  reduce 294
	TOK_CONSTANT  reduce 294
	TOK_FLOAT  reduce 294
	TOK_STRING  reduce 294
	TOK_NUMBER  reduce 294
	TOK_INC  reduce 294
	TOK_DEC  reduce 294
	TOK_RETURN  reduce 294
	TOK_NOT  reduce 294
	TOK_SWITCH  reduce 294
	TOK_SSCANF  reduce 294
	TOK_CATCH  reduce 294
	TOK_FOREACH  reduce 294
	TOK_LEX_EOF  reduce 294
	TOK_ARRAY_ID  reduce 294
	TOK_ATTRIBUTE_ID  reduce 294
	TOK_BREAK  reduce 294
	TOK_CASE  reduce 294
	TOK_CLASS  reduce 294
	TOK_COLON_COLON  reduce 294
	TOK_CONTINUE  reduce 294
	TOK_DEFAULT  reduce 294
	TOK_DEPRECATED_ID  reduce 294
	TOK_DO  reduce 294
	TOK_ELSE  reduce 294
	TOK_ENUM  reduce 294
	TOK_EXTERN  reduce 294
	TOK_FLOAT_ID  reduce 294
	TOK_FOR  reduce 294
	TOK_FUNCTION_ID  reduce 294
	TOK_GAUGE  reduce 294
	TOK_GLOBAL  reduce 294
	TOK_IDENTIFIER  reduce 294
	TOK_RESERVED  reduce 294
	TOK_IF  reduce 294
	TOK_IMPORT  reduce 294
	TOK_INHERIT  reduce 294
	TOK_INLINE  reduce 294
	TOK_LOCAL_ID  reduce 294
	TOK_FINAL_ID  reduce 294
	TOK_FUNCTION_NAME  reduce 294
	TOK_INT_ID  reduce 294
	TOK_LAMBDA  reduce 294
	TOK_MULTISET_ID  reduce 294
	TOK_MULTISET_START  reduce 294
	TOK_MAPPING_ID  reduce 294
	TOK_MIXED_ID  reduce 294
	TOK_OBJECT_ID  reduce 294
	TOK_PRIVATE  reduce 294
	TOK_PROGRAM_ID  reduce 294
	TOK_PROTECTED  reduce 294
	TOK_PREDEF  reduce 294
	TOK_PUBLIC  reduce 294
	TOK_STATIC  reduce 294
	TOK_STRING_ID  reduce 294
	TOK_TYPEOF  reduce 294
	TOK_VARIANT  reduce 294
	TOK_VERSION  reduce 294
	TOK_VOID_ID  reduce 294
	TOK_WHILE  reduce 294
	TOK_OPTIONAL  reduce 294
	TOK_AUTO_ID  reduce 294
	'-'  reduce 294
	'~'  reduce 294
	';'  reduce 294
	'}'  reduce 294
	'('  reduce 294
	'['  reduce 294
	'{'  reduce 294
	'.'  reduce 294


state 806
	do : TOK_DO . line_number_info statement TOK_WHILE '(' safe_comma_expr end_cond expected_semicolon  (356)
	do : TOK_DO . line_number_info statement TOK_WHILE TOK_LEX_EOF  (357)
	do : TOK_DO . line_number_info statement TOK_LEX_EOF  (358)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 869


state 807
	for : TOK_FOR . $$34 line_number_info $$35 '(' unused expected_semicolon for_expr expected_semicolon unused end_cond statement  (363)
	$$34 : .  (361)

	.  reduce 361

	$$34  goto 870


state 808
	labeled_statement : TOK_IDENTIFIER . $$20 ':' statement  (289)
	string_or_identifier : TOK_IDENTIFIER .  (536)
	low_idents : TOK_IDENTIFIER .  (544)
	$$20 : .  (288)

	TOK_ARROW  reduce 544
	TOK_INC  reduce 544
	TOK_DEC  reduce 544
	TOK_RETURN  reduce 544
	TOK_EQ  reduce 544
	TOK_GE  reduce 544
	TOK_LE  reduce 544
	TOK_NE  reduce 544
	TOK_LSH  reduce 544
	TOK_RSH  reduce 544
	TOK_LAND  reduce 544
	TOK_LOR  reduce 544
	TOK_SWITCH  reduce 544
	TOK_SSCANF  reduce 544
	TOK_CATCH  reduce 544
	TOK_FOREACH  reduce 544
	TOK_LEX_EOF  reduce 544
	TOK_ADD_EQ  reduce 544
	TOK_AND_EQ  reduce 544
	TOK_ARRAY_ID  reduce 544
	TOK_ATTRIBUTE_ID  reduce 544
	TOK_BREAK  reduce 544
	TOK_CASE  reduce 544
	TOK_CLASS  reduce 544
	TOK_COLON_COLON  reduce 536
	TOK_CONTINUE  reduce 544
	TOK_DEFAULT  reduce 544
	TOK_DEPRECATED_ID  reduce 544
	TOK_DIV_EQ  reduce 544
	TOK_DO  reduce 544
	TOK_ELSE  reduce 544
	TOK_ENUM  reduce 544
	TOK_EXTERN  reduce 544
	TOK_FLOAT_ID  reduce 544
	TOK_FOR  reduce 544
	TOK_FUNCTION_ID  reduce 544
	TOK_GAUGE  reduce 544
	TOK_IDENTIFIER  reduce 544
	TOK_RESERVED  reduce 544
	TOK_IF  reduce 544
	TOK_IMPORT  reduce 544
	TOK_INHERIT  reduce 544
	TOK_INLINE  reduce 544
	TOK_LOCAL_ID  reduce 544
	TOK_FINAL_ID  reduce 544
	TOK_FUNCTION_NAME  reduce 544
	TOK_INT_ID  reduce 544
	TOK_LAMBDA  reduce 544
	TOK_MULTISET_ID  reduce 544
	TOK_LSH_EQ  reduce 544
	TOK_MAPPING_ID  reduce 544
	TOK_MIXED_ID  reduce 544
	TOK_MOD_EQ  reduce 544
	TOK_MULT_EQ  reduce 544
	TOK_OBJECT_ID  reduce 544
	TOK_OR_EQ  reduce 544
	TOK_PRIVATE  reduce 544
	TOK_PROGRAM_ID  reduce 544
	TOK_PROTECTED  reduce 544
	TOK_PREDEF  reduce 544
	TOK_PUBLIC  reduce 544
	TOK_RSH_EQ  reduce 544
	TOK_STATIC  reduce 544
	TOK_STRING_ID  reduce 544
	TOK_SUB_EQ  reduce 544
	TOK_TYPEDEF  reduce 544
	TOK_TYPEOF  reduce 544
	TOK_VARIANT  reduce 544
	TOK_VOID_ID  reduce 544
	TOK_XOR_EQ  reduce 544
	TOK_OPTIONAL  reduce 544
	TOK_SAFE_INDEX  reduce 544
	TOK_SAFE_START_INDEX  reduce 544
	'='  reduce 544
	'?'  reduce 544
	'|'  reduce 544
	'^'  reduce 544
	'&'  reduce 544
	'>'  reduce 544
	'<'  reduce 544
	'+'  reduce 544
	'-'  reduce 544
	'*'  reduce 544
	'%'  reduce 544
	'/'  reduce 544
	';'  reduce 544
	':'  reduce 288
	','  reduce 544
	'('  reduce 544
	'['  reduce 544
	'.'  reduce 544

	$$20  goto 871


state 809
	cond : TOK_IF . $$29 line_number_info $$30 '(' safe_comma_expr end_cond statement optional_else_part  (337)
	$$29 : .  (335)

	.  reduce 335

	$$29  goto 872


state 810
	import : TOK_IMPORT . idents ';'  (24)
	import : TOK_IMPORT . string ';'  (25)
	import : TOK_IMPORT . error ';'  (26)
	import : TOK_IMPORT . error TOK_LEX_EOF  (27)
	import : TOK_IMPORT . error '}'  (28)
	bad_expr_ident : TOK_IMPORT .  (652)

	error  shift 17
	TOK_STRING  shift 18
	TOK_COLON_COLON  shift 19
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_LOCAL_ID  shift 23
	TOK_FUNCTION_NAME  shift 24
	TOK_PREDEF  shift 25
	TOK_VERSION  shift 26
	'.'  shift 27
	TOK_ARROW  reduce 652
	TOK_INC  reduce 652
	TOK_DEC  reduce 652
	TOK_EQ  reduce 652
	TOK_GE  reduce 652
	TOK_LE  reduce 652
	TOK_NE  reduce 652
	TOK_LSH  reduce 652
	TOK_RSH  reduce 652
	TOK_LAND  reduce 652
	TOK_LOR  reduce 652
	TOK_LEX_EOF  reduce 652
	TOK_ADD_EQ  reduce 652
	TOK_AND_EQ  reduce 652
	TOK_DIV_EQ  reduce 652
	TOK_LSH_EQ  reduce 652
	TOK_MOD_EQ  reduce 652
	TOK_MULT_EQ  reduce 652
	TOK_OR_EQ  reduce 652
	TOK_RSH_EQ  reduce 652
	TOK_SUB_EQ  reduce 652
	TOK_XOR_EQ  reduce 652
	TOK_SAFE_INDEX  reduce 652
	TOK_SAFE_START_INDEX  reduce 652
	'='  reduce 652
	'?'  reduce 652
	'|'  reduce 652
	'^'  reduce 652
	'&'  reduce 652
	'>'  reduce 652
	'<'  reduce 652
	'+'  reduce 652
	'-'  reduce 652
	'*'  reduce 652
	'%'  reduce 652
	'/'  reduce 652
	';'  reduce 652
	','  reduce 652
	'('  reduce 652
	'['  reduce 652

	inherit_specifier  goto 28
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 31
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 35
	low_idents  goto 36


state 811
	while : TOK_WHILE . $$36 line_number_info $$37 '(' safe_comma_expr end_cond statement  (366)
	$$36 : .  (364)

	.  reduce 364

	$$36  goto 873


state 812
	normal_label_statement : ';' .  (278)

	.  reduce 278


state 813
	normal_label_statement : block .  (272)

	.  reduce 272


state 814
	normal_label_statement : break . expected_semicolon  (273)

	TOK_LEX_EOF  shift 856
	';'  shift 857
	.  error

	expected_semicolon  goto 874


state 815
	statement : case .  (285)

	.  reduce 285


state 816
	unused2 : comma_expr .  (383)

	.  reduce 383


state 817
	normal_label_statement : cond .  (269)

	.  reduce 269


state 818
	normal_label_statement : continue . expected_semicolon  (274)

	TOK_LEX_EOF  shift 856
	';'  shift 857
	.  error

	expected_semicolon  goto 875


state 819
	statement : default .  (286)

	.  reduce 286


state 820
	statement : do .  (281)

	.  reduce 281


state 821
	statement : for .  (282)

	.  reduce 282


state 822
	statement : foreach .  (283)

	.  reduce 283


state 823
	statement : labeled_statement .  (287)

	.  reduce 287


state 824
	statement : normal_label_statement .  (279)

	.  reduce 279


state 825
	normal_label_statement : return .  (270)

	.  reduce 270


state 826
	statements : statements statement .  (265)

	.  reduce 265


state 827
	normal_label_statement : statement_with_semicolon .  (267)

	.  reduce 267


state 828
	statement : switch .  (284)

	.  reduce 284


state 829
	statement_with_semicolon : unused2 . expected_semicolon  (266)

	TOK_LEX_EOF  shift 856
	';'  shift 857
	.  error

	expected_semicolon  goto 876


state 830
	statement : while .  (280)

	.  reduce 280


state 831
	normal_label_statement : import .  (268)

	.  reduce 268


state 832
	block : '{' $$18 line_number_info $$19 statements end_block .  (247)

	.  reduce 247


state 833
	normal_label_statement : local_constant .  (271)

	.  reduce 271


state 834
	func_args : '(' arguments close_paren_or_missing .  (80)

	.  reduce 80


state 835
	failsafe_block : error .  (251)

	.  reduce 251


state 836
	failsafe_block : TOK_LEX_EOF .  (252)

	.  reduce 252


state 837
	failsafe_block : block .  (250)

	.  reduce 250


state 838
	lambda : TOK_LAMBDA line_number_info implicit_identifier start_lambda func_args $$21 failsafe_block .  (299)

	.  reduce 299


state 839
	expr5 : expr4 TOK_SAFE_START_INDEX line_number_info range_bound expected_dot_dot range_bound ']' .  (502)

	.  reduce 502


state 840
	optional_block : '{' line_number_info start_lambda . $$40 statements end_block  (478)
	$$40 : .  (477)

	.  reduce 477

	$$40  goto 877


state 841
	create_arg : modifiers simple_type optional_dot_dot_dot TOK_IDENTIFIER .  (304)

	.  reduce 304


state 842
	failsafe_program : '{' program $$23 end_block .  (314)

	.  reduce 314


state 843
	opt_function_type : '(' $$7 function_type_list optional_dot_dot_dot ':' $$8 full_type ')' .  (211)

	.  reduce 211


state 844
	opt_mapping_type : '(' $$10 full_type ':' $$11 full_type $$12 ')' .  (223)

	.  reduce 223


state 845
	def : modifiers optional_attributes simple_type optional_constant TOK_IDENTIFIER start_function '(' $$2 arguments close_paren_or_missing $$3 . block_or_semi  (57)

	error  shift 779
	TOK_LEX_EOF  shift 780
	';'  shift 781
	'{'  shift 324
	.  error

	block  goto 782
	block_or_semi  goto 878


state 846
	local_function : TOK_IDENTIFIER start_function func_args $$22 failsafe_block .  (302)

	.  reduce 302


state 847
	normal_label_statement : error TOK_LEX_EOF .  (276)

	.  reduce 276


state 848
	normal_label_statement : error ';' .  (275)

	.  reduce 275


state 849
	normal_label_statement : error '}' .  (277)

	.  reduce 277


state 850
	local_constant_name : error . '=' safe_expr0  (257)
	local_constant : TOK_CONSTANT error . ';'  (261)
	local_constant : TOK_CONSTANT error . TOK_LEX_EOF  (262)
	local_constant : TOK_CONSTANT error . '}'  (263)

	TOK_LEX_EOF  shift 879
	'='  shift 880
	';'  shift 881
	'}'  shift 882
	.  error


state 851
	local_constant_name : TOK_IDENTIFIER . '=' safe_expr0  (255)

	'='  shift 883
	.  error


state 852
	local_constant_name : bad_identifier . '=' safe_expr0  (256)

	'='  shift 884
	.  error


state 853
	local_constant_list : local_constant_name .  (258)

	.  reduce 258


state 854
	local_constant_list : local_constant_list . ',' local_constant_name  (259)
	local_constant : TOK_CONSTANT local_constant_list . ';'  (260)

	';'  shift 885
	','  shift 886
	.  error


state 855
	safe_comma_expr : error .  (387)

	.  reduce 387


state 856
	expected_semicolon : TOK_LEX_EOF .  (360)

	.  reduce 360


state 857
	expected_semicolon : ';' .  (359)

	.  reduce 359


state 858
	return : TOK_RETURN safe_comma_expr . expected_semicolon  (380)

	TOK_LEX_EOF  shift 856
	';'  shift 857
	.  error

	expected_semicolon  goto 887


state 859
	safe_comma_expr : comma_expr .  (386)

	.  reduce 386


state 860
	return : TOK_RETURN expected_semicolon .  (379)

	.  reduce 379


state 861
	switch : TOK_SWITCH $$38 . line_number_info $$39 '(' safe_comma_expr end_cond statement  (371)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 888


state 862
	foreach : TOK_FOREACH $$31 . line_number_info $$32 '(' expr0 foreach_lvalues end_cond $$33 statement  (355)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 889


state 863
	optional_label : TOK_IDENTIFIER .  (290)

	.  reduce 290


state 864
	break : TOK_BREAK optional_label .  (292)

	.  reduce 292


state 865
	case : TOK_CASE safe_comma_expr . expected_colon  (372)
	case : TOK_CASE safe_comma_expr . expected_dot_dot optional_comma_expr expected_colon  (373)

	TOK_LEX_EOF  shift 583
	TOK_DOT_DOT  shift 408
	TOK_DOT_DOT_DOT  shift 409
	';'  shift 584
	':'  shift 585
	'}'  shift 586
	.  error

	expected_dot_dot  goto 890
	expected_colon  goto 891


state 866
	case : TOK_CASE expected_dot_dot . safe_comma_expr expected_colon  (374)
	implicit_modifiers : .  (484)

	error  shift 855
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_comma_expr  goto 892
	comma_expr  goto 859
	comma_expr2  goto 435
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 867
	continue : TOK_CONTINUE optional_label .  (295)

	.  reduce 295


state 868
	default : TOK_DEFAULT ':' .  (293)

	.  reduce 293


state 869
	do : TOK_DO line_number_info . statement TOK_WHILE '(' safe_comma_expr end_cond expected_semicolon  (356)
	do : TOK_DO line_number_info . statement TOK_WHILE TOK_LEX_EOF  (357)
	do : TOK_DO line_number_info . statement TOK_LEX_EOF  (358)
	implicit_modifiers : .  (484)

	error  shift 797
	TOK_CONSTANT  shift 798
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_RETURN  shift 799
	TOK_NOT  shift 234
	TOK_SWITCH  shift 800
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_FOREACH  shift 801
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_BREAK  shift 802
	TOK_CASE  shift 803
	TOK_COLON_COLON  shift 19
	TOK_CONTINUE  shift 804
	TOK_DEFAULT  shift 805
	TOK_DEPRECATED_ID  shift 140
	TOK_DO  shift 806
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FOR  shift 807
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 808
	TOK_RESERVED  shift 22
	TOK_IF  shift 809
	TOK_IMPORT  shift 810
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_WHILE  shift 811
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	';'  shift 812
	'('  shift 244
	'['  shift 245
	'{'  shift 324
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	block  goto 813
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	break  goto 814
	case  goto 815
	catch  goto 252
	comma_expr  goto 816
	comma_expr2  goto 435
	cond  goto 817
	continue  goto 818
	default  goto 819
	do  goto 820
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	for  goto 821
	foreach  goto 822
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	labeled_statement  goto 823
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	normal_label_statement  goto 824
	return  goto 825
	sscanf  goto 266
	statement  goto 893
	statement_with_semicolon  goto 827
	switch  goto 828
	typeof  goto 340
	unused2  goto 829
	while  goto 830
	import  goto 831
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	local_constant  goto 833
	bad_expr_ident  goto 268


state 870
	for : TOK_FOR $$34 . line_number_info $$35 '(' unused expected_semicolon for_expr expected_semicolon unused end_cond statement  (363)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 894


state 871
	labeled_statement : TOK_IDENTIFIER $$20 . ':' statement  (289)

	':'  shift 895
	.  error


state 872
	cond : TOK_IF $$29 . line_number_info $$30 '(' safe_comma_expr end_cond statement optional_else_part  (337)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 896


state 873
	while : TOK_WHILE $$36 . line_number_info $$37 '(' safe_comma_expr end_cond statement  (366)
	line_number_info : .  (244)

	.  reduce 244

	line_number_info  goto 897


state 874
	normal_label_statement : break expected_semicolon .  (273)

	.  reduce 273


state 875
	normal_label_statement : continue expected_semicolon .  (274)

	.  reduce 274


state 876
	statement_with_semicolon : unused2 expected_semicolon .  (266)

	.  reduce 266


state 877
	optional_block : '{' line_number_info start_lambda $$40 . statements end_block  (478)
	statements : .  (264)

	.  reduce 264

	statements  goto 898


state 878
	def : modifiers optional_attributes simple_type optional_constant TOK_IDENTIFIER start_function '(' $$2 arguments close_paren_or_missing $$3 block_or_semi .  (57)

	.  reduce 57


state 879
	local_constant : TOK_CONSTANT error TOK_LEX_EOF .  (262)

	.  reduce 262


state 880
	local_constant_name : error '=' . safe_expr0  (257)
	implicit_modifiers : .  (484)

	error  shift 229
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_LEX_EOF  shift 237
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_expr0  goto 899
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 258
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 881
	local_constant : TOK_CONSTANT error ';' .  (261)

	.  reduce 261


state 882
	local_constant : TOK_CONSTANT error '}' .  (263)

	.  reduce 263


state 883
	local_constant_name : TOK_IDENTIFIER '=' . safe_expr0  (255)
	implicit_modifiers : .  (484)

	error  shift 229
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_LEX_EOF  shift 237
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_expr0  goto 900
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 258
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 884
	local_constant_name : bad_identifier '=' . safe_expr0  (256)
	implicit_modifiers : .  (484)

	error  shift 229
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_LEX_EOF  shift 237
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_expr0  goto 901
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 258
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 885
	local_constant : TOK_CONSTANT local_constant_list ';' .  (260)

	.  reduce 260


state 886
	local_constant_list : local_constant_list ',' . local_constant_name  (259)

	error  shift 902
	TOK_RETURN  shift 60
	TOK_SWITCH  shift 61
	TOK_SSCANF  shift 62
	TOK_CATCH  shift 63
	TOK_FOREACH  shift 64
	TOK_ARRAY_ID  shift 65
	TOK_ATTRIBUTE_ID  shift 66
	TOK_BREAK  shift 67
	TOK_CASE  shift 68
	TOK_CLASS  shift 69
	TOK_CONTINUE  shift 70
	TOK_DEFAULT  shift 71
	TOK_DEPRECATED_ID  shift 72
	TOK_DO  shift 73
	TOK_ELSE  shift 74
	TOK_ENUM  shift 75
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 77
	TOK_FOR  shift 78
	TOK_FUNCTION_ID  shift 79
	TOK_GAUGE  shift 80
	TOK_IDENTIFIER  shift 851
	TOK_RESERVED  shift 82
	TOK_IF  shift 83
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 87
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 89
	TOK_INT_ID  shift 90
	TOK_LAMBDA  shift 91
	TOK_MULTISET_ID  shift 92
	TOK_MAPPING_ID  shift 93
	TOK_MIXED_ID  shift 94
	TOK_OBJECT_ID  shift 95
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 97
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 99
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 102
	TOK_TYPEDEF  shift 103
	TOK_TYPEOF  shift 104
	TOK_VARIANT  shift 105
	TOK_VOID_ID  shift 106
	TOK_OPTIONAL  shift 107
	.  error

	bad_identifier  goto 852
	local_constant_name  goto 903
	bad_expr_ident  goto 109
	bad_inherit  goto 110


state 887
	return : TOK_RETURN safe_comma_expr expected_semicolon .  (380)

	.  reduce 380


state 888
	switch : TOK_SWITCH $$38 line_number_info . $$39 '(' safe_comma_expr end_cond statement  (371)
	$$39 : .  (370)

	.  reduce 370

	$$39  goto 904


state 889
	foreach : TOK_FOREACH $$31 line_number_info . $$32 '(' expr0 foreach_lvalues end_cond $$33 statement  (355)
	$$32 : .  (353)

	.  reduce 353

	$$32  goto 905


state 890
	case : TOK_CASE safe_comma_expr expected_dot_dot . optional_comma_expr expected_colon  (373)
	optional_comma_expr : .  (384)
	implicit_modifiers : .  (484)

	error  shift 855
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_LEX_EOF  reduce 384
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	';'  reduce 384
	':'  reduce 384
	'}'  reduce 384

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_comma_expr  goto 906
	comma_expr  goto 859
	comma_expr2  goto 435
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	optional_comma_expr  goto 907
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 891
	case : TOK_CASE safe_comma_expr expected_colon .  (372)

	.  reduce 372


state 892
	case : TOK_CASE expected_dot_dot safe_comma_expr . expected_colon  (374)

	TOK_LEX_EOF  shift 583
	';'  shift 584
	':'  shift 585
	'}'  shift 586
	.  error

	expected_colon  goto 908


state 893
	do : TOK_DO line_number_info statement . TOK_WHILE '(' safe_comma_expr end_cond expected_semicolon  (356)
	do : TOK_DO line_number_info statement . TOK_WHILE TOK_LEX_EOF  (357)
	do : TOK_DO line_number_info statement . TOK_LEX_EOF  (358)

	TOK_LEX_EOF  shift 909
	TOK_WHILE  shift 910
	.  error


state 894
	for : TOK_FOR $$34 line_number_info . $$35 '(' unused expected_semicolon for_expr expected_semicolon unused end_cond statement  (363)
	$$35 : .  (362)

	.  reduce 362

	$$35  goto 911


state 895
	labeled_statement : TOK_IDENTIFIER $$20 ':' . statement  (289)
	implicit_modifiers : .  (484)

	error  shift 797
	TOK_CONSTANT  shift 798
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_RETURN  shift 799
	TOK_NOT  shift 234
	TOK_SWITCH  shift 800
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_FOREACH  shift 801
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_BREAK  shift 802
	TOK_CASE  shift 803
	TOK_COLON_COLON  shift 19
	TOK_CONTINUE  shift 804
	TOK_DEFAULT  shift 805
	TOK_DEPRECATED_ID  shift 140
	TOK_DO  shift 806
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FOR  shift 807
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 808
	TOK_RESERVED  shift 22
	TOK_IF  shift 809
	TOK_IMPORT  shift 810
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_WHILE  shift 811
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	';'  shift 812
	'('  shift 244
	'['  shift 245
	'{'  shift 324
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	block  goto 813
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	break  goto 814
	case  goto 815
	catch  goto 252
	comma_expr  goto 816
	comma_expr2  goto 435
	cond  goto 817
	continue  goto 818
	default  goto 819
	do  goto 820
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	for  goto 821
	foreach  goto 822
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	labeled_statement  goto 823
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	normal_label_statement  goto 824
	return  goto 825
	sscanf  goto 266
	statement  goto 912
	statement_with_semicolon  goto 827
	switch  goto 828
	typeof  goto 340
	unused2  goto 829
	while  goto 830
	import  goto 831
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	local_constant  goto 833
	bad_expr_ident  goto 268


state 896
	cond : TOK_IF $$29 line_number_info . $$30 '(' safe_comma_expr end_cond statement optional_else_part  (337)
	$$30 : .  (336)

	.  reduce 336

	$$30  goto 913


state 897
	while : TOK_WHILE $$36 line_number_info . $$37 '(' safe_comma_expr end_cond statement  (366)
	$$37 : .  (365)

	.  reduce 365

	$$37  goto 914


state 898
	statements : statements . statement  (265)
	optional_block : '{' line_number_info start_lambda $$40 statements . end_block  (478)
	implicit_modifiers : .  (484)

	error  shift 797
	TOK_CONSTANT  shift 798
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_RETURN  shift 799
	TOK_NOT  shift 234
	TOK_SWITCH  shift 800
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_FOREACH  shift 801
	TOK_LEX_EOF  shift 742
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_BREAK  shift 802
	TOK_CASE  shift 803
	TOK_COLON_COLON  shift 19
	TOK_CONTINUE  shift 804
	TOK_DEFAULT  shift 805
	TOK_DEPRECATED_ID  shift 140
	TOK_DO  shift 806
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FOR  shift 807
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 808
	TOK_RESERVED  shift 22
	TOK_IF  shift 809
	TOK_IMPORT  shift 810
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_WHILE  shift 811
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	';'  shift 812
	'}'  shift 743
	'('  shift 244
	'['  shift 245
	'{'  shift 324
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	block  goto 813
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	break  goto 814
	case  goto 815
	catch  goto 252
	comma_expr  goto 816
	comma_expr2  goto 435
	cond  goto 817
	continue  goto 818
	default  goto 819
	do  goto 820
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	for  goto 821
	foreach  goto 822
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	labeled_statement  goto 823
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	normal_label_statement  goto 824
	return  goto 825
	sscanf  goto 266
	statement  goto 826
	statement_with_semicolon  goto 827
	switch  goto 828
	typeof  goto 340
	unused2  goto 829
	while  goto 830
	import  goto 831
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	end_block  goto 915
	local_constant  goto 833
	bad_expr_ident  goto 268


state 899
	local_constant_name : error '=' safe_expr0 .  (257)

	.  reduce 257


state 900
	local_constant_name : TOK_IDENTIFIER '=' safe_expr0 .  (255)

	.  reduce 255


state 901
	local_constant_name : bad_identifier '=' safe_expr0 .  (256)

	.  reduce 256


state 902
	local_constant_name : error . '=' safe_expr0  (257)

	'='  shift 880
	.  error


state 903
	local_constant_list : local_constant_list ',' local_constant_name .  (259)

	.  reduce 259


state 904
	switch : TOK_SWITCH $$38 line_number_info $$39 . '(' safe_comma_expr end_cond statement  (371)

	'('  shift 916
	.  error


state 905
	foreach : TOK_FOREACH $$31 line_number_info $$32 . '(' expr0 foreach_lvalues end_cond $$33 statement  (355)

	'('  shift 917
	.  error


state 906
	optional_comma_expr : safe_comma_expr .  (385)

	.  reduce 385


state 907
	case : TOK_CASE safe_comma_expr expected_dot_dot optional_comma_expr . expected_colon  (373)

	TOK_LEX_EOF  shift 583
	';'  shift 584
	':'  shift 585
	'}'  shift 586
	.  error

	expected_colon  goto 918


state 908
	case : TOK_CASE expected_dot_dot safe_comma_expr expected_colon .  (374)

	.  reduce 374


state 909
	do : TOK_DO line_number_info statement TOK_LEX_EOF .  (358)

	.  reduce 358


state 910
	do : TOK_DO line_number_info statement TOK_WHILE . '(' safe_comma_expr end_cond expected_semicolon  (356)
	do : TOK_DO line_number_info statement TOK_WHILE . TOK_LEX_EOF  (357)

	TOK_LEX_EOF  shift 919
	'('  shift 920
	.  error


state 911
	for : TOK_FOR $$34 line_number_info $$35 . '(' unused expected_semicolon for_expr expected_semicolon unused end_cond statement  (363)

	'('  shift 921
	.  error


state 912
	labeled_statement : TOK_IDENTIFIER $$20 ':' statement .  (289)

	.  reduce 289


state 913
	cond : TOK_IF $$29 line_number_info $$30 . '(' safe_comma_expr end_cond statement optional_else_part  (337)

	'('  shift 922
	.  error


state 914
	while : TOK_WHILE $$36 line_number_info $$37 . '(' safe_comma_expr end_cond statement  (366)

	'('  shift 923
	.  error


state 915
	optional_block : '{' line_number_info start_lambda $$40 statements end_block .  (478)

	.  reduce 478


state 916
	switch : TOK_SWITCH $$38 line_number_info $$39 '(' . safe_comma_expr end_cond statement  (371)
	implicit_modifiers : .  (484)

	error  shift 855
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_comma_expr  goto 924
	comma_expr  goto 859
	comma_expr2  goto 435
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 917
	foreach : TOK_FOREACH $$31 line_number_info $$32 '(' . expr0 foreach_lvalues end_cond $$33 statement  (355)
	implicit_modifiers : .  (484)

	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_COLON_COLON  shift 19
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_LAMBDA  shift 239
	TOK_MULTISET_START  shift 240
	TOK_PRIVATE  shift 96
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_OPTIONAL  shift 107
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 925
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 32
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 267
	bad_expr_ident  goto 268


state 918
	case : TOK_CASE safe_comma_expr expected_dot_dot optional_comma_expr expected_colon .  (373)

	.  reduce 373


state 919
	do : TOK_DO line_number_info statement TOK_WHILE TOK_LEX_EOF .  (357)

	.  reduce 357


state 920
	do : TOK_DO line_number_info statement TOK_WHILE '(' . safe_comma_expr end_cond expected_semicolon  (356)
	implicit_modifiers : .  (484)

	error  shift 855
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_comma_expr  goto 926
	comma_expr  goto 859
	comma_expr2  goto 435
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 921
	for : TOK_FOR $$34 line_number_info $$35 '(' . unused expected_semicolon for_expr expected_semicolon unused end_cond statement  (363)
	unused : .  (381)
	implicit_modifiers : .  (484)

	error  shift 855
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_LEX_EOF  reduce 381
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	';'  reduce 381

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_comma_expr  goto 927
	comma_expr  goto 859
	comma_expr2  goto 435
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	unused  goto 928
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 922
	cond : TOK_IF $$29 line_number_info $$30 '(' . safe_comma_expr end_cond statement optional_else_part  (337)
	implicit_modifiers : .  (484)

	error  shift 855
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_comma_expr  goto 929
	comma_expr  goto 859
	comma_expr2  goto 435
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 923
	while : TOK_WHILE $$36 line_number_info $$37 '(' . safe_comma_expr end_cond statement  (366)
	implicit_modifiers : .  (484)

	error  shift 855
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_comma_expr  goto 930
	comma_expr  goto 859
	comma_expr2  goto 435
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 924
	switch : TOK_SWITCH $$38 line_number_info $$39 '(' safe_comma_expr . end_cond statement  (371)

	TOK_LEX_EOF  shift 931
	'}'  shift 932
	')'  shift 933
	.  error

	end_cond  goto 934


state 925
	foreach : TOK_FOREACH $$31 line_number_info $$32 '(' expr0 . foreach_lvalues end_cond $$33 statement  (355)

	';'  shift 935
	','  shift 936
	.  error

	foreach_lvalues  goto 937


state 926
	do : TOK_DO line_number_info statement TOK_WHILE '(' safe_comma_expr . end_cond expected_semicolon  (356)

	TOK_LEX_EOF  shift 931
	'}'  shift 932
	')'  shift 933
	.  error

	end_cond  goto 938


state 927
	unused : safe_comma_expr .  (382)

	.  reduce 382


state 928
	for : TOK_FOR $$34 line_number_info $$35 '(' unused . expected_semicolon for_expr expected_semicolon unused end_cond statement  (363)

	TOK_LEX_EOF  shift 856
	';'  shift 857
	.  error

	expected_semicolon  goto 939


state 929
	cond : TOK_IF $$29 line_number_info $$30 '(' safe_comma_expr . end_cond statement optional_else_part  (337)

	TOK_LEX_EOF  shift 931
	'}'  shift 932
	')'  shift 933
	.  error

	end_cond  goto 940


state 930
	while : TOK_WHILE $$36 line_number_info $$37 '(' safe_comma_expr . end_cond statement  (366)

	TOK_LEX_EOF  shift 931
	'}'  shift 932
	')'  shift 933
	.  error

	end_cond  goto 941


state 931
	end_cond : TOK_LEX_EOF .  (340)

	.  reduce 340


state 932
	end_cond : '}' .  (339)

	.  reduce 339


state 933
	end_cond : ')' .  (338)

	.  reduce 338


state 934
	switch : TOK_SWITCH $$38 line_number_info $$39 '(' safe_comma_expr end_cond . statement  (371)
	implicit_modifiers : .  (484)

	error  shift 797
	TOK_CONSTANT  shift 798
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_RETURN  shift 799
	TOK_NOT  shift 234
	TOK_SWITCH  shift 800
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_FOREACH  shift 801
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_BREAK  shift 802
	TOK_CASE  shift 803
	TOK_COLON_COLON  shift 19
	TOK_CONTINUE  shift 804
	TOK_DEFAULT  shift 805
	TOK_DEPRECATED_ID  shift 140
	TOK_DO  shift 806
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FOR  shift 807
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 808
	TOK_RESERVED  shift 22
	TOK_IF  shift 809
	TOK_IMPORT  shift 810
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_WHILE  shift 811
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	';'  shift 812
	'('  shift 244
	'['  shift 245
	'{'  shift 324
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	block  goto 813
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	break  goto 814
	case  goto 815
	catch  goto 252
	comma_expr  goto 816
	comma_expr2  goto 435
	cond  goto 817
	continue  goto 818
	default  goto 819
	do  goto 820
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	for  goto 821
	foreach  goto 822
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	labeled_statement  goto 823
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	normal_label_statement  goto 824
	return  goto 825
	sscanf  goto 266
	statement  goto 942
	statement_with_semicolon  goto 827
	switch  goto 828
	typeof  goto 340
	unused2  goto 829
	while  goto 830
	import  goto 831
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	local_constant  goto 833
	bad_expr_ident  goto 268


state 935
	foreach_lvalues : ';' . foreach_optional_lvalue ';' foreach_optional_lvalue  (351)
	foreach_optional_lvalue : .  (348)
	implicit_modifiers : .  (484)

	error  shift 943
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	';'  reduce 348

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 314
	open_bracket_with_line_info  goto 343
	catch  goto 252
	apply  goto 259
	expr4  goto 344
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	safe_lvalue  goto 944
	lvalue  goto 945
	sscanf  goto 266
	typeof  goto 340
	foreach_optional_lvalue  goto 946
	type  goto 436
	type2  goto 349
	identifier_type  goto 350
	basic_type  goto 342
	bad_expr_ident  goto 268


state 936
	foreach_lvalues : ',' . safe_lvalue  (350)
	implicit_modifiers : .  (484)

	error  shift 943
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 314
	open_bracket_with_line_info  goto 343
	catch  goto 252
	apply  goto 259
	expr4  goto 344
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	safe_lvalue  goto 947
	lvalue  goto 945
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 349
	identifier_type  goto 350
	basic_type  goto 342
	bad_expr_ident  goto 268


state 937
	foreach : TOK_FOREACH $$31 line_number_info $$32 '(' expr0 foreach_lvalues . end_cond $$33 statement  (355)

	TOK_LEX_EOF  shift 931
	'}'  shift 932
	')'  shift 933
	.  error

	end_cond  goto 948


state 938
	do : TOK_DO line_number_info statement TOK_WHILE '(' safe_comma_expr end_cond . expected_semicolon  (356)

	TOK_LEX_EOF  shift 856
	';'  shift 857
	.  error

	expected_semicolon  goto 949


state 939
	for : TOK_FOR $$34 line_number_info $$35 '(' unused expected_semicolon . for_expr expected_semicolon unused end_cond statement  (363)
	for_expr : .  (367)
	implicit_modifiers : .  (484)

	error  shift 855
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_LEX_EOF  reduce 367
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	';'  reduce 367

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_comma_expr  goto 950
	comma_expr  goto 859
	comma_expr2  goto 435
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	for_expr  goto 951
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 940
	cond : TOK_IF $$29 line_number_info $$30 '(' safe_comma_expr end_cond . statement optional_else_part  (337)
	implicit_modifiers : .  (484)

	error  shift 797
	TOK_CONSTANT  shift 798
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_RETURN  shift 799
	TOK_NOT  shift 234
	TOK_SWITCH  shift 800
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_FOREACH  shift 801
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_BREAK  shift 802
	TOK_CASE  shift 803
	TOK_COLON_COLON  shift 19
	TOK_CONTINUE  shift 804
	TOK_DEFAULT  shift 805
	TOK_DEPRECATED_ID  shift 140
	TOK_DO  shift 806
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FOR  shift 807
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 808
	TOK_RESERVED  shift 22
	TOK_IF  shift 809
	TOK_IMPORT  shift 810
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_WHILE  shift 811
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	';'  shift 812
	'('  shift 244
	'['  shift 245
	'{'  shift 324
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	block  goto 813
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	break  goto 814
	case  goto 815
	catch  goto 252
	comma_expr  goto 816
	comma_expr2  goto 435
	cond  goto 817
	continue  goto 818
	default  goto 819
	do  goto 820
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	for  goto 821
	foreach  goto 822
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	labeled_statement  goto 823
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	normal_label_statement  goto 824
	return  goto 825
	sscanf  goto 266
	statement  goto 952
	statement_with_semicolon  goto 827
	switch  goto 828
	typeof  goto 340
	unused2  goto 829
	while  goto 830
	import  goto 831
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	local_constant  goto 833
	bad_expr_ident  goto 268


state 941
	while : TOK_WHILE $$36 line_number_info $$37 '(' safe_comma_expr end_cond . statement  (366)
	implicit_modifiers : .  (484)

	error  shift 797
	TOK_CONSTANT  shift 798
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_RETURN  shift 799
	TOK_NOT  shift 234
	TOK_SWITCH  shift 800
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_FOREACH  shift 801
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_BREAK  shift 802
	TOK_CASE  shift 803
	TOK_COLON_COLON  shift 19
	TOK_CONTINUE  shift 804
	TOK_DEFAULT  shift 805
	TOK_DEPRECATED_ID  shift 140
	TOK_DO  shift 806
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FOR  shift 807
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 808
	TOK_RESERVED  shift 22
	TOK_IF  shift 809
	TOK_IMPORT  shift 810
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_WHILE  shift 811
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	';'  shift 812
	'('  shift 244
	'['  shift 245
	'{'  shift 324
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	block  goto 813
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	break  goto 814
	case  goto 815
	catch  goto 252
	comma_expr  goto 816
	comma_expr2  goto 435
	cond  goto 817
	continue  goto 818
	default  goto 819
	do  goto 820
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	for  goto 821
	foreach  goto 822
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	labeled_statement  goto 823
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	normal_label_statement  goto 824
	return  goto 825
	sscanf  goto 266
	statement  goto 953
	statement_with_semicolon  goto 827
	switch  goto 828
	typeof  goto 340
	unused2  goto 829
	while  goto 830
	import  goto 831
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	local_constant  goto 833
	bad_expr_ident  goto 268


state 942
	switch : TOK_SWITCH $$38 line_number_info $$39 '(' safe_comma_expr end_cond statement .  (371)

	.  reduce 371


state 943
	safe_lvalue : error .  (344)

	.  reduce 344


state 944
	foreach_optional_lvalue : safe_lvalue .  (349)

	.  reduce 349


state 945
	safe_lvalue : lvalue .  (343)

	.  reduce 343


state 946
	foreach_lvalues : ';' foreach_optional_lvalue . ';' foreach_optional_lvalue  (351)

	';'  shift 954
	.  error


state 947
	foreach_lvalues : ',' safe_lvalue .  (350)

	.  reduce 350


state 948
	foreach : TOK_FOREACH $$31 line_number_info $$32 '(' expr0 foreach_lvalues end_cond . $$33 statement  (355)
	$$33 : .  (354)

	.  reduce 354

	$$33  goto 955


state 949
	do : TOK_DO line_number_info statement TOK_WHILE '(' safe_comma_expr end_cond expected_semicolon .  (356)

	.  reduce 356


state 950
	for_expr : safe_comma_expr .  (368)

	.  reduce 368


state 951
	for : TOK_FOR $$34 line_number_info $$35 '(' unused expected_semicolon for_expr . expected_semicolon unused end_cond statement  (363)

	TOK_LEX_EOF  shift 856
	';'  shift 857
	.  error

	expected_semicolon  goto 956


952: shift/reduce conflict (shift 957, reduce 341) on TOK_ELSE
state 952
	cond : TOK_IF $$29 line_number_info $$30 '(' safe_comma_expr end_cond statement . optional_else_part  (337)
	optional_else_part : .  (341)

	TOK_ELSE  shift 957
	error  reduce 341
	TOK_CONSTANT  reduce 341
	TOK_FLOAT  reduce 341
	TOK_STRING  reduce 341
	TOK_NUMBER  reduce 341
	TOK_INC  reduce 341
	TOK_DEC  reduce 341
	TOK_RETURN  reduce 341
	TOK_NOT  reduce 341
	TOK_SWITCH  reduce 341
	TOK_SSCANF  reduce 341
	TOK_CATCH  reduce 341
	TOK_FOREACH  reduce 341
	TOK_LEX_EOF  reduce 341
	TOK_ARRAY_ID  reduce 341
	TOK_ATTRIBUTE_ID  reduce 341
	TOK_BREAK  reduce 341
	TOK_CASE  reduce 341
	TOK_CLASS  reduce 341
	TOK_COLON_COLON  reduce 341
	TOK_CONTINUE  reduce 341
	TOK_DEFAULT  reduce 341
	TOK_DEPRECATED_ID  reduce 341
	TOK_DO  reduce 341
	TOK_ENUM  reduce 341
	TOK_EXTERN  reduce 341
	TOK_FLOAT_ID  reduce 341
	TOK_FOR  reduce 341
	TOK_FUNCTION_ID  reduce 341
	TOK_GAUGE  reduce 341
	TOK_GLOBAL  reduce 341
	TOK_IDENTIFIER  reduce 341
	TOK_RESERVED  reduce 341
	TOK_IF  reduce 341
	TOK_IMPORT  reduce 341
	TOK_INHERIT  reduce 341
	TOK_INLINE  reduce 341
	TOK_LOCAL_ID  reduce 341
	TOK_FINAL_ID  reduce 341
	TOK_FUNCTION_NAME  reduce 341
	TOK_INT_ID  reduce 341
	TOK_LAMBDA  reduce 341
	TOK_MULTISET_ID  reduce 341
	TOK_MULTISET_START  reduce 341
	TOK_MAPPING_ID  reduce 341
	TOK_MIXED_ID  reduce 341
	TOK_OBJECT_ID  reduce 341
	TOK_PRIVATE  reduce 341
	TOK_PROGRAM_ID  reduce 341
	TOK_PROTECTED  reduce 341
	TOK_PREDEF  reduce 341
	TOK_PUBLIC  reduce 341
	TOK_STATIC  reduce 341
	TOK_STRING_ID  reduce 341
	TOK_TYPEOF  reduce 341
	TOK_VARIANT  reduce 341
	TOK_VERSION  reduce 341
	TOK_VOID_ID  reduce 341
	TOK_WHILE  reduce 341
	TOK_OPTIONAL  reduce 341
	TOK_AUTO_ID  reduce 341
	'-'  reduce 341
	'~'  reduce 341
	';'  reduce 341
	'}'  reduce 341
	'('  reduce 341
	'['  reduce 341
	'{'  reduce 341
	'.'  reduce 341

	optional_else_part  goto 958


state 953
	while : TOK_WHILE $$36 line_number_info $$37 '(' safe_comma_expr end_cond statement .  (366)

	.  reduce 366


state 954
	foreach_lvalues : ';' foreach_optional_lvalue ';' . foreach_optional_lvalue  (351)
	foreach_optional_lvalue : .  (348)
	implicit_modifiers : .  (484)

	error  shift 943
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_LEX_EOF  reduce 348
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	'}'  reduce 348
	')'  reduce 348

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 314
	open_bracket_with_line_info  goto 343
	catch  goto 252
	apply  goto 259
	expr4  goto 344
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	safe_lvalue  goto 944
	lvalue  goto 945
	sscanf  goto 266
	typeof  goto 340
	foreach_optional_lvalue  goto 959
	type  goto 436
	type2  goto 349
	identifier_type  goto 350
	basic_type  goto 342
	bad_expr_ident  goto 268


state 955
	foreach : TOK_FOREACH $$31 line_number_info $$32 '(' expr0 foreach_lvalues end_cond $$33 . statement  (355)
	implicit_modifiers : .  (484)

	error  shift 797
	TOK_CONSTANT  shift 798
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_RETURN  shift 799
	TOK_NOT  shift 234
	TOK_SWITCH  shift 800
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_FOREACH  shift 801
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_BREAK  shift 802
	TOK_CASE  shift 803
	TOK_COLON_COLON  shift 19
	TOK_CONTINUE  shift 804
	TOK_DEFAULT  shift 805
	TOK_DEPRECATED_ID  shift 140
	TOK_DO  shift 806
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FOR  shift 807
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 808
	TOK_RESERVED  shift 22
	TOK_IF  shift 809
	TOK_IMPORT  shift 810
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_WHILE  shift 811
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	';'  shift 812
	'('  shift 244
	'['  shift 245
	'{'  shift 324
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	block  goto 813
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	break  goto 814
	case  goto 815
	catch  goto 252
	comma_expr  goto 816
	comma_expr2  goto 435
	cond  goto 817
	continue  goto 818
	default  goto 819
	do  goto 820
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	for  goto 821
	foreach  goto 822
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	labeled_statement  goto 823
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	normal_label_statement  goto 824
	return  goto 825
	sscanf  goto 266
	statement  goto 960
	statement_with_semicolon  goto 827
	switch  goto 828
	typeof  goto 340
	unused2  goto 829
	while  goto 830
	import  goto 831
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	local_constant  goto 833
	bad_expr_ident  goto 268


state 956
	for : TOK_FOR $$34 line_number_info $$35 '(' unused expected_semicolon for_expr expected_semicolon . unused end_cond statement  (363)
	unused : .  (381)
	implicit_modifiers : .  (484)

	error  shift 855
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_NOT  shift 234
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_COLON_COLON  shift 19
	TOK_DEPRECATED_ID  shift 140
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 21
	TOK_RESERVED  shift 22
	TOK_IMPORT  shift 84
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	'('  shift 244
	'['  shift 245
	'.'  shift 27
	TOK_LEX_EOF  reduce 381
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484
	'}'  reduce 381
	')'  reduce 381

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	catch  goto 252
	safe_comma_expr  goto 927
	comma_expr  goto 859
	comma_expr2  goto 435
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	sscanf  goto 266
	typeof  goto 340
	unused  goto 961
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	bad_expr_ident  goto 268


state 957
	optional_else_part : TOK_ELSE . statement  (342)
	implicit_modifiers : .  (484)

	error  shift 797
	TOK_CONSTANT  shift 798
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_RETURN  shift 799
	TOK_NOT  shift 234
	TOK_SWITCH  shift 800
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_FOREACH  shift 801
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_BREAK  shift 802
	TOK_CASE  shift 803
	TOK_COLON_COLON  shift 19
	TOK_CONTINUE  shift 804
	TOK_DEFAULT  shift 805
	TOK_DEPRECATED_ID  shift 140
	TOK_DO  shift 806
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FOR  shift 807
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 808
	TOK_RESERVED  shift 22
	TOK_IF  shift 809
	TOK_IMPORT  shift 810
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_WHILE  shift 811
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	';'  shift 812
	'('  shift 244
	'['  shift 245
	'{'  shift 324
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	block  goto 813
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	break  goto 814
	case  goto 815
	catch  goto 252
	comma_expr  goto 816
	comma_expr2  goto 435
	cond  goto 817
	continue  goto 818
	default  goto 819
	do  goto 820
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	for  goto 821
	foreach  goto 822
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	labeled_statement  goto 823
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	normal_label_statement  goto 824
	return  goto 825
	sscanf  goto 266
	statement  goto 962
	statement_with_semicolon  goto 827
	switch  goto 828
	typeof  goto 340
	unused2  goto 829
	while  goto 830
	import  goto 831
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	local_constant  goto 833
	bad_expr_ident  goto 268


state 958
	cond : TOK_IF $$29 line_number_info $$30 '(' safe_comma_expr end_cond statement optional_else_part .  (337)

	.  reduce 337


state 959
	foreach_lvalues : ';' foreach_optional_lvalue ';' foreach_optional_lvalue .  (351)

	.  reduce 351


state 960
	foreach : TOK_FOREACH $$31 line_number_info $$32 '(' expr0 foreach_lvalues end_cond $$33 statement .  (355)

	.  reduce 355


state 961
	for : TOK_FOR $$34 line_number_info $$35 '(' unused expected_semicolon for_expr expected_semicolon unused . end_cond statement  (363)

	TOK_LEX_EOF  shift 931
	'}'  shift 932
	')'  shift 933
	.  error

	end_cond  goto 963


state 962
	optional_else_part : TOK_ELSE statement .  (342)

	.  reduce 342


state 963
	for : TOK_FOR $$34 line_number_info $$35 '(' unused expected_semicolon for_expr expected_semicolon unused end_cond . statement  (363)
	implicit_modifiers : .  (484)

	error  shift 797
	TOK_CONSTANT  shift 798
	TOK_FLOAT  shift 230
	TOK_STRING  shift 18
	TOK_NUMBER  shift 231
	TOK_INC  shift 232
	TOK_DEC  shift 233
	TOK_RETURN  shift 799
	TOK_NOT  shift 234
	TOK_SWITCH  shift 800
	TOK_SSCANF  shift 235
	TOK_CATCH  shift 236
	TOK_FOREACH  shift 801
	TOK_ARRAY_ID  shift 138
	TOK_ATTRIBUTE_ID  shift 139
	TOK_BREAK  shift 802
	TOK_CASE  shift 803
	TOK_COLON_COLON  shift 19
	TOK_CONTINUE  shift 804
	TOK_DEFAULT  shift 805
	TOK_DEPRECATED_ID  shift 140
	TOK_DO  shift 806
	TOK_ELSE  shift 74
	TOK_EXTERN  shift 76
	TOK_FLOAT_ID  shift 141
	TOK_FOR  shift 807
	TOK_FUNCTION_ID  shift 142
	TOK_GAUGE  shift 238
	TOK_GLOBAL  shift 20
	TOK_IDENTIFIER  shift 808
	TOK_RESERVED  shift 22
	TOK_IF  shift 809
	TOK_IMPORT  shift 810
	TOK_INHERIT  shift 85
	TOK_INLINE  shift 86
	TOK_LOCAL_ID  shift 23
	TOK_FINAL_ID  shift 88
	TOK_FUNCTION_NAME  shift 24
	TOK_INT_ID  shift 145
	TOK_LAMBDA  shift 239
	TOK_MULTISET_ID  shift 146
	TOK_MULTISET_START  shift 240
	TOK_MAPPING_ID  shift 147
	TOK_MIXED_ID  shift 148
	TOK_OBJECT_ID  shift 149
	TOK_PRIVATE  shift 96
	TOK_PROGRAM_ID  shift 150
	TOK_PROTECTED  shift 98
	TOK_PREDEF  shift 241
	TOK_PUBLIC  shift 100
	TOK_STATIC  shift 101
	TOK_STRING_ID  shift 151
	TOK_TYPEOF  shift 152
	TOK_VARIANT  shift 105
	TOK_VERSION  shift 26
	TOK_VOID_ID  shift 153
	TOK_WHILE  shift 811
	TOK_OPTIONAL  shift 107
	TOK_AUTO_ID  shift 154
	'-'  shift 242
	'~'  shift 243
	';'  shift 812
	'('  shift 244
	'['  shift 245
	'{'  shift 324
	'.'  shift 27
	TOK_CLASS  reduce 484
	TOK_ENUM  reduce 484

	implicit_modifiers  goto 246
	inherit_specifier  goto 28
	cast  goto 247
	soft_cast  goto 248
	string_or_identifier  goto 29
	string_segment  goto 30
	string  goto 249
	block  goto 813
	open_paren_with_line_info  goto 250
	open_bracket_with_line_info  goto 251
	break  goto 814
	case  goto 815
	catch  goto 252
	comma_expr  goto 816
	comma_expr2  goto 435
	cond  goto 817
	continue  goto 818
	default  goto 819
	do  goto 820
	expr01  goto 254
	expr1  goto 255
	expr2  goto 256
	expr3  goto 257
	expr0  goto 339
	apply  goto 259
	expr4  goto 260
	expr5  goto 261
	for  goto 821
	foreach  goto 822
	gauge  goto 262
	unqualified_idents  goto 345
	qualified_ident  goto 33
	qualified_idents  goto 34
	idents  goto 263
	labeled_statement  goto 823
	lambda  goto 264
	literal_expr  goto 265
	low_idents  goto 36
	normal_label_statement  goto 824
	return  goto 825
	sscanf  goto 266
	statement  goto 964
	statement_with_semicolon  goto 827
	switch  goto 828
	typeof  goto 340
	unused2  goto 829
	while  goto 830
	import  goto 831
	type  goto 436
	type2  goto 437
	identifier_type  goto 350
	simple_type2  goto 438
	basic_type  goto 342
	local_constant  goto 833
	bad_expr_ident  goto 268


state 964
	for : TOK_FOR $$34 line_number_info $$35 '(' unused expected_semicolon for_expr expected_semicolon unused end_cond statement .  (363)

	.  reduce 363


State 340 contains 3 reduce/reduce conflicts.
State 952 contains 1 shift/reduce conflict.


113 terminals, 204 nonterminals
654 grammar rules, 965 states
